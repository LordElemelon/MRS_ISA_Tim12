{"version":3,"sources":["webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/admins/admins.component.html","webpack:///./src/app/admins/admins.component.scss","webpack:///./src/app/admins/admins.component.ts","webpack:///./src/app/airline/airline.component.html","webpack:///./src/app/airline/airline.component.scss","webpack:///./src/app/airline/airline.component.ts","webpack:///./src/app/airlines-sys-admin/airlines-sys-admin.component.html","webpack:///./src/app/airlines-sys-admin/airlines-sys-admin.component.scss","webpack:///./src/app/airlines-sys-admin/airlines-sys-admin.component.ts","webpack:///./src/app/airlines/airlines.component.html","webpack:///./src/app/airlines/airlines.component.scss","webpack:///./src/app/airlines/airlines.component.ts","webpack:///./src/app/app-routing/app-routing.module.ts","webpack:///./src/app/app-routing/routes.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/branches/branches.component.html","webpack:///./src/app/branches/branches.component.scss","webpack:///./src/app/branches/branches.component.ts","webpack:///./src/app/car-business-reports/car-business-reports.component.html","webpack:///./src/app/car-business-reports/car-business-reports.component.scss","webpack:///./src/app/car-business-reports/car-business-reports.component.ts","webpack:///./src/app/car-discounts/car-discounts.component.html","webpack:///./src/app/car-discounts/car-discounts.component.scss","webpack:///./src/app/car-discounts/car-discounts.component.ts","webpack:///./src/app/car-reservation-list/car-reservation-list.component.html","webpack:///./src/app/car-reservation-list/car-reservation-list.component.scss","webpack:///./src/app/car-reservation-list/car-reservation-list.component.ts","webpack:///./src/app/carprices/carprices.component.html","webpack:///./src/app/carprices/carprices.component.scss","webpack:///./src/app/carprices/carprices.component.ts","webpack:///./src/app/cars/cars.component.html","webpack:///./src/app/cars/cars.component.scss","webpack:///./src/app/cars/cars.component.ts","webpack:///./src/app/change-rental-service/change-rental-service.component.html","webpack:///./src/app/change-rental-service/change-rental-service.component.scss","webpack:///./src/app/change-rental-service/change-rental-service.component.ts","webpack:///./src/app/flights/flights.component.html","webpack:///./src/app/flights/flights.component.scss","webpack:///./src/app/flights/flights.component.ts","webpack:///./src/app/friends/friends.component.html","webpack:///./src/app/friends/friends.component.scss","webpack:///./src/app/friends/friends.component.ts","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.scss","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.scss","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/hotel/hotel.component.html","webpack:///./src/app/hotel/hotel.component.scss","webpack:///./src/app/hotel/hotel.component.ts","webpack:///./src/app/hotels/hotels.component.html","webpack:///./src/app/hotels/hotels.component.scss","webpack:///./src/app/hotels/hotels.component.ts","webpack:///./src/app/list-branches/list-branches.component.html","webpack:///./src/app/list-branches/list-branches.component.scss","webpack:///./src/app/list-branches/list-branches.component.ts","webpack:///./src/app/list-car-discounts/list-car-discounts.component.html","webpack:///./src/app/list-car-discounts/list-car-discounts.component.scss","webpack:///./src/app/list-car-discounts/list-car-discounts.component.ts","webpack:///./src/app/list-cars-admin/list-cars-admin.component.html","webpack:///./src/app/list-cars-admin/list-cars-admin.component.scss","webpack:///./src/app/list-cars-admin/list-cars-admin.component.ts","webpack:///./src/app/listallservices/listallservices.component.html","webpack:///./src/app/listallservices/listallservices.component.scss","webpack:///./src/app/listallservices/listallservices.component.ts","webpack:///./src/app/locations/locations.component.html","webpack:///./src/app/locations/locations.component.scss","webpack:///./src/app/locations/locations.component.ts","webpack:///./src/app/login-service.service.ts","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.scss","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/map/map.component.html","webpack:///./src/app/map/map.component.scss","webpack:///./src/app/map/map.component.ts","webpack:///./src/app/rate-car-and-service/rate-car-and-service.component.html","webpack:///./src/app/rate-car-and-service/rate-car-and-service.component.scss","webpack:///./src/app/rate-car-and-service/rate-car-and-service.component.ts","webpack:///./src/app/rate-room-and-hotel/rate-room-and-hotel.component.html","webpack:///./src/app/rate-room-and-hotel/rate-room-and-hotel.component.scss","webpack:///./src/app/rate-room-and-hotel/rate-room-and-hotel.component.ts","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.scss","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/rentalservices/rentalservices.component.html","webpack:///./src/app/rentalservices/rentalservices.component.scss","webpack:///./src/app/rentalservices/rentalservices.component.ts","webpack:///./src/app/reservation-flow/reservation-flow.component.html","webpack:///./src/app/reservation-flow/reservation-flow.component.scss","webpack:///./src/app/reservation-flow/reservation-flow.component.ts","webpack:///./src/app/reserve-car-special/reserve-car-special.component.html","webpack:///./src/app/reserve-car-special/reserve-car-special.component.scss","webpack:///./src/app/reserve-car-special/reserve-car-special.component.ts","webpack:///./src/app/reserve-room/reserve-room.component.html","webpack:///./src/app/reserve-room/reserve-room.component.scss","webpack:///./src/app/reserve-room/reserve-room.component.ts","webpack:///./src/app/reserve-seat/reserve-seat.component.html","webpack:///./src/app/reserve-seat/reserve-seat.component.scss","webpack:///./src/app/reserve-seat/reserve-seat.component.ts","webpack:///./src/app/reservecar/reservecar.component.html","webpack:///./src/app/reservecar/reservecar.component.scss","webpack:///./src/app/reservecar/reservecar.component.ts","webpack:///./src/app/room-business-reports/room-business-reports.component.html","webpack:///./src/app/room-business-reports/room-business-reports.component.scss","webpack:///./src/app/room-business-reports/room-business-reports.component.ts","webpack:///./src/app/room-quick-reservation/room-quick-reservation.component.html","webpack:///./src/app/room-quick-reservation/room-quick-reservation.component.scss","webpack:///./src/app/room-quick-reservation/room-quick-reservation.component.ts","webpack:///./src/app/room-reservation-list/room-reservation-list.component.html","webpack:///./src/app/room-reservation-list/room-reservation-list.component.scss","webpack:///./src/app/room-reservation-list/room-reservation-list.component.ts","webpack:///./src/app/room/room.component.html","webpack:///./src/app/room/room.component.scss","webpack:///./src/app/room/room.component.ts","webpack:///./src/app/rooms-list/rooms-list.component.html","webpack:///./src/app/rooms-list/rooms-list.component.scss","webpack:///./src/app/rooms-list/rooms-list.component.ts","webpack:///./src/app/services/item.service.ts","webpack:///./src/app/shared/baseUrl.ts","webpack:///./src/app/shared/sdk/index.ts","webpack:///./src/app/shared/sdk/lb.config.ts","webpack:///./src/app/shared/sdk/models/Airline.ts","webpack:///./src/app/shared/sdk/models/BaseModels.ts","webpack:///./src/app/shared/sdk/models/Branch.ts","webpack:///./src/app/shared/sdk/models/Car.ts","webpack:///./src/app/shared/sdk/models/CarPrice.ts","webpack:///./src/app/shared/sdk/models/CarReservation.ts","webpack:///./src/app/shared/sdk/models/CarSpecialOffer.ts","webpack:///./src/app/shared/sdk/models/Carid.ts","webpack:///./src/app/shared/sdk/models/Email.ts","webpack:///./src/app/shared/sdk/models/FireLoop.ts","webpack:///./src/app/shared/sdk/models/FireLoopRef.ts","webpack:///./src/app/shared/sdk/models/Flight.ts","webpack:///./src/app/shared/sdk/models/Friendship.ts","webpack:///./src/app/shared/sdk/models/Hotel.ts","webpack:///./src/app/shared/sdk/models/HotelDiscount.ts","webpack:///./src/app/shared/sdk/models/HotelSpecialOffer.ts","webpack:///./src/app/shared/sdk/models/Location.ts","webpack:///./src/app/shared/sdk/models/Myuser.ts","webpack:///./src/app/shared/sdk/models/QuickFlightReservation.ts","webpack:///./src/app/shared/sdk/models/RentalService.ts","webpack:///./src/app/shared/sdk/models/ReservationOffer.ts","webpack:///./src/app/shared/sdk/models/Room.ts","webpack:///./src/app/shared/sdk/models/RoomPrice.ts","webpack:///./src/app/shared/sdk/models/RoomReservation.ts","webpack:///./src/app/shared/sdk/models/Roomid.ts","webpack:///./src/app/shared/sdk/models/Seat.ts","webpack:///./src/app/shared/sdk/models/SeatId.ts","webpack:///./src/app/shared/sdk/models/SeatReservation.ts","webpack:///./src/app/shared/sdk/models/User.ts","webpack:///./src/app/shared/sdk/models/UserInfo.ts","webpack:///./src/app/shared/sdk/models/index.ts","webpack:///./src/app/shared/sdk/services/core/auth.service.ts","webpack:///./src/app/shared/sdk/services/core/base.service.ts","webpack:///./src/app/shared/sdk/services/core/error.service.ts","webpack:///./src/app/shared/sdk/services/core/index.ts","webpack:///./src/app/shared/sdk/services/core/io.service.ts","webpack:///./src/app/shared/sdk/services/core/real.time.ts","webpack:///./src/app/shared/sdk/services/custom/Airline.ts","webpack:///./src/app/shared/sdk/services/custom/Branch.ts","webpack:///./src/app/shared/sdk/services/custom/Car.ts","webpack:///./src/app/shared/sdk/services/custom/CarPrice.ts","webpack:///./src/app/shared/sdk/services/custom/CarReservation.ts","webpack:///./src/app/shared/sdk/services/custom/CarSpecialOffer.ts","webpack:///./src/app/shared/sdk/services/custom/Carid.ts","webpack:///./src/app/shared/sdk/services/custom/Email.ts","webpack:///./src/app/shared/sdk/services/custom/Flight.ts","webpack:///./src/app/shared/sdk/services/custom/Friendship.ts","webpack:///./src/app/shared/sdk/services/custom/Hotel.ts","webpack:///./src/app/shared/sdk/services/custom/HotelDiscount.ts","webpack:///./src/app/shared/sdk/services/custom/HotelSpecialOffer.ts","webpack:///./src/app/shared/sdk/services/custom/Location.ts","webpack:///./src/app/shared/sdk/services/custom/Myuser.ts","webpack:///./src/app/shared/sdk/services/custom/QuickFlightReservation.ts","webpack:///./src/app/shared/sdk/services/custom/RentalService.ts","webpack:///./src/app/shared/sdk/services/custom/ReservationOffer.ts","webpack:///./src/app/shared/sdk/services/custom/Room.ts","webpack:///./src/app/shared/sdk/services/custom/RoomPrice.ts","webpack:///./src/app/shared/sdk/services/custom/RoomReservation.ts","webpack:///./src/app/shared/sdk/services/custom/Roomid.ts","webpack:///./src/app/shared/sdk/services/custom/SDKModels.ts","webpack:///./src/app/shared/sdk/services/custom/Seat.ts","webpack:///./src/app/shared/sdk/services/custom/SeatId.ts","webpack:///./src/app/shared/sdk/services/custom/SeatReservation.ts","webpack:///./src/app/shared/sdk/services/custom/User.ts","webpack:///./src/app/shared/sdk/services/custom/UserInfo.ts","webpack:///./src/app/shared/sdk/services/custom/index.ts","webpack:///./src/app/shared/sdk/services/custom/logger.service.ts","webpack:///./src/app/shared/sdk/services/index.ts","webpack:///./src/app/shared/sdk/sockets/socket.browser.ts","webpack:///./src/app/shared/sdk/sockets/socket.connections.ts","webpack:///./src/app/shared/sdk/sockets/socket.driver.ts","webpack:///./src/app/shared/sdk/storage/cookie.browser.ts","webpack:///./src/app/shared/sdk/storage/storage.browser.ts","webpack:///./src/app/shared/sdk/storage/storage.swaps.ts","webpack:///./src/app/user/user.component.html","webpack:///./src/app/user/user.component.scss","webpack:///./src/app/user/user.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///ws (ignored)"],"names":[],"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","file":"main.js","sourcesContent":["var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-SG\": \"./node_modules/moment/locale/en-SG.js\",\n\t\"./en-SG.js\": \"./node_modules/moment/locale/en-SG.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./ga\": \"./node_modules/moment/locale/ga.js\",\n\t\"./ga.js\": \"./node_modules/moment/locale/ga.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it-ch\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it-ch.js\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ku\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ku.js\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\r\\n  <a mat-button (click) = \\\"addButton()\\\" *ngIf=\\\"userType==='admin'\\\"> Add</a>\\r\\n  <span class=\\\"flex-spacer\\\"></span>\\r\\n</mat-toolbar>\\r\\n\\r\\n\\r\\n<div *ngIf=\\\"addActive&&userType==='admin'\\\">\\r\\n  <form novalidate [formGroup]=\\\"addAdminForm\\\" #fformAddAirline=\\\"ngForm\\\" (ngSubmit)=\\\"onAddAdminSubmit()\\\">\\r\\n    <p>\\r\\n      <mat-form-field class=\\\"half-width\\\">\\r\\n        <input matInput formControlName=\\\"username\\\" placeholder=\\\"Username\\\" type=\\\"text\\\">\\r\\n        <mat-error *ngIf=\\\"addAdminFormErrors.username\\\">\\r\\n          {{ addAdminFormErrors.username }}\\r\\n        </mat-error>\\r\\n      </mat-form-field>\\r\\n    </p>\\r\\n    <p>\\r\\n      <mat-form-field class=\\\"half-width\\\">\\r\\n        <input matInput formControlName=\\\"email\\\" placeholder=\\\"E-mail\\\" type=\\\"text\\\">\\r\\n        <mat-error *ngIf=\\\"addAdminFormErrors.email\\\">\\r\\n          {{ addAdminFormErrors.email }}\\r\\n        </mat-error>\\r\\n      </mat-form-field>\\r\\n    </p>\\r\\n    <p>\\r\\n      <mat-form-field>\\r\\n        <mat-label>User type</mat-label>\\r\\n        <mat-select [(value)]=\\\"selectedType\\\" (valueChange)=\\\"changeCompanies()\\\">\\r\\n          <mat-option value=\\\"airportAdmin\\\">Airline admin</mat-option>\\r\\n          <mat-option value=\\\"hotelAdmin\\\">Hotel admin</mat-option>\\r\\n          <mat-option value=\\\"rentalServiceAdmin\\\">Rental service admin</mat-option>\\r\\n        </mat-select>\\r\\n      </mat-form-field>\\r\\n    </p>\\r\\n    <p>\\r\\n      <mat-form-field>\\r\\n        <mat-label>Company</mat-label>\\r\\n        <mat-select [(value)]=\\\"selectedCompany\\\">\\r\\n          <mat-option *ngFor=\\\"let company of availableCompanies\\\" [value]=\\\"company\\\">\\r\\n            {{company}}\\r\\n          </mat-option>\\r\\n        </mat-select>\\r\\n      </mat-form-field>\\r\\n    </p>\\r\\n    <button type=\\\"submit\\\" mat-button class=\\\"background-primary text-floral-white\\\"\\r\\n            [disabled]=\\\"addAdminForm.invalid\\\">Submit</button>\\r\\n  </form>\\r\\n</div>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWlucy9hZG1pbnMuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport {LoginServiceService} from '../login-service.service';\r\nimport {MatSnackBar} from '@angular/material';\r\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\r\nimport {AirlineApi, HotelApi, MyuserApi, RentalServiceApi} from '../shared/sdk/services/custom';\r\nimport {Observable} from 'rxjs';\r\nimport {Airline, Hotel, RentalService} from '../shared/sdk/models';\r\n\r\n@Component({\r\n  selector: 'app-admins',\r\n  templateUrl: './admins.component.html',\r\n  styleUrls: ['./admins.component.scss']\r\n})\r\nexport class AdminsComponent implements OnInit {\r\n  userType: string;\r\n  addActive = true;\r\n  selectedType = 'airportAdmin';\r\n  availableCompanies = ['1', 'cao', '3'];\r\n  selectedCompany = '';\r\n  addAdminForm: FormGroup;\r\n  addAdminFormErrors = {\r\n    'username': '',\r\n    'email': ''\r\n  };\r\n\r\n  airlines: Airline[] = [];\r\n  hotels: Hotel[] = [];\r\n  rentalServices: RentalService[] = [];\r\n\r\n  addAdminFormValidationMessages = {\r\n    'username': {\r\n      'required': 'Username is required'\r\n    },\r\n    'email': {\r\n      'required': 'E-mail is required'\r\n    }\r\n  };\r\n\r\n  constructor(\r\n    private loginService: LoginServiceService,\r\n    private snackBar: MatSnackBar,\r\n    private fb: FormBuilder,\r\n    private airlineservice: AirlineApi,\r\n    private hotelservice: HotelApi,\r\n    private rentalserviceservice: RentalServiceApi,\r\n    private myuserservice: MyuserApi\r\n  ) {\r\n    this.loginService.user.subscribe(data => {\r\n      if (data) {\r\n        this.userType = data.user.type;\r\n      }\r\n    });\r\n    this.airlineservice.find({where: {myuserId: ''}})\r\n      .subscribe((result: Airline[]) => {\r\n        this.airlines = result;\r\n        this.changeCompanies();\r\n      });\r\n    this.hotelservice.find({where: {myuserId: ''}})\r\n      .subscribe((result: Hotel[]) => this.hotels = result);\r\n    this.rentalserviceservice.find({where: {myuserId: ''}})\r\n      .subscribe((result: RentalService[]) => this.rentalServices = result);\r\n    this.createAddAidminForm();\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  openSnackBar(message: string, action: string) {\r\n    this.snackBar.open(message, action, {\r\n      duration: 2000,\r\n    });\r\n  }\r\n\r\n  onAddAdminValueChanged(data?: any) {\r\n    if (!this.addAdminForm) return;\r\n    const form = this.addAdminForm;\r\n    for (const field in this.addAdminFormErrors)  {\r\n      if (this.addAdminFormErrors.hasOwnProperty(field))  {\r\n        this.addAdminFormErrors[field] = '';\r\n        const control = form.get(field);\r\n        if (control && !control.valid) {\r\n          const messages = this.addAdminFormValidationMessages[field];\r\n          for (const key in control.errors)  {\r\n            if (control.errors.hasOwnProperty(key))  {\r\n              this.addAdminFormErrors[field] += messages[key] + ' ';\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  createAddAidminForm() {\r\n    this.addAdminForm = this.fb.group({\r\n      'username': ['', Validators.required],\r\n      'email': ['', Validators.required]\r\n    });\r\n    this.addAdminForm.valueChanges\r\n      .subscribe(data => this.onAddAdminValueChanged(data));\r\n    this.onAddAdminValueChanged();\r\n  }\r\n\r\n  onAddAdminSubmit() {\r\n    if (this.selectedCompany === '') {\r\n      this.openSnackBar('Please select a company', 'Dismiss');\r\n      return;\r\n    }\r\n    const user = this.addAdminForm.value;\r\n    this.myuserservice.registerAnAdmin(user.username, '123', this.selectedType,\r\n      user.email, 'boro', true)\r\n      .subscribe(result => {\r\n        console.log(result);\r\n        if (this.selectedType === 'airportAdmin') {\r\n          for (const airline of this.airlines) {\r\n            if (this.selectedCompany === airline.name) {\r\n              airline.myuserId = result.retval.id;\r\n              this.airlineservice.updateAttributes(airline.id,\r\n                {myuserId: result.id})\r\n                .subscribe(result1 => {\r\n                this.openSnackBar('Added admin succesfully', 'Dismiss');\r\n              }, err => {\r\n                  this.openSnackBar('Something went wrong. Please try again', 'Dismiss');\r\n                });\r\n              break;\r\n            }\r\n          }\r\n        } else if (this.selectedType === 'hotelAdmin') {\r\n          for (const hotel of this.hotels) {\r\n            if (this.selectedCompany === hotel.name) {\r\n              hotel.myuserId = result.retval.id;\r\n              console.log(hotel);\r\n              this.hotelservice.updateAttributes(hotel.id,\r\n                hotel)\r\n                .subscribe(result1 => {\r\n                  this.openSnackBar('Added admin succesfully', 'Dismiss');\r\n                }, err => {\r\n                  this.openSnackBar('Something went wrong. Please try again', 'Dismiss');\r\n                });\r\n              break;\r\n            }\r\n          }\r\n        } else {\r\n          for (const rac of this.rentalServices) {\r\n            if (this.selectedCompany === rac.name) {\r\n              rac.myuserId = result.retval.id;\r\n              this.rentalserviceservice.updateAttributes(rac.id,\r\n                rac)\r\n                .subscribe(result1 => {\r\n                  this.openSnackBar('Added admin succesfully', 'Dismiss');\r\n                }, err => {\r\n                  this.openSnackBar('Something went wrong. Please try again', 'Dismiss');\r\n                });\r\n              break;\r\n            }\r\n          }\r\n        }\r\n      }, err => {\r\n        this.openSnackBar('Something went wrong. Please try again', 'Dismiss');\r\n      });\r\n  }\r\n\r\n  changeCompanies() {\r\n    this.selectedCompany = '';\r\n    this.availableCompanies = [];\r\n    if (this.selectedType === 'airportAdmin'){\r\n      for (const airline of this.airlines) {\r\n        this.availableCompanies.push(airline.name);\r\n      }\r\n    } else if (this.selectedType === 'hotelAdmin') {\r\n      for (const hotel of this.hotels) {\r\n        this.availableCompanies.push(hotel.name);\r\n      }\r\n    } else {\r\n      for (const rac of this.rentalServices) {\r\n        this.availableCompanies.push(rac.name);\r\n      }\r\n    }\r\n  }\r\n\r\n  addButton() {\r\n    this.addActive = true;\r\n  }\r\n}\r\n","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\r\\n  <a mat-button (click) = \\\"modifyButton()\\\"> Update </a>\\r\\n  <a mat-button (click) = \\\"flightsButton()\\\"> Flights </a>\\r\\n  <span class=\\\"flex-spacer\\\"></span>\\r\\n</mat-toolbar>\\r\\n\\r\\n<div *ngIf = \\\"modifyActive\\\"\\r\\n  fxLayout=\\\"rows\\\"\\r\\n  fxLayoutGap=\\\"80px\\\">\\r\\n  <div class=\\\"container\\\"\\r\\n    fxLayout=\\\"column\\\"\\r\\n    fxLayoutGap=\\\"10px\\\">\\r\\n\\r\\n    <div fxFlex>\\r\\n      <div>\\r\\n          <h3>Modify your airline information</h3>\\r\\n          <hr>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div fxFlex class=\\\"form-size\\\">\\r\\n        <form novalidate [formGroup]=\\\"modifyAirlineForm\\\" #fformModifyAirline=\\\"ngForm\\\" (ngSubmit)=\\\"onModifyAirlineSubmit()\\\">\\r\\n          <p>\\r\\n            <mat-form-field class=\\\"half-width\\\">\\r\\n              <input matInput formControlName=\\\"name\\\" placeholder=\\\"Airline Name\\\" type=\\\"text\\\">\\r\\n              <mat-error *ngIf=\\\"modifyAirlineFormErrors.name\\\">\\r\\n                {{ modifyAirlineFormErrors.name }}\\r\\n              </mat-error>\\r\\n            </mat-form-field>\\r\\n          </p>\\r\\n          <p>\\r\\n            <mat-form-field class=\\\"half-width\\\">\\r\\n              <input matInput formControlName=\\\"address\\\" placeholder=\\\"Airline address\\\" type=\\\"text\\\">\\r\\n            </mat-form-field>\\r\\n          </p>\\r\\n          <p>\\r\\n            <mat-form-field class=\\\"full-width\\\">\\r\\n              <textarea matInput formControlName=\\\"description\\\" placeholder=\\\"Airline description\\\" rows=10></textarea>\\r\\n            </mat-form-field>\\r\\n          </p>\\r\\n          <p>\\r\\n            <mat-form-field class=\\\"half-width\\\">\\r\\n              <input matInput formControlName=\\\"destinations\\\" placeholder=\\\"Airline destinations\\\" type=\\\"text\\\">\\r\\n            </mat-form-field>\\r\\n          </p>\\r\\n          <button type=\\\"submit\\\" mat-button class=\\\"background-primary text-floral-white\\\"\\r\\n          [disabled]=\\\"modifyAirlineForm.invalid\\\">Submit</button>\\r\\n        </form>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div *ngIf = \\\"flightsActive\\\"\\r\\n  fxLayout=\\\"rows\\\"\\r\\n  fxLayoutGap=\\\"80px\\\">\\r\\n  <div class=\\\"container\\\"\\r\\n    fxLayout=\\\"column\\\"\\r\\n    fxLayoutGap=\\\"10px\\\">\\r\\n\\r\\n    <div fxFlex>\\r\\n      <div>\\r\\n          <h3>Add a flight to your airline</h3>\\r\\n          <hr>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div fxFlex class=\\\"form-size\\\">\\r\\n      <form novalidate [formGroup]=\\\"addFlightForm\\\" #fformAddFlight=\\\"ngForm\\\" (ngSubmit)=\\\"onAddFlightSubmit()\\\">\\r\\n        <p>\\r\\n          <mat-form-field class=\\\"half-width\\\">\\r\\n            <input matInput formControlName=\\\"origin\\\" placeholder=\\\"Flight origin\\\" type=\\\"text\\\">\\r\\n            <mat-error *ngIf=\\\"addFlightFormErrors.origin\\\">\\r\\n              {{ addFlightFormErrors.origin }}\\r\\n            </mat-error>\\r\\n          </mat-form-field>\\r\\n          <mat-form-field class=\\\"half-width\\\">\\r\\n            <input matInput formControlName=\\\"destination\\\" placeholder=\\\"Flight destination\\\" type=\\\"text\\\">\\r\\n            <mat-error *ngIf=\\\"addFlightFormErrors.destination\\\">\\r\\n              {{ addFlightFormErrors.destination }}\\r\\n            </mat-error>\\r\\n          </mat-form-field>\\r\\n        </p>\\r\\n        <p>\\r\\n          <mat-form-field class=\\\"half-width\\\">\\r\\n            <input matInput formControlName=\\\"takeoffDate\\\" [matDatepicker]=\\\"takeoffDatepicker\\\" placeholder=\\\"Takeoff time\\\">\\r\\n            <mat-datepicker-toggle [for]=\\\"takeoffDatepicker\\\"></mat-datepicker-toggle>\\r\\n            <mat-datepicker #takeoffDatepicker></mat-datepicker>\\r\\n            <mat-error *ngIf=\\\"addFlightFormErrors.takeoffDate\\\">\\r\\n              {{ addFlightFormErrors.takeoffDate }}\\r\\n            </mat-error>\\r\\n          </mat-form-field>\\r\\n          <mat-form-field class=\\\"half-width\\\">\\r\\n            <input matInput formControlName=\\\"landingDate\\\" [matDatepicker]=\\\"landingDatepicker\\\" placeholder=\\\"Landing time\\\">\\r\\n            <mat-datepicker-toggle [for]=\\\"landingDatepicker\\\"></mat-datepicker-toggle>\\r\\n            <mat-datepicker #landingDatepicker></mat-datepicker>\\r\\n            <mat-error *ngIf=\\\"addFlightFormErrors.landingDate\\\">\\r\\n              {{ addFlightFormErrors.landingDate }}\\r\\n            </mat-error>\\r\\n          </mat-form-field>\\r\\n        </p> \\r\\n        <p>\\r\\n          <mat-form-field class=\\\"half-width\\\">\\r\\n            <input matInput formControlName=\\\"duration\\\" placeholder=\\\"Flight duration\\\" type=\\\"number\\\">\\r\\n          </mat-form-field>\\r\\n          <mat-form-field class=\\\"half-width\\\">\\r\\n            <input matInput formControlName=\\\"length\\\" placeholder=\\\"Flight length\\\" type=\\\"number\\\">\\r\\n          </mat-form-field>\\r\\n        </p>\\r\\n        <p>\\r\\n          <mat-form-field class=\\\"half-width\\\">\\r\\n            <input matInput formControlName=\\\"layover\\\" placeholder=\\\"Flight layover\\\" type=\\\"text\\\">\\r\\n          </mat-form-field>\\r\\n        </p>\\r\\n        <p>\\r\\n          <mat-form-field class=\\\"half-width\\\">\\r\\n            <input matInput formControlName=\\\"price\\\" placeholder=\\\"Flight price\\\" type=\\\"number\\\">\\r\\n            <mat-error *ngIf=\\\"addFlightFormErrors.price\\\">\\r\\n              {{ addFlightFormErrors.price }}\\r\\n            </mat-error>\\r\\n          </mat-form-field>\\r\\n        </p>\\r\\n        <button type=\\\"submit\\\" mat-button class=\\\"background-primary text-floral-white\\\"\\r\\n        [disabled]=\\\"addFlightForm.invalid\\\">Submit</button>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"container\\\"\\r\\n    fxLayout=\\\"column\\\"\\r\\n    fxLayoutGap=\\\"20px\\\">\\r\\n\\r\\n    <div\\r\\n      class=\\\"column-title\\\">\\r\\n      <h3>List of flights</h3>\\r\\n      <hr>\\r\\n    </div>\\r\\n\\r\\n    <div>\\r\\n      <table mat-table #flightTable [dataSource]=\\\"flightList\\\"\\r\\n        class=\\\"flightTable\\\">\\r\\n\\r\\n        <ng-container matColumnDef=\\\"origin\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef> Origin </th>\\r\\n          <td mat-cell *matCellDef=\\\"let flight\\\" class=\\\"flightTableCell\\\"> {{flight.origin}} </td>\\r\\n        </ng-container>\\r\\n      \\r\\n        <ng-container matColumnDef=\\\"destination\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef> Destination </th>\\r\\n          <td mat-cell *matCellDef=\\\"let flight\\\" class=\\\"flightTableCell\\\"> {{flight.destination}} </td>\\r\\n        </ng-container>\\r\\n      \\r\\n        <ng-container matColumnDef=\\\"takeoffDate\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef> Takeoff </th>\\r\\n          <td mat-cell *matCellDef=\\\"let flight\\\" class=\\\"flightTableCell\\\"> {{flight.takeoffDate}} </td>\\r\\n        </ng-container>\\r\\n      \\r\\n        <ng-container matColumnDef=\\\"landingDate\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef> Landing </th>\\r\\n          <td mat-cell *matCellDef=\\\"let flight\\\" class=\\\"flightTableCell\\\"> {{flight.landingDate}} </td>\\r\\n        </ng-container>\\r\\n      \\r\\n        <ng-container matColumnDef=\\\"price\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef> Price </th>\\r\\n          <td mat-cell *matCellDef=\\\"let flight\\\" class=\\\"flightTableCell\\\"> {{flight.price}} </td>\\r\\n        </ng-container>\\r\\n      \\r\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" (click)=\\\"setClickedRow(row)\\\" [class.active]=\\\"row == selectedFlight\\\"></tr>\\r\\n      </table>  \\r\\n    </div>\\r\\n\\r\\n    <div fxLayout=\\\"rows\\\">\\r\\n      <div>\\r\\n        <button mat-button class=\\\"background-primary text-floral-white\\\" (click) = \\\"modifyFlightButton()\\\">Modify</button>\\r\\n        <button mat-button class=\\\"background-primary text-floral-white\\\" (click) = \\\"deleteFlightButton()\\\">Delete</button>\\r\\n      </div>\\r\\n      <br>\\r\\n      <div>\\r\\n        <button mat-button class=\\\"background-primary text-floral-white\\\" (click) = \\\"manageSeatsButton()\\\">Manage seats</button>\\r\\n        <button mat-button class=\\\"background-primary text-floral-white\\\" (click) = \\\"createDiscountButton()\\\">Create discount</button>\\r\\n      </div>\\r\\n      \\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div *ngIf = \\\"modifyFlightActive\\\"\\r\\n  class=\\\"container\\\"\\r\\n  fxLayout=\\\"column\\\"\\r\\n  fxLayoutGap=\\\"10px\\\">\\r\\n\\r\\n  <div fxFlex>\\r\\n    <div>\\r\\n        <h3>Modify the flight</h3>\\r\\n        <hr>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div fxFlex class=\\\"form-size\\\">\\r\\n    <form novalidate [formGroup]=\\\"modifyFlightForm\\\" #fformModifyFlight=\\\"ngForm\\\" (ngSubmit)=\\\"onModifyFlightSubmit()\\\">\\r\\n      <p>\\r\\n        <mat-form-field class=\\\"half-width\\\">\\r\\n          <input matInput formControlName=\\\"origin\\\" placeholder=\\\"Flight origin\\\" type=\\\"text\\\">\\r\\n          <mat-error *ngIf=\\\"modifyFlightFormErrors.origin\\\">\\r\\n            {{ modifyFlightFormErrors.origin }}\\r\\n          </mat-error>\\r\\n        </mat-form-field>\\r\\n        <mat-form-field class=\\\"half-width\\\">\\r\\n          <input matInput formControlName=\\\"destination\\\" placeholder=\\\"Flight destination\\\" type=\\\"text\\\">\\r\\n          <mat-error *ngIf=\\\"modifyFlightFormErrors.destination\\\">\\r\\n            {{ modifyFlightFormErrors.destination }}\\r\\n          </mat-error>\\r\\n        </mat-form-field>\\r\\n      </p>\\r\\n      <p>\\r\\n        <mat-form-field class=\\\"half-width\\\">\\r\\n          <input matInput formControlName=\\\"takeoffDate\\\" [matDatepicker]=\\\"takeoffDatepicker\\\" placeholder=\\\"Takeoff time\\\">\\r\\n          <mat-datepicker-toggle [for]=\\\"takeoffDatepicker\\\"></mat-datepicker-toggle>\\r\\n          <mat-datepicker #takeoffDatepicker></mat-datepicker>\\r\\n          <mat-error *ngIf=\\\"modifyFlightFormErrors.takeoffDate\\\">\\r\\n            {{ modifyFlightFormErrors.takeoffDate }}\\r\\n          </mat-error>\\r\\n        </mat-form-field>\\r\\n        <mat-form-field class=\\\"half-width\\\">\\r\\n          <input matInput formControlName=\\\"landingDate\\\" [matDatepicker]=\\\"landingDatepicker\\\" placeholder=\\\"Landing time\\\">\\r\\n          <mat-datepicker-toggle [for]=\\\"landingDatepicker\\\"></mat-datepicker-toggle>\\r\\n          <mat-datepicker #landingDatepicker></mat-datepicker>\\r\\n          <mat-error *ngIf=\\\"modifyFlightFormErrors.landingDate\\\">\\r\\n            {{ modifyFlightFormErrors.landingDate }}\\r\\n          </mat-error>\\r\\n        </mat-form-field>\\r\\n      </p> \\r\\n      <p>\\r\\n        <mat-form-field class=\\\"half-width\\\">\\r\\n          <input matInput formControlName=\\\"duration\\\" placeholder=\\\"Flight duration\\\" type=\\\"number\\\">\\r\\n        </mat-form-field>\\r\\n        <mat-form-field class=\\\"half-width\\\">\\r\\n          <input matInput formControlName=\\\"length\\\" placeholder=\\\"Flight length\\\" type=\\\"number\\\">\\r\\n        </mat-form-field>\\r\\n      </p>\\r\\n      <p>\\r\\n        <mat-form-field class=\\\"half-width\\\">\\r\\n          <input matInput formControlName=\\\"layover\\\" placeholder=\\\"Flight layover\\\" type=\\\"text\\\">\\r\\n        </mat-form-field>\\r\\n      </p>\\r\\n      <p>\\r\\n        <mat-form-field class=\\\"half-width\\\">\\r\\n          <input matInput formControlName=\\\"price\\\" placeholder=\\\"Flight price\\\" type=\\\"number\\\">\\r\\n          <mat-error *ngIf=\\\"modifyFlightFormErrors.price\\\">\\r\\n            {{ modifyFlightFormErrors.price }}\\r\\n          </mat-error>\\r\\n        </mat-form-field>\\r\\n      </p>\\r\\n      <button type=\\\"submit\\\" mat-button class=\\\"background-primary text-floral-white\\\"\\r\\n      [disabled]=\\\"modifyFlightForm.invalid\\\">Submit</button>\\r\\n      <button mat-button class=\\\"background-primary text-floral-white\\\" (click) = \\\"cancelModifyFlightButton()\\\">Cancel</button>\\r\\n    </form>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n<div *ngIf = \\\"seatsActive\\\"\\r\\n  fxLayout=\\\"rows\\\"\\r\\n  fxLayoutGap=\\\"80px\\\">\\r\\n  <div class=\\\"container\\\"\\r\\n    fxLayout=\\\"column\\\"\\r\\n    fxLayoutGap=\\\"10px\\\">\\r\\n\\r\\n    <div fxFlex>\\r\\n      <div>\\r\\n          <h3>Add a seat to your flight</h3>\\r\\n          <hr>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div fxFlex class=\\\"form-size\\\">\\r\\n      <form novalidate [formGroup]=\\\"addSeatForm\\\" #fformAddSeat=\\\"ngForm\\\" (ngSubmit)=\\\"onAddSeatSubmit()\\\">\\r\\n        <p>\\r\\n          <mat-form-field class=\\\"half-width\\\">\\r\\n            <input matInput formControlName=\\\"row\\\" placeholder=\\\"Seat row\\\" type=\\\"number\\\">\\r\\n            <mat-error *ngIf=\\\"addSeatFormErrors.row\\\">\\r\\n              {{ addSeatFormErrors.row }}\\r\\n            </mat-error>\\r\\n          </mat-form-field>\\r\\n          <mat-form-field class=\\\"half-width\\\">\\r\\n            <input matInput formControlName=\\\"column\\\" placeholder=\\\"Seat column\\\" type=\\\"text\\\">\\r\\n            <mat-error *ngIf=\\\"addSeatFormErrors.column\\\">\\r\\n              {{ addSeatFormErrors.column }}\\r\\n            </mat-error>\\r\\n          </mat-form-field>\\r\\n        </p>\\r\\n        <p>\\r\\n          <mat-form-field class=\\\"half-width\\\">\\r\\n            <mat-label>Class</mat-label>\\r\\n            <mat-select formControlName=\\\"classType\\\">\\r\\n              <mat-option *ngFor=\\\"let classType of classTypes\\\" [value]=\\\"classType.value\\\">\\r\\n                {{classType.viewValue}}\\r\\n              </mat-option>\\r\\n            </mat-select>\\r\\n            <mat-error *ngIf=\\\"addSeatFormErrors.classType\\\">\\r\\n              {{ addSeatFormErrors.classType }}\\r\\n            </mat-error>\\r\\n          </mat-form-field>\\r\\n        </p>\\r\\n        <button type=\\\"submit\\\" mat-button class=\\\"background-primary text-floral-white\\\"\\r\\n        [disabled]=\\\"addSeatForm.invalid\\\">Submit</button>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"container\\\"\\r\\n    fxLayout=\\\"column\\\"\\r\\n    fxLayoutGap=\\\"20px\\\">\\r\\n\\r\\n    <div\\r\\n      class=\\\"column-title\\\">\\r\\n      <h3>List of seats</h3>\\r\\n      <hr>\\r\\n    </div>\\r\\n\\r\\n    <div>\\r\\n      <table mat-table #seatTable [dataSource]=\\\"seatList\\\"\\r\\n        class=\\\"seatTable\\\">\\r\\n\\r\\n        <ng-container matColumnDef=\\\"row\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef> Row </th>\\r\\n          <td mat-cell *matCellDef=\\\"let seat\\\" class=\\\"seatTableCell\\\"> {{seat.row}} </td>\\r\\n        </ng-container>\\r\\n      \\r\\n        <ng-container matColumnDef=\\\"column\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef> Column </th>\\r\\n          <td mat-cell *matCellDef=\\\"let seat\\\" class=\\\"seatTableCell\\\"> {{seat.column}} </td>\\r\\n        </ng-container>\\r\\n      \\r\\n        <ng-container matColumnDef=\\\"classType\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef> Class </th>\\r\\n          <td mat-cell *matCellDef=\\\"let seat\\\" class=\\\"seatTableCell\\\"> {{seat.classType}} </td>\\r\\n        </ng-container>\\r\\n      \\r\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumnsSeats\\\"></tr>\\r\\n        <tr mat-row *matRowDef=\\\"let seatRow; columns: displayedColumnsSeats;\\\" (click)=\\\"setClickedSeat(seatRow)\\\" [class.active]=\\\"seatRow == selectedSeat\\\"></tr>\\r\\n      </table>  \\r\\n    </div>\\r\\n\\r\\n    <div fxLayout=\\\"rows\\\">\\r\\n      <button mat-button class=\\\"background-primary text-floral-white\\\" (click) = \\\"modifySeatButton()\\\">Modify</button>\\r\\n      <button mat-button class=\\\"background-primary text-floral-white\\\" (click) = \\\"deleteSeatButton()\\\">Delete</button>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div *ngIf = \\\"modifySeatActive\\\"\\r\\n  class=\\\"container\\\"\\r\\n  fxLayout=\\\"column\\\"\\r\\n  fxLayoutGap=\\\"10px\\\">\\r\\n\\r\\n  <div fxFlex>\\r\\n    <div>\\r\\n        <h3>Modify the seat</h3>\\r\\n        <hr>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div fxFlex class=\\\"form-size\\\">\\r\\n    <form novalidate [formGroup]=\\\"modifySeatForm\\\" #fformModifySeat=\\\"ngForm\\\" (ngSubmit)=\\\"onModifySeatSubmit()\\\">\\r\\n      <p>\\r\\n        <mat-form-field class=\\\"half-width\\\">\\r\\n          <input matInput formControlName=\\\"row\\\" placeholder=\\\"Seat row\\\" type=\\\"number\\\">\\r\\n          <mat-error *ngIf=\\\"modifySeatFormErrors.row\\\">\\r\\n            {{ modifySeatFormErrors.row }}\\r\\n          </mat-error>\\r\\n        </mat-form-field>\\r\\n        <mat-form-field class=\\\"half-width\\\">\\r\\n          <input matInput formControlName=\\\"column\\\" placeholder=\\\"Seat column\\\" type=\\\"text\\\">\\r\\n          <mat-error *ngIf=\\\"modifySeatFormErrors.column\\\">\\r\\n            {{ modifySeatFormErrors.column }}\\r\\n          </mat-error>\\r\\n        </mat-form-field>\\r\\n      </p>\\r\\n      <p>\\r\\n        <mat-form-field class=\\\"half-width\\\">\\r\\n          <mat-label>Class</mat-label>\\r\\n          <mat-select formControlName=\\\"classType\\\">\\r\\n            <mat-option *ngFor=\\\"let classType of classTypes\\\" [value]=\\\"classType.value\\\">\\r\\n              {{classType.viewValue}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n          <mat-error *ngIf=\\\"modifySeatFormErrors.classType\\\">\\r\\n            {{ modifySeatFormErrors.classType }}\\r\\n          </mat-error>\\r\\n        </mat-form-field>\\r\\n      </p>\\r\\n      <button type=\\\"submit\\\" mat-button class=\\\"background-primary text-floral-white\\\"\\r\\n      [disabled]=\\\"modifySeatForm.invalid\\\">Submit</button>\\r\\n      <button mat-button class=\\\"background-primary text-floral-white\\\" (click) = \\\"cancelModifySeatButton()\\\">Cancel</button>\\r\\n    </form>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"createDiscountActive\\\" fxLayout=\\\"row\\\">\\r\\n  <div class=\\\"container\\\"\\r\\n    fxLayout=\\\"column\\\"\\r\\n    fxLayoutGap=\\\"20px\\\"\\r\\n    fxFlex=\\\"40%\\\">\\r\\n  \\r\\n    <div>\\r\\n      <h3>List of seats</h3>\\r\\n      <hr>\\r\\n    </div>\\r\\n  \\r\\n    <div>\\r\\n      <table mat-table #seatTableD [dataSource]=\\\"seatListD\\\"\\r\\n        class=\\\"seatTableD\\\">\\r\\n  \\r\\n        <ng-container matColumnDef=\\\"row\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef> Row </th>\\r\\n          <td mat-cell *matCellDef=\\\"let seat\\\" class=\\\"seatTableCell\\\"> {{seat.row}} </td>\\r\\n        </ng-container>\\r\\n      \\r\\n        <ng-container matColumnDef=\\\"column\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef> Column </th>\\r\\n          <td mat-cell *matCellDef=\\\"let seat\\\" class=\\\"seatTableCell\\\"> {{seat.column}} </td>\\r\\n        </ng-container>\\r\\n      \\r\\n        <ng-container matColumnDef=\\\"classType\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef> Class </th>\\r\\n          <td mat-cell *matCellDef=\\\"let seat\\\" class=\\\"seatTableCell\\\"> {{seat.classType}} </td>\\r\\n        </ng-container>\\r\\n      \\r\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumnsSeatsD\\\"></tr>\\r\\n        <tr mat-row *matRowDef=\\\"let seatRow; columns: displayedColumnsSeatsD;\\\" (click)=\\\"setClickedSeatD(seatRow)\\\" [class.active]=\\\"seatRow == selectedSeatD\\\"></tr>\\r\\n      </table>  \\r\\n    </div>\\r\\n  \\r\\n    <div fxFlex class=\\\"form-size\\\">\\r\\n      <form novalidate [formGroup]=\\\"createDiscountForm\\\" #fformCreateDiscount=\\\"ngForm\\\" (ngSubmit)=\\\"onCreateDiscountSubmit()\\\">\\r\\n        <p>\\r\\n          <mat-form-field class=\\\"half-width\\\">\\r\\n            <input matInput formControlName=\\\"discount\\\" placeholder=\\\"Seat discount\\\" type=\\\"number\\\">\\r\\n            <mat-error *ngIf=\\\"createDiscountFormErrors.discount\\\">\\r\\n              {{ createDiscountFormErrors.discount }}\\r\\n            </mat-error>\\r\\n          </mat-form-field>\\r\\n        </p>\\r\\n        <button type=\\\"submit\\\" mat-button class=\\\"background-primary text-floral-white\\\"\\r\\n        [disabled]=\\\"createDiscountForm.invalid\\\">Create discount</button>\\r\\n        <button mat-button class=\\\"background-primary text-floral-white\\\" (click) = \\\"cancelCreateDiscountButton()\\\">Cancel</button>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \".column-title {\\n  align-self: center; }\\n\\n.flightTableCell {\\n  padding: 15px; }\\n\\n.flightTable tr.active td {\\n  background-color: #123456 !important;\\n  color: white; }\\n\\n.seatTableCell {\\n  padding: 15px; }\\n\\n.seatTable tr.active td {\\n  background-color: #123456 !important;\\n  color: white; }\\n\\n.seatTableD tr.active td {\\n  background-color: #123456 !important;\\n  color: white; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWlybGluZS9EOlxcRHVzYW5cXDFGYWtzXFxNUlNfSVNBXFxNUlNfSVNBX1RpbTEyXFxEYXNUcmF2ZWxTaXRlL3NyY1xcYXBwXFxhaXJsaW5lXFxhaXJsaW5lLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksa0JBQWtCLEVBQUE7O0FBR3RCO0VBQ0ksYUFBYSxFQUFBOztBQUdqQjtFQUNJLG9DQUFtQztFQUNuQyxZQUFZLEVBQUE7O0FBR2hCO0VBQ0ksYUFBYSxFQUFBOztBQUdqQjtFQUNJLG9DQUFtQztFQUNuQyxZQUFZLEVBQUE7O0FBR2hCO0VBQ0ksb0NBQW1DO0VBQ25DLFlBQVksRUFBQSIsImZpbGUiOiJzcmMvYXBwL2FpcmxpbmUvYWlybGluZS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jb2x1bW4tdGl0bGUge1xyXG4gICAgYWxpZ24tc2VsZjogY2VudGVyO1xyXG59XHJcblxyXG4uZmxpZ2h0VGFibGVDZWxsIHtcclxuICAgIHBhZGRpbmc6IDE1cHg7XHJcbn1cclxuXHJcbi5mbGlnaHRUYWJsZSB0ci5hY3RpdmUgdGQge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjojMTIzNDU2ICFpbXBvcnRhbnQ7XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbn1cclxuXHJcbi5zZWF0VGFibGVDZWxsIHtcclxuICAgIHBhZGRpbmc6IDE1cHg7XHJcbn1cclxuXHJcbi5zZWF0VGFibGUgdHIuYWN0aXZlIHRkIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IzEyMzQ1NiAhaW1wb3J0YW50O1xyXG4gICAgY29sb3I6IHdoaXRlO1xyXG59XHJcblxyXG4uc2VhdFRhYmxlRCB0ci5hY3RpdmUgdGQge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjojMTIzNDU2ICFpbXBvcnRhbnQ7XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbn0iXX0= */\"","import { Component, OnInit, Inject, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { LoopBackConfig, Flight, Airline, Seat, QuickFlightReservation, SeatReservation } from '../shared/sdk';\r\nimport { API_VERSION } from '../shared/baseUrl';\r\nimport { AirlineApi, FlightApi, SeatApi, QuickFlightReservationApi, SeatReservationApi } from '../shared/sdk/services';\r\nimport { MatSnackBar, MatTable } from '@angular/material';\r\nimport { LoginServiceService } from '../login-service.service';\r\n\r\n@Component({\r\n  selector: 'app-airline',\r\n  templateUrl: './airline.component.html',\r\n  styleUrls: ['./airline.component.scss']\r\n})\r\nexport class AirlineComponent implements OnInit {\r\n\r\n  userType: string;\r\n  userId: string;\r\n\r\n  modifyActive = true;\r\n\r\n  flightsActive = false;\r\n  modifyFlightActive = false;\r\n\r\n  seatsActive = false;\r\n  modifySeatActive = false;\r\n\r\n  createDiscountActive = false;\r\n\r\n  homeActive = false;\r\n  \r\n  setClickedRow : Function;\r\n  setClickedSeat : Function;\r\n  setClickedSeatD : Function;\r\n\r\n  selectedAirline: Airline;\r\n\r\n  selectedFlight: Flight = null;\r\n  newFlight: Flight;\r\n  flightList: Flight[];\r\n\r\n  selectedSeat: Seat = null;\r\n  newSeat: Seat;\r\n  seatList: Seat[];\r\n  \r\n  selectedSeatD: Seat = null;\r\n  seatListD: Seat[];\r\n\r\n  displayedColumns: string[] = ['origin', 'destination', 'takeoffDate', 'landingDate', 'price'];\r\n  displayedColumnsSeats: string[] = ['row', 'column', 'classType'];\r\n  displayedColumnsSeatsD: string[] = ['row', 'column', 'classType'];\r\n  classTypes = [\r\n    {\r\n      \"value\":\"e\",\r\n      \"viewValue\":\"Economy\"\r\n    }, {\r\n      \"value\":\"b\",\r\n      \"viewValue\":\"Business\"\r\n    }, {\r\n      \"value\":\"f\",\r\n      \"viewValue\":\"First Class\"\r\n    }];\r\n\r\n  modifyAirlineForm: FormGroup;\r\n  @ViewChild('modifyAirlineForm') modifyAirlineFormDirective;\r\n\r\n  addFlightForm: FormGroup;\r\n  @ViewChild('fformAddFlight') addFlightFormDirective;\r\n  \r\n  modifyFlightForm: FormGroup;\r\n  @ViewChild('fformModifyFlight') modifyFlightFormDirective;\r\n\r\n  addSeatForm: FormGroup;\r\n  @ViewChild('fformAddSeat') addSeatFormDirective;\r\n  \r\n  modifySeatForm: FormGroup;\r\n  @ViewChild('fformModifySeat') modifySeatFormDirective;\r\n\r\n  createDiscountForm: FormGroup;\r\n  @ViewChild('fformCreateDiscount') createDiscountFormDirective;\r\n\r\n  @ViewChild('flightTable') flightTable: MatTable<any>;\r\n  @ViewChild('seatTable') seatTable: MatTable<any>;\r\n  @ViewChild('seatTableD') seatTableD: MatTable<any>;\r\n\r\n  modifyAirlineFormErrors = {\r\n    'name': ''\r\n  };\r\n\r\n  modifyAirlineFormValidationMessages = {\r\n    'name': {\r\n      'required' : 'Airline name is required'\r\n    }\r\n  };\r\n\r\n  /****** FLIGHTS VALIDATION ******/\r\n\r\n  addFlightFormErrors = {\r\n    'origin': '',\r\n    'destination': '',\r\n    'takeoffDate': '',\r\n    'landingDate': '',\r\n    'price': ''\r\n  };\r\n\r\n  addFlightFormValidationMessages = {\r\n    'origin': {\r\n      'required': 'Origin of flight is required'\r\n    },\r\n    'destination': {\r\n      'required': 'Destination of flight is required'\r\n    },\r\n    'takeoffDate': {\r\n      'required': 'Takeoff time of flight is required'\r\n    },\r\n    'landingDate': {\r\n      'required': 'Landing time of flight is required'\r\n    },\r\n    'price': {\r\n      'required': 'Price of flight is required',\r\n      'min': 'Price of flight must be higher than 0'\r\n    }\r\n  };\r\n\r\n  modifyFlightFormErrors = {\r\n    'origin': '',\r\n    'destination': '',\r\n    'takeoffDate': '',\r\n    'landingDate': '',\r\n    'price': ''\r\n  };\r\n\r\n  modifyFlightFormValidationMessages = {\r\n    'origin': {\r\n      'required': 'Origin of flight is required'\r\n    },\r\n    'destination': {\r\n      'required': 'Destination of flight is required'\r\n    },\r\n    'takeoffDate': {\r\n      'required': 'Takeoff time of flight is required'\r\n    },\r\n    'landingDate': {\r\n      'required': 'Landing time of flight is required'\r\n    },\r\n    'price': {\r\n      'required': 'Price of flight is required',\r\n      'min': 'Price of flight must be higher than 0'\r\n    }\r\n  };\r\n\r\n  /****** SEATS VALIDATION ******/\r\n\r\n  addSeatFormErrors = {\r\n    'row': '',\r\n    'column': '',\r\n    'classType': ''\r\n  };\r\n\r\n  addSeatFormValidationMessages = {\r\n    'row': {\r\n      'required': 'Row of seat is required'\r\n    },\r\n    'column': {\r\n      'required': 'Column of seat is required'\r\n    },\r\n    'classType': {\r\n      'required': 'Class of seat is required'\r\n    }\r\n  };\r\n\r\n  modifySeatFormErrors = {\r\n    'row': '',\r\n    'column': '',\r\n    'classType': ''\r\n  };\r\n\r\n  modifySeatFormValidationMessages = {\r\n    'row': {\r\n      'required': 'Row of seat is required'\r\n    },\r\n    'column': {\r\n      'required': 'Column of seat is required'\r\n    },\r\n    'classType': {\r\n      'required': 'Class of seat is required'\r\n    }\r\n  };\r\n\r\n  /****** DISCOUNTS VALIDATION ******/\r\n\r\n  createDiscountFormErrors = {\r\n    'discount': ''\r\n  };\r\n\r\n  createDiscountFormValidationMessages = {\r\n    'discount': {\r\n      'required': 'Discount is required',\r\n      'min': 'Discount must be higher than 0',\r\n      'max': 'Discount must be lower than 100'\r\n    }\r\n  };\r\n\r\n  /****** BASIC FUNCTIONS ******/\r\n\r\n  constructor(@Inject('baseURL') private baseURL,\r\n    private airlineService: AirlineApi,\r\n    private flightService: FlightApi,\r\n    private seatService: SeatApi,\r\n    private seatReservationService: SeatReservationApi,\r\n    private quickFlightReservationService: QuickFlightReservationApi,\r\n    private loginService: LoginServiceService,\r\n    private fb: FormBuilder,\r\n    public snackBar: MatSnackBar\r\n  ) {\r\n    LoopBackConfig.setBaseURL(baseURL);\r\n    LoopBackConfig.setApiVersion(API_VERSION);\r\n\r\n    this.createModifyAirlineForm();\r\n    this.createAddFlightForm();\r\n    this.createModifyFlightForm();\r\n    this.createAddSeatForm();\r\n    this.createModifySeatForm();\r\n    this.createCreateDiscountForm();\r\n\r\n    this.setClickedRow = function(index){\r\n      this.selectedFlight = index;\r\n    }\r\n    this.setClickedSeat = function(index){\r\n      this.selectedSeat = index;\r\n    }\r\n    this.setClickedSeatD = function(index){\r\n      this.selectedSeatD = index;\r\n    }\r\n\r\n    this.loginService.user.subscribe(data => {\r\n      if (data) {\r\n        this.userType = data.user.type;\r\n        this.userId = data.user.id;\r\n      }\r\n    });\r\n  }\r\n\r\n  openSnackBar(message: string, action: string) {\r\n    this.snackBar.open(message, action, {\r\n      duration: 2000,\r\n    });\r\n  }\r\n\r\n  refreshFlights() {\r\n    this.airlineService.getFlights(this.selectedAirline.id)\r\n    .subscribe((flights: Flight[]) => {\r\n      this.flightList = flights;\r\n    });\r\n  }\r\n\r\n  refreshSeats() {\r\n    this.flightService.getSeats(this.selectedFlight.id)\r\n    .subscribe((seats: Seat[]) => {\r\n      console.log(\"YA SEATS >\" + JSON.stringify(seats));\r\n      this.seatList = seats;\r\n      this.seatTable.dataSource = this.seatList;\r\n      this.seatTable.renderRows();\r\n    });\r\n  }\r\n\r\n  refreshSeatsD() {\r\n    this.flightService.findAvailableSeats(this.selectedFlight.id)\r\n    .subscribe(seats => {\r\n      this.seatListD = seats.retval;\r\n      this.seatTableD.dataSource = this.seatListD;\r\n      this.seatTableD.renderRows();\r\n      console.log(seats.retval);\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    this.airlineService.findOne({'where': {'name' : 'airline1'}})\r\n    .subscribe((airline: Airline) => {\r\n      this.selectedAirline = airline;\r\n      this.setValueModifyAirlineForm();\r\n\r\n      this.refreshFlights();\r\n    });\r\n    \r\n  }\r\n\r\n  /****** MODIFY AIRLINE ******/\r\n\r\n  onValueChangedModifyAirline(data?: any) {\r\n    if (!this.modifyAirlineForm) {return; }\r\n    const form = this.modifyAirlineForm;\r\n    for (const field in this.modifyAirlineFormErrors){\r\n      if (this.modifyAirlineFormErrors.hasOwnProperty(field)){\r\n        this.modifyAirlineFormErrors[field] = '';\r\n        const control = form.get(field);\r\n        if (control && !control.valid) {\r\n          const messages = this.modifyAirlineFormValidationMessages[field];\r\n          for (const key in control.errors){\r\n            if (control.errors.hasOwnProperty(key)){\r\n              this.modifyAirlineFormErrors[field] += messages[key] + ' ';\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  createModifyAirlineForm() {\r\n    this.modifyAirlineForm = this.fb.group({\r\n      'name': ['', Validators.required],\r\n      'address': '',\r\n      'description': '',\r\n      'destinations' : ''\r\n    });\r\n\r\n    this.modifyAirlineForm.valueChanges\r\n      .subscribe(data => this.onValueChangedModifyAirline(data));\r\n    this.onValueChangedModifyAirline();\r\n  }\r\n\r\n  setValueModifyAirlineForm() {\r\n    this.modifyAirlineForm.setValue({\r\n      'name': this.selectedAirline.name,\r\n      'address' : this.selectedAirline.address,\r\n      'description' : this.selectedAirline.description,\r\n      'destinations' : this.selectedAirline.destinations\r\n    });\r\n  }\r\n\r\n  onModifyAirlineSubmit() {\r\n    this.selectedAirline = this.modifyAirlineForm.value;\r\n    this.airlineService.updateAttributes(this.selectedAirline.id, this.selectedAirline)\r\n    .subscribe(result => {\r\n      this.refreshFlights();\r\n    });\r\n  }\r\n\r\n  /****** ADD FLIGHT ******/\r\n\r\n  onValueChangedAddFlight(data?: any) {\r\n    if (!this.addFlightForm) {return; }\r\n    const form = this.addFlightForm;\r\n    for (const field in this.addFlightFormErrors){\r\n      if (this.addFlightFormErrors.hasOwnProperty(field)){\r\n        this.addFlightFormErrors[field] = '';\r\n        const control = form.get(field);\r\n        if (control && !control.valid) {\r\n          const messages = this.addFlightFormValidationMessages[field];\r\n          for (const key in control.errors){\r\n            if (control.errors.hasOwnProperty(key)){\r\n              this.addFlightFormErrors[field] += messages[key] + ' ';\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  createAddFlightForm() {\r\n    this.addFlightForm = this.fb.group({\r\n      'origin': ['', Validators.required],\r\n      'destination': ['', Validators.required],\r\n      'takeoffDate': ['', Validators.required],\r\n      'landingDate': ['', Validators.required],\r\n      'duration': 0,\r\n      'length': 0,\r\n      'layover': '',\r\n      'price': [0, [Validators.required, Validators.min(1)]]\r\n    });\r\n    this.addFlightForm.valueChanges\r\n    .subscribe(data => this.onValueChangedAddFlight(data));\r\n    this.onValueChangedAddFlight();\r\n  }\r\n\r\n  onAddFlightSubmit() {\r\n    this.newFlight = this.addFlightForm.value;\r\n    this.airlineService.createFlights(this.selectedAirline.id, this.newFlight)\r\n    .subscribe(result => {\r\n      this.refreshFlights();\r\n    });\r\n  }\r\n\r\n  /****** MODIFY FLIGHT ******/\r\n\r\n  onValueChangedModifyFlight(data?: any) {\r\n    if (!this.modifyFlightForm) {return; }\r\n    const form = this.modifyFlightForm;\r\n    for (const field in this.modifyFlightFormErrors){\r\n      if (this.modifyFlightFormErrors.hasOwnProperty(field)){\r\n        this.modifyFlightFormErrors[field] = '';\r\n        const control = form.get(field);\r\n        if (control && !control.valid) {\r\n          const messages = this.modifyFlightFormValidationMessages[field];\r\n          for (const key in control.errors){\r\n            if (control.errors.hasOwnProperty(key)){\r\n              this.modifyFlightFormErrors[field] += messages[key] + ' ';\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  createModifyFlightForm() {\r\n    this.modifyFlightForm = this.fb.group({\r\n      'origin': ['', Validators.required],\r\n      'destination': ['', Validators.required],\r\n      'takeoffDate': ['', Validators.required],\r\n      'landingDate': ['', Validators.required],\r\n      'duration': 0,\r\n      'length': 0,\r\n      'layover': '',\r\n      'price': [0, [Validators.required, Validators.min(1)]]\r\n    });\r\n    this.modifyFlightForm.valueChanges\r\n    .subscribe(data => this.onValueChangedModifyFlight(data));\r\n    this.onValueChangedModifyFlight();\r\n  }\r\n\r\n  setValueModifyFlightForm() {\r\n    this.modifyFlightForm.setValue({\r\n      'origin': this.selectedFlight.origin,\r\n      'destination': this.selectedFlight.destination,\r\n      'takeoffDate': this.selectedFlight.takeoffDate,\r\n      'landingDate': this.selectedFlight.landingDate,\r\n      'duration': this.selectedFlight.duration,\r\n      'length': this.selectedFlight.length,\r\n      'layover': this.selectedFlight.layover,\r\n      'price': this.selectedFlight.price\r\n    });\r\n  }\r\n\r\n  onModifyFlightSubmit() {\r\n    const toModify = this.modifyFlightForm.value;\r\n    toModify.airlineId = this.selectedAirline.id;\r\n    console.log(this.selectedFlight);\r\n    this.flightService.updateAttributes(this.selectedFlight.id, toModify)\r\n    .subscribe(result => {\r\n      console.log(result);\r\n      this.cancelModifyFlightButton();\r\n    })\r\n  }\r\n\r\n  /****** ADD SEAT ******/\r\n\r\n  onValueChangedAddSeat(data?: any) {\r\n    if (!this.addSeatForm) {return; }\r\n    const form = this.addSeatForm;\r\n    for (const field in this.addSeatFormErrors){\r\n      if (this.addSeatFormErrors.hasOwnProperty(field)){\r\n        this.addSeatFormErrors[field] = '';\r\n        const control = form.get(field);\r\n        if (control && !control.valid) {\r\n          const messages = this.addSeatFormValidationMessages[field];\r\n          for (const key in control.errors){\r\n            if (control.errors.hasOwnProperty(key)){\r\n              this.addSeatFormErrors[field] += messages[key] + ' ';\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  createAddSeatForm() {\r\n    this.addSeatForm = this.fb.group({\r\n      'row': ['', Validators.required],\r\n      'column': ['', Validators.required],\r\n      'classType': ['', Validators.required]\r\n    });\r\n    this.addSeatForm.valueChanges\r\n    .subscribe(data => this.onValueChangedAddSeat(data));\r\n    this.onValueChangedAddSeat();\r\n  }\r\n\r\n  onAddSeatSubmit() {\r\n    this.newSeat = this.addSeatForm.value;\r\n    this.flightService.createSeats(this.selectedFlight.id, this.newSeat)\r\n    .subscribe(result => {\r\n      this.refreshSeats();\r\n    });\r\n  }\r\n\r\n  /****** MODIFY SEAT ******/\r\n\r\n  onValueChangedModifySeat(data?: any) {\r\n    if (!this.modifySeatForm) {return; }\r\n    const form = this.modifySeatForm;\r\n    for (const field in this.modifySeatFormErrors){\r\n      if (this.modifySeatFormErrors.hasOwnProperty(field)){\r\n        this.modifySeatFormErrors[field] = '';\r\n        const control = form.get(field);\r\n        if (control && !control.valid) {\r\n          const messages = this.modifySeatFormValidationMessages[field];\r\n          for (const key in control.errors){\r\n            if (control.errors.hasOwnProperty(key)){\r\n              this.modifySeatFormErrors[field] += messages[key] + ' ';\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  createModifySeatForm() {\r\n    this.modifySeatForm = this.fb.group({\r\n      'row': ['', Validators.required],\r\n      'column': ['', Validators.required],\r\n      'classType': ['', Validators.required]\r\n    });\r\n    this.modifySeatForm.valueChanges\r\n    .subscribe(data => this.onValueChangedModifySeat(data));\r\n    this.onValueChangedModifySeat();\r\n  }\r\n\r\n  setValueModifySeatForm() {\r\n    this.modifySeatForm.setValue({\r\n      'row': this.selectedSeat.row,\r\n      'column': this.selectedSeat.column,\r\n      'classType': this.selectedSeat.classType\r\n    });\r\n  }\r\n\r\n  onModifySeatSubmit() {\r\n    const toModify = this.modifySeatForm.value;\r\n    toModify.flightId = this.selectedFlight.id;\r\n    console.log(this.selectedSeat);\r\n    this.seatService.updateAttributes(this.selectedSeat.id, toModify)\r\n    .subscribe(result => {\r\n      this.refreshSeats();\r\n      this.cancelModifySeatButton();\r\n    })\r\n  }\r\n\r\n  /****** CREATE DISCOUNT ******/\r\n\r\n  onValueChangedCreateDiscount(data?: any) {\r\n    if (!this.createDiscountForm) {return; }\r\n    const form = this.createDiscountForm;\r\n    for (const field in this.createDiscountFormErrors){\r\n      if (this.createDiscountFormErrors.hasOwnProperty(field)){\r\n        this.createDiscountFormErrors[field] = '';\r\n        const control = form.get(field);\r\n        if (control && !control.valid) {\r\n          const messages = this.createDiscountFormValidationMessages[field];\r\n          for (const key in control.errors){\r\n            if (control.errors.hasOwnProperty(key)){\r\n              this.createDiscountFormErrors[field] += messages[key] + ' ';\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  createCreateDiscountForm() {\r\n    this.createDiscountForm = this.fb.group({\r\n      'discount': [0, [Validators.required, Validators.min(1), Validators.max(99)]]\r\n    });\r\n    this.createDiscountForm.valueChanges\r\n    .subscribe(data => this.onValueChangedCreateDiscount(data));\r\n    this.onValueChangedCreateDiscount();\r\n  }\r\n\r\n  onCreateDiscountSubmit() {\r\n    if (this.selectedSeatD && this.userId) {\r\n      let discount = this.createDiscountForm.value.discount;\r\n      let price = (this.selectedSeatD.classType == 'e') ? this.selectedFlight.price * 1.0 : \r\n      ((this.selectedSeatD.classType == 'f') ? this.selectedFlight.price * 1.5 : this.selectedFlight.price * 1.2);\r\n      let totalPrice = (price * (100.0 - discount)) / 100.0;\r\n      totalPrice = Math.round(totalPrice);\r\n      this.seatReservationService.makeReservation(this.selectedSeatD.id, this.userId, totalPrice)\r\n        .subscribe(\r\n          (result) => {\r\n            this.openSnackBar(\"Quick reservation successfuly made\", \"Dismiss\");\r\n            let quickRes: QuickFlightReservation = result.retval;\r\n\r\n            this.quickFlightReservationService.create({discount: discount, seatReservationId: quickRes.id})\r\n            .subscribe(\r\n              (result) => {\r\n                console.log(\"All good and well.\" + result);\r\n              },\r\n              (err) => {\r\n                this.openSnackBar(\"Error in database connection\", \"Dismiss\");\r\n                console.log(err);\r\n              }\r\n            );\r\n\r\n            this.refreshSeatsD();\r\n          },\r\n          (err) => {\r\n            this.openSnackBar(\"Failed to make reservation\", \"Dismiss\");\r\n          }\r\n        );\r\n    }\r\n    else {\r\n      this.openSnackBar(\"You must choose the seat\", \"Dismiss\");\r\n    }\r\n  }\r\n\r\n  /****** BUTTON PRESSES ******/\r\n\r\n  modifyButton(){\r\n    this.modifyActive = true;\r\n\r\n    this.flightsActive = false;\r\n    this.modifyFlightActive = false;\r\n    \r\n    this.seatsActive = false;\r\n    this.modifySeatActive = false;\r\n\r\n    this.createDiscountActive = false;\r\n    \r\n    this.homeActive = false;\r\n  }\r\n\r\n  flightsButton(){\r\n    this.modifyActive = false;\r\n\r\n    this.flightsActive = true;\r\n    this.modifyFlightActive = false;\r\n    \r\n    this.seatsActive = false;\r\n    this.modifySeatActive = false;\r\n\r\n    this.createDiscountActive = false;\r\n    \r\n    this.homeActive = false;\r\n\r\n    this.flightTable.renderRows();\r\n  }\r\n\r\n  modifyFlightButton(){\r\n    if (this.selectedFlight != null) {\r\n      this.modifyActive = false;\r\n\r\n      this.flightsActive = false;\r\n      this.modifyFlightActive = true;\r\n    \r\n      this.seatsActive = false;\r\n      this.modifySeatActive = false;\r\n\r\n      this.createDiscountActive = false;\r\n      \r\n      this.homeActive = false;\r\n\r\n      this.setValueModifyFlightForm();\r\n    }\r\n  }\r\n\r\n  deleteFlightButton(){\r\n    if (this.selectedFlight != null) {\r\n      this.flightService.deleteById(this.selectedFlight.id)\r\n      .subscribe(result => {\r\n        console.log(result);\r\n        this.selectedFlight = null;\r\n        this.refreshFlights();\r\n      });\r\n    }\r\n  }\r\n\r\n  cancelModifyFlightButton(){\r\n    this.modifyActive = false;\r\n\r\n    this.flightsActive = true;\r\n    this.modifyFlightActive = false;\r\n    \r\n    this.seatsActive = false;\r\n    this.modifySeatActive = false;\r\n\r\n    this.createDiscountActive = false;\r\n\r\n    this.homeActive = false;\r\n\r\n    this.selectedFlight = null;\r\n    this.flightTable.renderRows();\r\n  }\r\n\r\n  homeButton(){\r\n    this.modifyActive = false;\r\n\r\n    this.flightsActive = false;\r\n    this.modifyFlightActive = false;\r\n    \r\n    this.seatsActive = false;\r\n    this.modifySeatActive = false;\r\n\r\n    this.createDiscountActive = false;\r\n\r\n    this.homeActive = true;\r\n\r\n    this.selectedFlight = null;\r\n  }\r\n\r\n  manageSeatsButton() {\r\n    if (this.selectedFlight != null) {\r\n      this.modifyActive = false;\r\n\r\n      this.flightsActive = false;\r\n      this.modifyFlightActive = false;\r\n      \r\n      this.seatsActive = true;\r\n      this.modifySeatActive = false;\r\n\r\n      this.createDiscountActive = false;\r\n\r\n      this.homeActive = false;\r\n      \r\n      this.refreshSeats();\r\n    }\r\n  }\r\n\r\n  modifySeatButton(){\r\n    if (this.selectedSeat != null) {\r\n      this.modifyActive = false;\r\n\r\n      this.flightsActive = false;\r\n      this.modifyFlightActive = false;\r\n    \r\n      this.seatsActive = false;\r\n      this.modifySeatActive = true;\r\n\r\n      this.createDiscountActive = false;\r\n      \r\n      this.homeActive = false;\r\n\r\n      this.setValueModifySeatForm();\r\n    }\r\n  }\r\n\r\n  deleteSeatButton(){\r\n    if (this.selectedSeat != null) {\r\n      this.seatService.deleteById(this.selectedSeat.id)\r\n      .subscribe(result => {\r\n        console.log(result);\r\n        this.selectedSeat = null;\r\n        this.refreshSeats();\r\n      });\r\n    }\r\n  }\r\n\r\n  cancelModifySeatButton(){\r\n    this.modifyActive = false;\r\n\r\n    this.flightsActive = false;\r\n    this.modifyFlightActive = false;\r\n    \r\n    this.seatsActive = true;\r\n    this.modifySeatActive = false;\r\n\r\n    this.createDiscountActive = false;\r\n\r\n    this.homeActive = false;\r\n\r\n    this.selectedSeat = null;\r\n    this.seatTable.renderRows();\r\n  }\r\n\r\n  createDiscountButton() {\r\n    if (this.selectedFlight != null) {\r\n      this.modifyActive = false;\r\n\r\n      this.flightsActive = false;\r\n      this.modifyFlightActive = false;\r\n      \r\n      this.seatsActive = false;\r\n      this.modifySeatActive = false;\r\n\r\n      this.createDiscountActive = true;\r\n\r\n      this.homeActive = false;\r\n      \r\n      this.refreshSeatsD();\r\n    }\r\n  }\r\n\r\n  cancelCreateDiscountButton() {\r\n    this.modifyActive = false;\r\n\r\n    this.flightsActive = true;\r\n    this.modifyFlightActive = false;\r\n    \r\n    this.seatsActive = false;\r\n    this.modifySeatActive = false;\r\n\r\n    this.createDiscountActive = false;\r\n\r\n    this.homeActive = false;\r\n\r\n    this.selectedSeatD = null;\r\n    this.flightTable.renderRows();\r\n  }\r\n\r\n}\r\n","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\r\\n  <a mat-button (click) = \\\"addButton()\\\" *ngIf=\\\"userType==='admin'\\\"> Add</a>\\r\\n  <span class=\\\"flex-spacer\\\"></span>\\r\\n</mat-toolbar>\\r\\n<mat-autocomplete #auto=\\\"matAutocomplete\\\">\\r\\n  <mat-option *ngFor=\\\"let location of filteredLocationsStrings\\\" [value]=\\\"location\\\">{{location}}</mat-option>\\r\\n</mat-autocomplete>\\r\\n\\r\\n<div *ngIf=\\\"addActive&&userType==='admin'\\\">\\r\\n  <form novalidate [formGroup]=\\\"addAirlineForm\\\" #fformAddAirline=\\\"ngForm\\\" (ngSubmit)=\\\"onAddAirlineSubmit()\\\">\\r\\n    <p>\\r\\n      <mat-form-field class=\\\"half-width\\\">\\r\\n        <input matInput formControlName=\\\"name\\\" placeholder=\\\"Airline Name\\\" type=\\\"text\\\">\\r\\n        <mat-error *ngIf=\\\"addAirlineFormErrors.name\\\">\\r\\n          {{ addAirlineFormErrors.name }}\\r\\n        </mat-error>\\r\\n      </mat-form-field>\\r\\n    </p>\\r\\n    <p>\\r\\n      <mat-form-field>\\r\\n        <input matInput formControlName=\\\"countryCity\\\" placeholder=\\\"Location\\\" type=\\\"text\\\" [matAutocomplete]=\\\"auto\\\">\\r\\n        <mat-error *ngIf=\\\"addAirlineFormErrors.countryCity\\\">\\r\\n          {{ addAirlineFormErrors.countryCity }}\\r\\n        </mat-error>\\r\\n      </mat-form-field>\\r\\n\\r\\n    </p>\\r\\n    <p>\\r\\n      <mat-form-field class=\\\"half-width\\\">\\r\\n        <input matInput formControlName=\\\"address\\\" placeholder=\\\"Address\\\" type=\\\"text\\\">\\r\\n        <mat-error *ngIf=\\\"addAirlineFormErrors.address\\\">\\r\\n          {{ addAirlineFormErrors.address}}\\r\\n        </mat-error>\\r\\n      </mat-form-field>\\r\\n    </p>\\r\\n    <p>\\r\\n      <mat-form-field class=\\\"full-width\\\">\\r\\n        <textarea matInput formControlName=\\\"description\\\" placeholder=\\\"Airline description\\\" rows=5></textarea>\\r\\n      </mat-form-field>\\r\\n    </p>\\r\\n    <button type=\\\"submit\\\" mat-button class=\\\"background-primary text-floral-white\\\"\\r\\n            [disabled]=\\\"addAirlineForm.invalid\\\">Submit</button>\\r\\n  </form>\\r\\n</div>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FpcmxpbmVzLXN5cy1hZG1pbi9haXJsaW5lcy1zeXMtYWRtaW4uY29tcG9uZW50LnNjc3MifQ== */\"","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {LoginServiceService} from '../login-service.service';\r\nimport {Location} from '../shared/sdk/models';\r\nimport {MatSnackBar} from '@angular/material';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {AirlineApi, LocationApi} from '../shared/sdk/services/custom';\r\n\r\n@Component({\r\n  selector: 'app-airlines-sys-admin',\r\n  templateUrl: './airlines-sys-admin.component.html',\r\n  styleUrls: ['./airlines-sys-admin.component.scss']\r\n})\r\nexport class AirlinesSysAdminComponent implements OnInit {\r\n  userType: string;\r\n  addActive = true;\r\n  locations = [];\r\n  filteredLocations: Location[] = [];\r\n  filteredLocationsStrings = [];\r\n  addAirlineForm: FormGroup;\r\n  @ViewChild('fformAddAirline') addAirlineFormDirective;\r\n\r\n  addAirlineFormErrors = {\r\n    'name': '',\r\n    'address': '',\r\n    'countryCity': ''\r\n  };\r\n  addAirlineFormValidationMessages = {\r\n    'name': {\r\n      'required' : 'Airline name is required'\r\n    },\r\n    'address': {\r\n      'required' : 'Airline address is required'\r\n    },\r\n    'countryCity': {\r\n      'required': 'Location is required',\r\n      'min': 'Location must exist'\r\n    }\r\n  };\r\n\r\n\r\n  constructor(\r\n    private locationsservice: LocationApi,\r\n    private loginService: LoginServiceService,\r\n    private snackBar: MatSnackBar,\r\n    private airlineservice: AirlineApi,\r\n    private fb: FormBuilder\r\n    ) {\r\n    this.locationsservice.find().subscribe((locations: Location[]) => {\r\n        this.locations = locations;\r\n        this.filteredLocations = this.locations;\r\n        this.fillLocationsList();\r\n      }\r\n    );\r\n    this.loginService.user.subscribe(data => {\r\n      if (data) {\r\n        this.userType = data.user.type;\r\n      }\r\n    });\r\n    this.createAddAirlineForm();\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  private _filter(value: string): Location[] {\r\n    if (value != null) {\r\n      const filterValue = value.toLowerCase();\r\n      return this.locations.filter(location => (location.city.toLowerCase() + ', ' + location.country.toLowerCase()).includes(filterValue));\r\n    } else {\r\n      return this.locations;\r\n    }\r\n  }\r\n\r\n  openSnackBar(message: string, action: string) {\r\n    this.snackBar.open(message, action, {\r\n      duration: 2000,\r\n    });\r\n  }\r\n\r\n  fillLocationsList() {\r\n    this.filteredLocationsStrings = [];\r\n    for (const location of this.filteredLocations) {\r\n      this.filteredLocationsStrings.push(location.city + ', ' + location.country);\r\n    }\r\n  }\r\n\r\n  locationExists() {\r\n    if (this.addAirlineForm.value.countryCity == null) return false;\r\n    const loc = this.addAirlineForm.value.countryCity.split(', ');\r\n    if (loc.length !== 2) return false;\r\n    const city = loc[0];\r\n    const country = loc[1];\r\n    for (const location of this.locations){\r\n      if (location.city === city && location.country === country) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  getCityCountry(countryCity) {\r\n    countryCity = countryCity.split(', ');\r\n    if (countryCity.length !== 2) return ['', ''];\r\n    return [countryCity[0], countryCity[1]];\r\n  }\r\n\r\n  onAddAirlineValueChanged(data?: any)  {\r\n    if (!this.addAirlineForm) {return; }\r\n    const form = this.addAirlineForm;\r\n    this.filteredLocations = this._filter(form.value.countryCity);\r\n    this.fillLocationsList();\r\n    if (!this.locationExists()) {\r\n      this.addAirlineFormErrors['countryCity'] += this.addAirlineFormValidationMessages['countryCity']['min'];\r\n      this.addAirlineForm.controls['countryCity'].setErrors({'min' : true});\r\n    }\r\n    for (const field in this.addAirlineFormErrors)  {\r\n      if (this.addAirlineFormErrors.hasOwnProperty(field))  {\r\n        this.addAirlineFormErrors[field] = '';\r\n        const control = form.get(field);\r\n        if (control && !control.valid) {\r\n          const messages = this.addAirlineFormValidationMessages[field];\r\n          for (const key in control.errors)  {\r\n            if (control.errors.hasOwnProperty(key))  {\r\n              this.addAirlineFormErrors[field] += messages[key] + ' ';\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  createAddAirlineForm() {\r\n    this.addAirlineForm = this.fb.group({\r\n      'name': ['', Validators.required],\r\n      'address': ['', Validators.required],\r\n      'countryCity': ['', Validators.required],\r\n      'description': ''\r\n    });\r\n    this.addAirlineForm.valueChanges\r\n      .subscribe(data => this.onAddAirlineValueChanged(data));\r\n    this.onAddAirlineValueChanged();\r\n  }\r\n\r\n  onAddAirlineSubmit() {\r\n    const airline = this.addAirlineForm.value;\r\n    const countryCity = airline.countryCity.split(', ');\r\n    let country = '';\r\n    let city = '';\r\n    if (countryCity.length === 2) {\r\n      country = countryCity[1];\r\n      city = countryCity[0];\r\n    }\r\n    this.locationsservice.find({where: {city: city, country: country}})\r\n      .subscribe((locations: Location[]) => {\r\n        if (locations.length > 0) {\r\n          const location = locations[0];\r\n          airline.locationId = location.id;\r\n        }\r\n        delete airline['countryCity'];\r\n        airline.myuserId = '';\r\n        this.airlineservice.create(airline)\r\n          .subscribe(result => {\r\n            this.addAirlineForm.reset({\r\n              name: '',\r\n              address: '',\r\n              description: '',\r\n              countryCity: ''\r\n            });\r\n            this.addAirlineFormDirective.resetForm();\r\n            this.openSnackBar('Added an airline succesfully', 'Dismiss');\r\n\r\n          }, err => this.openSnackBar('Can not add this airline. Check if the name is already taken', 'Dismiss'));\r\n      }, err => this.openSnackBar('Can not add this airline. Check if the name is already taken', 'Dismiss'));\r\n  }\r\n\r\n  addButton() {\r\n    this.addActive = true;\r\n  }\r\n}\r\n","module.exports = \"<div *ngIf=\\\"!discountsActive\\\">\\r\\n  <div *ngIf=\\\"airlineList == null\\\">\\r\\n    <h1>Loading airlines...</h1>\\r\\n  </div>\\r\\n\\r\\n  <div *ngIf=\\\"airlineList != null\\\">\\r\\n    <div *ngIf=\\\"airlineList.length == 0\\\">\\r\\n      <h1>No airlines in the system.</h1>\\r\\n    </div>\\r\\n\\r\\n    <div *ngIf=\\\"airlineList.length > 0\\\"\\r\\n    fxLayout=\\\"column\\\" fxFlexOffset=\\\"20px\\\">\\r\\n      <div fxFlex>\\r\\n        <h1>Airlines</h1>\\r\\n      </div>\\r\\n      <div fxFlex fxFlexOffset=\\\"20px\\\">\\r\\n        <table mat-table #airlineTableDir [dataSource]=\\\"airlineList\\\"\\r\\n        class=\\\"airlineTable\\\">\\r\\n\\r\\n          <ng-container matColumnDef=\\\"name\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef> Name </th>\\r\\n            <td mat-cell *matCellDef=\\\"let airline\\\"> {{airline.name}} </td>\\r\\n          </ng-container>\\r\\n        \\r\\n          <ng-container matColumnDef=\\\"address\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef> Address </th>\\r\\n            <td mat-cell *matCellDef=\\\"let airline\\\"> {{airline.address}} </td>\\r\\n          </ng-container>\\r\\n        \\r\\n          <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n          <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" (click)=\\\"setClickedRow(row)\\\" [class.active]=\\\"row == selectedAirline\\\"></tr>\\r\\n        </table>\\r\\n      </div>\\r\\n\\r\\n      <div fxFlex fxFlexOffset=\\\"20px\\\">\\r\\n        <button mat-button class=\\\"background-primary text-floral-white\\\" (click) = \\\"checkDiscountsButton()\\\">Check Discounts</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"discountsActive\\\">\\r\\n  <div *ngIf=\\\"discountList == null\\\">\\r\\n    <h1>Loading discounts...</h1>\\r\\n  </div>\\r\\n  \\r\\n  <div *ngIf=\\\"discountList != null\\\">\\r\\n    <div *ngIf=\\\"discountList.length == 0\\\">\\r\\n      <h1>No discounts for this airline.</h1>\\r\\n      <button mat-button class=\\\"background-primary text-floral-white\\\" (click) = \\\"cancelReserveButton()\\\">Back</button>\\r\\n    </div>\\r\\n    \\r\\n    <div *ngIf=\\\"discountList.length > 0\\\"\\r\\n    fxLayout=\\\"column\\\" fxFlexOffset=\\\"20px\\\">\\r\\n      <div fxFlex>\\r\\n        <h1>Airline Discounts</h1>\\r\\n      </div>\\r\\n      <div fxFlex fxFlexOffset=\\\"20px\\\">\\r\\n        <table mat-table #discountTableDir [dataSource]=\\\"discountList\\\"\\r\\n        class=\\\"discountTable\\\">\\r\\n    \\r\\n        <ng-container matColumnDef=\\\"origin\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef> Origin </th>\\r\\n          <td mat-cell *matCellDef=\\\"let discount\\\"> {{discount.origin}} </td>\\r\\n        </ng-container>\\r\\n      \\r\\n        <ng-container matColumnDef=\\\"destination\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef> Destination </th>\\r\\n          <td mat-cell *matCellDef=\\\"let discount\\\"> {{discount.destination}} </td>\\r\\n        </ng-container>\\r\\n      \\r\\n        <ng-container matColumnDef=\\\"takeoffDate\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef> Takeoff </th>\\r\\n          <td mat-cell *matCellDef=\\\"let discount\\\"> {{discount.takeoffDate | date:'dd/MM/yyyy HH:mm'}} </td>\\r\\n        </ng-container>\\r\\n      \\r\\n        <ng-container matColumnDef=\\\"landingDate\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef> Landing </th>\\r\\n          <td mat-cell *matCellDef=\\\"let discount\\\"> {{discount.landingDate | date:'dd/MM/yyyy HH:mm'}} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"classType\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef> Class </th>\\r\\n          <td mat-cell *matCellDef=\\\"let discount\\\"> {{classTypes[discount.classType]}} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"seat\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef> Seat </th>\\r\\n          <td mat-cell *matCellDef=\\\"let discount\\\"> {{discount.seat}} </td>\\r\\n        </ng-container>\\r\\n      \\r\\n        <ng-container matColumnDef=\\\"price\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef> Original Price </th>\\r\\n          <td mat-cell *matCellDef=\\\"let discount\\\"> {{discount.price}} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"discount\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef> Discount </th>\\r\\n          <td mat-cell *matCellDef=\\\"let discount\\\"> {{discount.discount}} </td>\\r\\n        </ng-container>\\r\\n        \\r\\n          <tr mat-header-row *matHeaderRowDef=\\\"displayedColumnsD\\\"></tr>\\r\\n          <tr mat-row *matRowDef=\\\"let row; columns: displayedColumnsD;\\\" (click)=\\\"setClickedRowD(row)\\\" [class.active]=\\\"row == selectedDiscount\\\"></tr>\\r\\n        </table>\\r\\n      </div>\\r\\n    \\r\\n      <div fxFlex fxFlexOffset=\\\"20px\\\">\\r\\n        <button mat-button class=\\\"background-primary text-floral-white\\\" (click) = \\\"reserveButton()\\\">Reserve</button>\\r\\n        <button mat-button class=\\\"background-primary text-floral-white\\\" (click) = \\\"cancelReserveButton()\\\">Cancel</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","module.exports = \".airlineTable tr th,\\n.airlineTable tr td,\\n.discountTable tr th,\\n.discountTable tr td {\\n  padding: 15px; }\\n\\n.airlineTable tr.active td {\\n  background-color: #123456 !important;\\n  color: white; }\\n\\n.discountTable tr.active td {\\n  background-color: #123456 !important;\\n  color: white; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWlybGluZXMvRDpcXER1c2FuXFwxRmFrc1xcTVJTX0lTQVxcTVJTX0lTQV9UaW0xMlxcRGFzVHJhdmVsU2l0ZS9zcmNcXGFwcFxcYWlybGluZXNcXGFpcmxpbmVzLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7O0VBSUksYUFBYSxFQUFBOztBQUdqQjtFQUNJLG9DQUFtQztFQUNuQyxZQUFZLEVBQUE7O0FBR2hCO0VBQ0ksb0NBQW1DO0VBQ25DLFlBQVksRUFBQSIsImZpbGUiOiJzcmMvYXBwL2FpcmxpbmVzL2FpcmxpbmVzLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmFpcmxpbmVUYWJsZSB0ciB0aCxcclxuLmFpcmxpbmVUYWJsZSB0ciB0ZCxcclxuLmRpc2NvdW50VGFibGUgdHIgdGgsXHJcbi5kaXNjb3VudFRhYmxlIHRyIHRkIHtcclxuICAgIHBhZGRpbmc6IDE1cHg7XHJcbn1cclxuXHJcbi5haXJsaW5lVGFibGUgdHIuYWN0aXZlIHRkIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IzEyMzQ1NiAhaW1wb3J0YW50O1xyXG4gICAgY29sb3I6IHdoaXRlO1xyXG59XHJcblxyXG4uZGlzY291bnRUYWJsZSB0ci5hY3RpdmUgdGQge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjojMTIzNDU2ICFpbXBvcnRhbnQ7XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbn0iXX0= */\"","import { Component, OnInit, Inject, ViewChild } from '@angular/core';\r\nimport {LoopBackConfig, Airline, Flight, Seat, SeatReservation, QuickFlightReservation} from '../shared/sdk';\r\nimport {AirlineApi, SeatApi, SeatReservationApi, QuickFlightReservationApi} from '../shared/sdk/services';\r\nimport {API_VERSION} from '../shared/baseUrl';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {MatSnackBar, MatTable} from '@angular/material';\r\nimport {LoginServiceService} from '../login-service.service';\r\n\r\n@Component({\r\n  selector: 'app-airlines',\r\n  templateUrl: './airlines.component.html',\r\n  styleUrls: ['./airlines.component.scss']\r\n})\r\nexport class AirlinesComponent implements OnInit {\r\n\r\n  userType: string;\r\n  userId: string;\r\n\r\n  discountsActive = false;\r\n\r\n  viewInitialized = false;\r\n\r\n  /****** AIRLINE DATA ******/\r\n\r\n  selectedAirline: Airline = null;\r\n  setClickedRow : Function;\r\n  airlineList: Airline[] = null;\r\n\r\n  displayedColumns: string[] = ['name', 'address'];\r\n\r\n  @ViewChild('airlineTableDir') airlineTable: MatTable<any>;\r\n\r\n  /****** DISCOUNT DATA ******/\r\n\r\n  selectedDiscount: any = null;\r\n  setClickedRowD : Function;\r\n  discountList: any[] = null;\r\n\r\n  displayedColumnsD: string[] = ['origin', 'destination', 'takeoffDate', 'landingDate', 'classType', 'seat', 'price', 'discount'];\r\n\r\n  @ViewChild('discountTableDir') discountTable: MatTable<any>;\r\n\r\n  classTypes = {\r\n    'e': 'Economy class',\r\n    'b': 'Business class',\r\n    'f': 'First class'\r\n  };\r\n\r\n  /****** BASIC FUNCTIONS ******/\r\n\r\n  constructor(@Inject('baseURL') private baseURL,\r\n  private airlineService: AirlineApi,\r\n  private seatService: SeatApi,\r\n  private seatReservationService: SeatReservationApi,\r\n  private quickFlightReservationService: QuickFlightReservationApi,\r\n  private loginService: LoginServiceService,\r\n  public snackBar: MatSnackBar) {\r\n    LoopBackConfig.setBaseURL(baseURL);\r\n    LoopBackConfig.setApiVersion(API_VERSION);\r\n    this.loginService.user.subscribe(data => {\r\n      if (data) {\r\n        this.userType = data.user.type;\r\n        this.userId = data.user.id;\r\n      }\r\n    });\r\n    this.setClickedRow = function(index){\r\n      this.selectedAirline = index;\r\n    }\r\n    this.setClickedRowD = function(index){\r\n      this.selectedDiscount = index;\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.viewInitialized = true;\r\n    if (this.discountsActive)\r\n      this.refreshDiscounts();\r\n    else\r\n      this.refreshAirlines();\r\n    console.log(this.airlineTable + \"\\n\" + this.discountTable);\r\n  }\r\n\r\n  openSnackBar(message: string, action: string) {\r\n    this.snackBar.open(message, action, {\r\n      duration: 2000,\r\n    });\r\n  }\r\n\r\n  refreshAirlines() {\r\n    this.airlineService.find().subscribe(\r\n      result => {\r\n        this.airlineList = result as Airline[];\r\n        console.log(\"found airlines > \" + JSON.stringify(result));\r\n        /*if (this.viewInitialized)\r\n          this.airlineTable.renderRows();*/\r\n      }\r\n      , err => {\r\n        console.log(err);\r\n      }\r\n    );\r\n  }\r\n\r\n  refreshDiscounts() {\r\n    this.quickFlightReservationService.find().subscribe(\r\n      result => {\r\n        this.discountList = [];\r\n        let quickResList: QuickFlightReservation[] = result as QuickFlightReservation[];\r\n        for (const quickRes of quickResList) {\r\n          this.seatReservationService.findById(quickRes.seatReservationId).subscribe(\r\n            result => {\r\n              let seatReservation: SeatReservation = result as SeatReservation;\r\n              this.seatService.findById(seatReservation.seatId, {'include': 'flight'}).subscribe(\r\n                result => {\r\n                  let seat: Seat = result as Seat;\r\n                  console.log(\"Found a seat > \" + JSON.stringify(seat));\r\n                  if (seat.flight.airlineId == this.selectedAirline.id) {\r\n                    let discount: any = {\r\n                      origin: seat.flight.origin,\r\n                      destination: seat.flight.destination,\r\n                      takeoffDate: seat.flight.takeoffDate,\r\n                      landingDate: seat.flight.landingDate,\r\n                      classType: seat.classType,\r\n                      seat: seat.row + '-' + seat.column,\r\n                      discount: quickRes.discount\r\n                    };\r\n                    discount.price = (seat.classType == 'e') ? seat.flight.price * 1.0 : \r\n                                     ((seat.classType == 'b') ? seat.flight.price * 1.2 : \r\n                                     seat.flight.price * 1.5);\r\n                    discount.quickRes = quickRes;\r\n                    discount.seatReservation = seatReservation;\r\n\r\n                    console.log(\"Discount to be added > \" + JSON.stringify(discount));\r\n                    this.discountList.push(discount);\r\n                    /*if (this.viewInitialized)\r\n                      this.discountTable.renderRows();*/\r\n                  }\r\n                },\r\n                err => {\r\n                  console.log(err);\r\n                }\r\n              );\r\n            },\r\n            err => {\r\n              console.log(err);\r\n            }\r\n          );\r\n        }\r\n      },\r\n      err => {\r\n        console.log(err);\r\n      }\r\n    );\r\n  }\r\n\r\n  /****** BUTTON PRESSES ******/\r\n\r\n  checkDiscountsButton() {\r\n    if (this.selectedAirline != null) {\r\n      this.discountsActive = true;\r\n      this.refreshDiscounts();\r\n    }\r\n  }\r\n\r\n  reserveButton() {\r\n    if (this.selectedDiscount != null) {\r\n      this.seatReservationService.updateAttributes(this.selectedDiscount.seatReservation.id, \r\n        {myuserId: this.userId, \r\n        seatId: this.selectedDiscount.seatReservation.seatId,\r\n        price: this.selectedDiscount.seatReservation.price}).subscribe(\r\n        result => {\r\n          this.openSnackBar(\"Reservation successfuly made\", \"Dismiss\");\r\n          console.log(result);\r\n          this.quickFlightReservationService.deleteById(this.selectedDiscount.quickRes.id).subscribe(\r\n            result => {\r\n              console.log(result);\r\n              this.refreshDiscounts();\r\n            },\r\n            err => {\r\n              this.openSnackBar(\"Error during database connection\", \"Dismiss\");\r\n              console.log(err);\r\n            }\r\n          );\r\n        },\r\n        err => {\r\n          this.openSnackBar(\"Failed to reserve seat\", \"Dismiss\");\r\n          console.log(err);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  cancelReserveButton() {\r\n    this.selectedDiscount = null;\r\n    this.discountList = null;\r\n\r\n    this.discountsActive = false;\r\n    this.refreshAirlines();\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { routes } from './routes';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forRoot(routes)\r\n  ],\r\n  declarations: [],\r\n  exports: [\r\n    RouterModule\r\n  ]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Routes } from '@angular/router';\r\nimport { HomeComponent } from '../home/home.component';\r\nimport { CarsComponent} from '../cars/cars.component';\r\nimport { HotelsComponent} from '../hotels/hotels.component';\r\nimport { FlightsComponent} from '../flights/flights.component';\r\nimport { RentalservicesComponent } from '../rentalservices/rentalservices.component';\r\nimport { BranchesComponent } from '../branches/branches.component';\r\nimport { HotelComponent } from '../hotel/hotel.component';\r\nimport { AirlineComponent } from \"../airline/airline.component\";\r\nimport { RoomsListComponent } from '../rooms-list/rooms-list.component';\r\nimport { RoomComponent } from '../room/room.component';\r\nimport { CarpricesComponent } from  '../carprices/carprices.component';\r\nimport { ReservecarComponent } from '../reservecar/reservecar.component';\r\nimport { ReserveRoomComponent } from '../reserve-room/reserve-room.component';\r\nimport { UserComponent } from  '../user/user.component';\r\nimport {RoomReservationListComponent} from '../room-reservation-list/room-reservation-list.component';\r\nimport { CarDiscountsComponent } from '../car-discounts/car-discounts.component';\r\nimport {CarReservationListComponent} from '../car-reservation-list/car-reservation-list.component';\r\nimport { CarBusinessReportsComponent } from '../car-business-reports/car-business-reports.component';\r\nimport { ListCarDiscountsComponent } from '../list-car-discounts/list-car-discounts.component';\r\nimport { ReserveCarSpecialComponent } from '../reserve-car-special/reserve-car-special.component';\r\nimport { RoomBusinessReportsComponent } from '../room-business-reports/room-business-reports.component';\r\nimport { ReservationFlowComponent } from '../reservation-flow/reservation-flow.component';\r\nimport {LocationsComponent} from '../locations/locations.component';\r\nimport {MapComponent} from '../map/map.component';\r\nimport {AirlinesSysAdminComponent} from '../airlines-sys-admin/airlines-sys-admin.component';\r\nimport {AdminsComponent} from '../admins/admins.component';\r\n\r\nexport const routes: Routes = [\r\n  {path: 'home', component: HomeComponent},\r\n  {path: '', redirectTo: '/home', pathMatch: 'full'},\r\n  {path: 'hotels', component: HotelsComponent},\r\n  {path: 'flights', component: FlightsComponent},\r\n  {path: 'cars', component: CarsComponent},\r\n  {path: 'rentalServices', component: RentalservicesComponent},\r\n  {path: 'branches', component: BranchesComponent},\r\n  {path: 'hotel', component: HotelComponent},\r\n  {path: 'airline', component: AirlineComponent},\r\n  {path: 'rooms', component: RoomsListComponent},\r\n  {path: 'room/:id', component: RoomComponent},\r\n  {path: 'carPrices', component: CarpricesComponent},\r\n  {path: 'carDiscounts', component: CarDiscountsComponent},\r\n  {path: 'carreservation', component: ReservecarComponent},\r\n  {path: 'roomreservation', component: ReserveRoomComponent},\r\n  {path: 'user', component: UserComponent},\r\n  {path: 'roomReservations', component: RoomReservationListComponent},\r\n  {path: 'carReservations', component: CarReservationListComponent},\r\n  {path: 'carBusinessReports', component: CarBusinessReportsComponent},\r\n  {path: 'listCarDiscounts', component: ListCarDiscountsComponent},\r\n  {path: 'reserveCarSpecial', component: ReserveCarSpecialComponent},\r\n  {path: 'roomBusinessReports', component: RoomBusinessReportsComponent},\r\n  {path: 'reservationFlow', component: ReservationFlowComponent},\r\n  {path: 'locations', component: LocationsComponent},\r\n  {path: 'maps', component: MapComponent},\r\n  {path: 'addAirline', component: AirlinesSysAdminComponent},\r\n  {path: 'admins', component: AdminsComponent}\r\n];\r\n","module.exports = \"<app-header></app-header>\\r\\n<router-outlet></router-outlet>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component } from '@angular/core';\r\nimport { ItemService} from './services/item.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'DasTravelSite';\r\n}\r\n\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { AppRoutingModule } from './app-routing/app-routing.module';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { HeaderComponent } from './header/header.component';\r\n\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport {MatGridListModule} from '@angular/material/grid-list';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport {MatAutocompleteModule, MatNativeDateModule, MatTableModule} from '@angular/material';\r\nimport { MatFormFieldModule} from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatSelectModule} from '@angular/material/select';\r\nimport { MatSlideToggleModule} from '@angular/material/slide-toggle';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { FlightsComponent } from './flights/flights.component';\r\nimport { HotelsComponent } from './hotels/hotels.component';\r\nimport { CarsComponent } from './cars/cars.component';\r\nimport { SDKBrowserModule } from './shared/sdk';\r\nimport { baseURL } from './shared/baseUrl';\r\nimport { MatSnackBarModule } from '@angular/material';\r\n\r\nimport { ChartsModule } from 'ng2-charts';\r\n\r\n\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { RentalservicesComponent } from './rentalservices/rentalservices.component';\r\nimport { BranchesComponent } from './branches/branches.component';\r\nimport { HotelApi } from './shared/sdk/services/custom/Hotel';\r\nimport { HttpClient, HttpHandler } from '@angular/common/http';\r\nimport { HotelComponent } from './hotel/hotel.component';\r\nimport { AirlineComponent } from './airline/airline.component';\r\nimport { RoomsListComponent } from './rooms-list/rooms-list.component';\r\nimport { RoomComponent } from './room/room.component';\r\nimport { CarpricesComponent } from './carprices/carprices.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { ReservecarComponent } from './reservecar/reservecar.component';\r\nimport { ItemService } from './services/item.service';\r\n\r\nimport { LoginServiceService } from './login-service.service';\r\nimport { ListallservicesComponent } from './listallservices/listallservices.component';\r\nimport { CarDiscountsComponent } from './car-discounts/car-discounts.component';\r\nimport { ReserveRoomComponent } from './reserve-room/reserve-room.component';\r\nimport { UserComponent } from './user/user.component';\r\nimport { ListCarDiscountsComponent } from './list-car-discounts/list-car-discounts.component';\r\nimport { RoomReservationListComponent } from './room-reservation-list/room-reservation-list.component';\r\nimport { CarReservationListComponent } from './car-reservation-list/car-reservation-list.component';\r\nimport { CarBusinessReportsComponent } from './car-business-reports/car-business-reports.component';\r\nimport { ReserveSeatComponent } from './reserve-seat/reserve-seat.component';\r\nimport { AirlinesComponent } from './airlines/airlines.component';\r\nimport { RoomQuickReservationComponent } from './room-quick-reservation/room-quick-reservation.component';\r\nimport { ReserveCarSpecialComponent } from './reserve-car-special/reserve-car-special.component';\r\nimport { FriendsComponent } from './friends/friends.component';\r\nimport { RateCarAndServiceComponent } from './rate-car-and-service/rate-car-and-service.component';\r\nimport { RateRoomAndHotelComponent } from './rate-room-and-hotel/rate-room-and-hotel.component';\r\nimport { ChangeRentalServiceComponent } from './change-rental-service/change-rental-service.component';\r\nimport { ListBranchesComponent } from './list-branches/list-branches.component';\r\nimport { ListCarsAdminComponent } from './list-cars-admin/list-cars-admin.component';\r\nimport { RoomBusinessReportsComponent } from './room-business-reports/room-business-reports.component';\r\nimport { ReservationFlowComponent } from './reservation-flow/reservation-flow.component';\r\nimport { LocationsComponent } from './locations/locations.component';\r\nimport { MapComponent } from './map/map.component';\r\nimport {AgmCoreModule} from '@agm/core';\r\nimport { AirlinesSysAdminComponent } from './airlines-sys-admin/airlines-sys-admin.component';\r\nimport { AdminsComponent } from './admins/admins.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HomeComponent,\r\n    HeaderComponent,\r\n    FlightsComponent,\r\n    HotelsComponent,\r\n    CarsComponent,\r\n    RentalservicesComponent,\r\n    BranchesComponent,\r\n    HotelComponent,\r\n    AirlineComponent,\r\n    RoomsListComponent,\r\n    RoomComponent,\r\n    CarpricesComponent,\r\n    RegisterComponent,\r\n    LoginComponent,\r\n    ListallservicesComponent,\r\n    CarDiscountsComponent,\r\n    ReservecarComponent,\r\n    ReserveRoomComponent,\r\n    UserComponent,\r\n    ListCarDiscountsComponent,\r\n    RoomReservationListComponent,\r\n    CarReservationListComponent,\r\n    ReserveSeatComponent,\r\n    AirlinesComponent,\r\n    CarBusinessReportsComponent,\r\n    ReserveSeatComponent,\r\n    RoomQuickReservationComponent,\r\n    FriendsComponent,\r\n    ChangeRentalServiceComponent,\r\n    ListBranchesComponent,\r\n    ListCarsAdminComponent,\r\n    ReserveCarSpecialComponent,\r\n    FriendsComponent,\r\n    RateCarAndServiceComponent,\r\n    RateRoomAndHotelComponent,\r\n    RoomBusinessReportsComponent,\r\n    ReservationFlowComponent,\r\n    LocationsComponent,\r\n    MapComponent,\r\n    AirlinesSysAdminComponent,\r\n    AdminsComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    MatSnackBarModule,\r\n    AppRoutingModule,\r\n    FlexLayoutModule,\r\n    MatToolbarModule,\r\n    MatListModule,\r\n    MatGridListModule,\r\n    MatCardModule,\r\n    MatButtonModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatDialogModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatCheckboxModule,\r\n    MatSelectModule,\r\n    MatSlideToggleModule,\r\n    MatProgressSpinnerModule,\r\n    MatDividerModule,\r\n    MatTableModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    BrowserAnimationsModule,\r\n    ChartsModule,\r\n    SDKBrowserModule.forRoot(),\r\n    MatAutocompleteModule,\r\n    AgmCoreModule.forRoot({\r\n      apiKey: 'AIzaSyCS7Tj-OtjMMBnoW_d28O4VoYgt1-3MHGM'\r\n    })\r\n  ],\r\n  providers: [\r\n    {provide: 'baseURL', useValue: baseURL}, ItemService,\r\n    LoginServiceService\r\n  ],\r\n  entryComponents: [\r\n    RegisterComponent, LoginComponent, RateCarAndServiceComponent, RateRoomAndHotelComponent, MapComponent\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\r\\n    <a mat-button (click)=\\\"setToAdd()\\\"> Add</a>\\r\\n    <a mat-button (click)=\\\"setToRemove()\\\"> Remove </a>\\r\\n    <a mat-button (click)=\\\"setToChange()\\\"> Change </a>\\r\\n    <a mat-button (click)=\\\"setToList()\\\"> List all </a>\\r\\n    <span class=\\\"flex-spacer\\\"></span>\\r\\n    <!--<a mat-button (click)=\\\"openLoginForm()\\\"><span class=\\\"fa fa-sign-in fa-lg\\\">Login</span></a>-->\\r\\n</mat-toolbar>\\r\\n\\r\\n<div *ngIf=\\\"isAdd\\\">\\r\\n  <div fxFlex fxFlexOffset=\\\"20px\\\" class=\\\"form-size\\\">\\r\\n    <form novalidate [formGroup]=\\\"addForm\\\" #addform=\\\"ngForm\\\" (ngSubmit)=\\\"onAddSubmit()\\\">\\r\\n        <p>\\r\\n        <mat-form-field class=\\\"form-size\\\">\\r\\n            <input matInput formControlName=\\\"name\\\" placeholder=\\\"Name\\\" type=\\\"text\\\">\\r\\n            <mat-error *ngIf=\\\"addFormErrors.name\\\">\\r\\n              {{ addFormErrors.name }}\\r\\n            </mat-error>\\r\\n        </mat-form-field>\\r\\n        </p>\\r\\n        <p>\\r\\n        <mat-form-field class=\\\"form-size\\\">\\r\\n            <input matInput formControlName=\\\"address\\\" placeholder=\\\"Address\\\" type=\\\"text\\\">\\r\\n            <mat-error *ngIf=\\\"addFormErrors.address\\\">\\r\\n                {{ addFormErrors.address }}\\r\\n            </mat-error>\\r\\n        </mat-form-field>\\r\\n        </p>\\r\\n        <button type=\\\"submit\\\" mat-button class=\\\"background-primary text-floral-white\\\" [disabled]=\\\"addForm.invalid\\\">\\r\\n          Submit\\r\\n        </button>\\r\\n      </form>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"isRemove\\\">\\r\\n  <div fxFlex fxFlexOffset=\\\"20px\\\" class=\\\"form-size\\\">\\r\\n    <form novalidate [formGroup]=\\\"removeForm\\\" #changeform=\\\"ngForm\\\" (ngSubmit)=\\\"onRemoveSubmit()\\\">\\r\\n      <p>\\r\\n        <mat-form-field class=\\\"form-size\\\">\\r\\n            <input matInput formControlName=\\\"name\\\" placeholder=\\\"Name\\\" type=\\\"text\\\">\\r\\n            <mat-error *ngIf=\\\"removeFormErrors.name\\\">\\r\\n              {{ removeFormErrors.name }}\\r\\n            </mat-error>\\r\\n        </mat-form-field>\\r\\n      </p>\\r\\n      <button type=\\\"submit\\\" mat-button class=\\\"background-primary text-floral-white\\\" [disabled]=\\\"removeForm.invalid\\\">\\r\\n          Submit\\r\\n      </button>\\r\\n      </form>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"isChange\\\">\\r\\n  <div fxFlex fxFlexOffset=\\\"20px\\\" class=\\\"form-size\\\">\\r\\n      <form novalidate [formGroup]=\\\"changeForm\\\" #changeform=\\\"ngForm\\\" (ngSubmit)=\\\"onChangeSubmit()\\\">\\r\\n        <p>\\r\\n          <mat-form-field class=\\\"form-size\\\">\\r\\n              <input matInput formControlName=\\\"name\\\" placeholder=\\\"Name\\\" type=\\\"text\\\">\\r\\n              <mat-error *ngIf=\\\"changeFormErrors.name\\\">\\r\\n                {{ changeFormErrors.name }}\\r\\n              </mat-error>\\r\\n          </mat-form-field>\\r\\n        </p>\\r\\n        <button type=\\\"button\\\" mat-button class=\\\"background-primary text-floral-white\\\" (click)=\\\"changeGrabBranch()\\\">Get</button>\\r\\n        <p>\\r\\n          <mat-form-field class=\\\"form-size\\\">\\r\\n            <input matInput formControlName=\\\"address\\\" placeholder=\\\"Address\\\" type=\\\"text\\\">\\r\\n            <mat-error *ngIf=\\\"changeFormErrors.address\\\">\\r\\n                {{ changeFormErrors.address }}\\r\\n            </mat-error>\\r\\n          </mat-form-field>\\r\\n        </p>\\r\\n          <button type=\\\"submit\\\" mat-button class=\\\"background-primary text-floral-white\\\" [disabled]=\\\"changeForm.invalid\\\">\\r\\n            Submit\\r\\n          </button>\\r\\n      </form>\\r\\n  </div>\\r\\n</div>\\r\\n<div *ngIf=\\\"isList\\\">\\r\\n  <app-list-branches></app-list-branches>\\r\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2JyYW5jaGVzL2JyYW5jaGVzLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, ViewChild, Inject } from '@angular/core';\r\nimport { BranchApi } from '../shared/sdk/services';\r\nimport { Branch } from '../shared/sdk/models/Branch';\r\nimport { RentalServiceApi } from '../shared/sdk/services';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { LoopBackConfig, RentalService } from '../shared/sdk';\r\nimport { API_VERSION } from '../shared/baseUrl';\r\nimport { MatSnackBar } from \"@angular/material\";\r\nimport { ItemService } from '../services/item.service';\r\n\r\n@Component({\r\n  selector: 'app-branches',\r\n  templateUrl: './branches.component.html',\r\n  styleUrls: ['./branches.component.scss']\r\n})\r\nexport class BranchesComponent implements OnInit {\r\n\r\n  addForm: FormGroup;\r\n  @ViewChild('addform') addFormDirective;\r\n\r\n  removeForm: FormGroup;\r\n  @ViewChild('removeform') removeFormDirective;\r\n\r\n\r\n  changeForm: FormGroup;\r\n  @ViewChild('changeform') changeFormDirective;\r\n\r\n  isAdd: boolean;\r\n\r\n  isRemove: boolean;\r\n\r\n  isChange: boolean;\r\n\r\n  isList: boolean;\r\n\r\n  constructor(@Inject('baseURL') private baseURL,\r\n  private branchService: BranchApi,\r\n  private fb: FormBuilder,\r\n  private rentalServiceService: RentalServiceApi,\r\n  public snackBar: MatSnackBar,\r\n  private itemService: ItemService) {\r\n      LoopBackConfig.setBaseURL(baseURL);\r\n      LoopBackConfig.setApiVersion(API_VERSION);\r\n      this.createAddForm();\r\n      this.createRemoveForm();\r\n      this.createChangeForm();  \r\n   }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  setToAdd() {\r\n    this.isAdd = true;\r\n    this.isRemove = null;\r\n    this.isChange = null;\r\n    this.isList = null;\r\n  }\r\n\r\n  setToRemove() {\r\n    this.isAdd = null;\r\n    this.isRemove = true;\r\n    this.isChange = null;\r\n    this.isList = null;\r\n  }\r\n\r\n  setToChange() {\r\n    this.isAdd = null;\r\n    this.isRemove = null;\r\n    this.isChange = true;\r\n    this.isList = null;\r\n  }\r\n\r\n  setToList() {\r\n    this.isAdd = null;\r\n    this.isRemove = null;\r\n    this.isChange = null;\r\n    this.isList = true;\r\n  }\r\n\r\n  openSnackBar(message: string, action: string) {\r\n    this.snackBar.open(message, action, {\r\n       duration: 2000,\r\n    });\r\n  }\r\n\r\n  addFormErrors = {\r\n    'name': '',\r\n    'address': ''\r\n  }\r\n\r\n  addFormValidationMessages = {\r\n\r\n    'name': {\r\n      'required': 'Name is required'\r\n    },\r\n    'address': {\r\n      'required': 'Address is required'\r\n    }\r\n  }\r\n\r\n  onAddValueChanged(data?:any) {\r\n    if (!this.addForm) { return; }\r\n    const form = this.addForm;\r\n    for (const field in this.addFormErrors) {\r\n      if (this.addFormErrors.hasOwnProperty(field)) {\r\n        //clear previous error message\r\n        this.addFormErrors[field] = '';\r\n        const control = form.get(field);\r\n        if (control && !control.valid) {\r\n          const messages = this.addFormValidationMessages[field];\r\n          for (const key in control.errors) {\r\n            if (control.errors.hasOwnProperty(key)) {\r\n              this.addFormErrors[field] += messages[key] + ' ';\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  createAddForm() {\r\n    this.addForm = this.fb.group({\r\n      name: ['', Validators.required],\r\n      address: ['', Validators.required]\r\n    });\r\n    this.addForm.valueChanges\r\n      .subscribe(data => this.onAddValueChanged(data));\r\n    this.onAddValueChanged();\r\n  }\r\n\r\n  onAddSubmit() {\r\n    this.branchService.create({\r\n      'name': this.addForm.value.name,\r\n      'address': this.addForm.value.address,\r\n      'rentalServiceId': this.itemService.getServiceId()})\r\n    .subscribe(\r\n      (result) => {\r\n      if (result != null) {\r\n        this.openSnackBar(\"Branch added successfully\", \"Dismiss\");\r\n      }\r\n      else {\r\n        this.openSnackBar(\"Failed to add branch\", \"Dismiss\");\r\n      }\r\n      },\r\n      (err) => {\r\n        this.openSnackBar(\"Failed to add branch\", \"Dismiss\");\r\n      });\r\n  }\r\n\r\n  removeFormErrors = {\r\n    'name': ''\r\n  }\r\n\r\n  removeFormValidationMessages = {\r\n    'name': {\r\n      'required': 'Name is required'\r\n    }\r\n  }\r\n\r\n  onRemoveValueChanged(data?:any) {\r\n    if (!this.removeForm) { return; }\r\n    const form = this.removeForm;\r\n    for (const field in this.removeFormErrors) {\r\n      if (this.removeFormErrors.hasOwnProperty(field)) {\r\n        //clear previous error message\r\n        this.removeFormErrors[field] = '';\r\n        const control = form.get(field);\r\n        if (control && !control.valid) {\r\n          const messages = this.removeFormValidationMessages[field];\r\n          for (const key in control.errors) {\r\n            if (control.errors.hasOwnProperty(key)) {\r\n              this.removeFormErrors[field] += messages[key] + ' ';\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  createRemoveForm() {\r\n    this.removeForm = this.fb.group({\r\n      name: ['', Validators.required]\r\n    });\r\n    this.removeForm.valueChanges\r\n    .subscribe(data => this.onRemoveValueChanged(data));\r\n    this.onRemoveValueChanged();\r\n  }\r\n\r\n  onRemoveSubmit() {\r\n\r\n    this.branchService.findOne({\r\n      'where': {\r\n        'name': this.removeForm.value.name,\r\n        'rentalServiceId': this.itemService.getServiceId()\r\n      }\r\n    })\r\n    .subscribe((branch) => {\r\n      var mybranch = branch as Branch;\r\n      this.branchService.deleteById(mybranch.id)\r\n      .subscribe(\r\n      (result) => {\r\n        this.openSnackBar(\"Branch deleted successfuly\", \"Dismiss\");\r\n      },\r\n      (err) => {\r\n        this.openSnackBar(\"Failed to delete branch\", \"Dismiss\");\r\n      });\r\n    },\r\n    (err) => {\r\n      this.openSnackBar(\"This branch does not exist\", \"Dismiss\");\r\n    })\r\n\r\n  }\r\n\r\n  changeFormErrors = {\r\n    'name': '',\r\n    'address': ''\r\n  }\r\n\r\n  changeFormValidationMessages = {\r\n    'name': {\r\n      'required': 'Name is required'\r\n    },\r\n    'address': {\r\n      'required': 'Address is required'\r\n    }\r\n  }\r\n\r\n  onChangeValueChanged(data?: any) {\r\n    if (!this.changeForm) { return; }\r\n    const form = this.changeForm;\r\n    for (const field in this.changeFormErrors) {\r\n      if (this.changeFormErrors.hasOwnProperty(field)) {\r\n        //clear previous error message\r\n        this.changeFormErrors[field] = '';\r\n        const control = form.get(field);\r\n        if (control && !control.valid) {\r\n          const messages = this.changeFormValidationMessages[field];\r\n          for (const key in control.errors) {\r\n            if (control.errors.hasOwnProperty(key)) {\r\n              this.changeFormErrors[field] += messages[key] + ' ';\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  createChangeForm() {\r\n    this.changeForm = this.fb.group({\r\n      name: ['', Validators.required],\r\n      address: ['', Validators.required]\r\n    });\r\n    this.changeForm.valueChanges\r\n    .subscribe(data => this.onChangeValueChanged(data));\r\n    this.onChangeValueChanged();\r\n  }\r\n\r\n  changeGrabBranch() {\r\n    var o1 = this.branchService.findOne({'where': {'name': this.changeForm.value.name,\r\n      'rentalServiceId': this.itemService.getServiceId()}});\r\n    o1.subscribe(\r\n    (result) => {\r\n      var mybranch = result as Branch;\r\n      this.changeForm.controls['address'].setValue(mybranch.address);\r\n    },\r\n    (err) => {\r\n      this.openSnackBar(\"This branch does not exist\", \"Dismiss\");\r\n    });\r\n  }\r\n\r\n  onChangeSubmit() {\r\n    var o1 = this.branchService.findOne({'where': {'name': this.changeForm.value.name,\r\n      'rentalServiceId': this.itemService.getServiceId()}});\r\n    o1.subscribe(\r\n      (result) => {\r\n        var mybranch = result as Branch;\r\n        mybranch.address = this.changeForm.value.address;\r\n        var o2 = this.branchService.updateAttributes(mybranch.id, mybranch);\r\n        o2.subscribe(\r\n          (result) => {\r\n            this.openSnackBar(\"Branch updated successfully\", \"Dismiss\");\r\n          },\r\n          (err) => {\r\n            this.openSnackBar(\"Failed to update branch\", \"Dismiss\");\r\n          });\r\n      },\r\n      (err) => {\r\n        this.openSnackBar(\"This branch does not exist\", \"Dismiss\");\r\n      });\r\n  }\r\n\r\n}\r\n","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\r\\n    <a mat-button (click)=\\\"setToIncomeForm()\\\" *ngIf=\\\"userType==='rentalServiceAdmin'\\\"> Income reports </a>\\r\\n    <a mat-button (click)=\\\"setToOccupancyForm()\\\" *ngIf=\\\"userType==='rentalServiceAdmin'\\\"> Occupancy reports </a>\\r\\n    <a mat-button (click)=\\\"setToRatingReport()\\\" *ngIf=\\\"userType==='rentalServiceAdmin'\\\"> Ratings report </a>\\r\\n    <span class=\\\"flex-spacer\\\"></span>\\r\\n    <!--<a mat-button (click)=\\\"openLoginForm()\\\"><span class=\\\"fa fa-sign-in fa-lg\\\">Login</span></a>-->\\r\\n</mat-toolbar>\\r\\n\\r\\n<div *ngIf=\\\"isIncomeForm&&userType==='rentalServiceAdmin'\\\" >\\r\\n  <div fxFlex fxFlexOffset=\\\"20px\\\" class=\\\"form-size\\\">\\r\\n    <form novalidate [formGroup]=\\\"incomeForm\\\" #incomeform=\\\"ngForm\\\" (ngSubmit)=\\\"onIncomeSubmit()\\\">\\r\\n        <p>\\r\\n            <mat-form-field class=\\\"form-size\\\">\\r\\n              <mat-select formControlName=\\\"type\\\" placeholder=\\\"Type of report\\\">\\r\\n                <mat-option value=\\\"weekly\\\">\\r\\n                  Weekly\\r\\n                </mat-option>\\r\\n                <mat-option value=\\\"monthly\\\">\\r\\n                  Monthly\\r\\n                </mat-option>\\r\\n                <mat-option value=\\\"yearly\\\">\\r\\n                  Yearly\\r\\n                </mat-option>\\r\\n              </mat-select>\\r\\n              <mat-error *ngIf=\\\"incomeFormErrors.type\\\">\\r\\n                  {{ incomeFormErrors.type }}\\r\\n              </mat-error>\\r\\n            </mat-form-field>\\r\\n        </p>\\r\\n        <p>\\r\\n          <mat-form-field class=\\\"half-width\\\">\\r\\n            <input matInput formControlName=\\\"start\\\" [matDatepicker]=\\\"myDatepicker\\\" placeholder=\\\"Start time\\\">\\r\\n            <mat-datepicker-toggle [for]=\\\"myDatepicker\\\"></mat-datepicker-toggle>\\r\\n            <mat-datepicker #myDatepicker></mat-datepicker>\\r\\n            <mat-error *ngIf=\\\"incomeFormErrors.start\\\">\\r\\n              {{ incomeFormErrors.start }}\\r\\n            </mat-error>\\r\\n          </mat-form-field>\\r\\n        </p>\\r\\n        <p>\\r\\n          <mat-form-field class=\\\"half-width\\\">\\r\\n            <input matInput formControlName=\\\"end\\\" [matDatepicker]=\\\"myDatepicker2\\\" placeholder=\\\"Return time\\\">\\r\\n            <mat-datepicker-toggle [for]=\\\"myDatepicker2\\\"></mat-datepicker-toggle>\\r\\n            <mat-datepicker #myDatepicker2></mat-datepicker>\\r\\n            <mat-error *ngIf=\\\"incomeFormErrors.end\\\">\\r\\n              {{ incomeFormErrors.end }}\\r\\n            </mat-error>\\r\\n          </mat-form-field>\\r\\n        </p>\\r\\n        <button type=\\\"submit\\\" mat-button class=\\\"background-primary text-floral-white\\\" [disabled]=\\\"incomeForm.invalid\\\">\\r\\n            Submit\\r\\n        </button>\\r\\n    </form>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"isOccupancyForm&&userType==='rentalServiceAdmin'\\\" >\\r\\n  <div fxFlex fxFlexOffset=\\\"20px\\\" class=\\\"form-size\\\">\\r\\n    <form novalidate [formGroup]=\\\"occupancyForm\\\" #occupancyform=\\\"ngForm\\\" (ngSubmit)=\\\"onOccupancySubmit()\\\">\\r\\n        <p>\\r\\n          <mat-form-field class=\\\"half-width\\\">\\r\\n            <input matInput formControlName=\\\"start\\\" [matDatepicker]=\\\"myDatepicker3\\\" placeholder=\\\"Start time\\\">\\r\\n            <mat-datepicker-toggle [for]=\\\"myDatepicker3\\\"></mat-datepicker-toggle>\\r\\n            <mat-datepicker #myDatepicker3></mat-datepicker>\\r\\n            <mat-error *ngIf=\\\"occupancyFormErrors.start\\\">\\r\\n                {{ occupancyFormErrors.start }}\\r\\n            </mat-error>\\r\\n          </mat-form-field>\\r\\n          </p>\\r\\n          <p>\\r\\n            <mat-form-field class=\\\"half-width\\\">\\r\\n              <input matInput formControlName=\\\"end\\\" [matDatepicker]=\\\"myDatepicker4\\\" placeholder=\\\"Return time\\\">\\r\\n              <mat-datepicker-toggle [for]=\\\"myDatepicker4\\\"></mat-datepicker-toggle>\\r\\n              <mat-datepicker #myDatepicker4></mat-datepicker>\\r\\n              <mat-error *ngIf=\\\"occupancyFormErrors.end\\\">\\r\\n                {{ occupancyFormErrors.end }}\\r\\n              </mat-error>\\r\\n            </mat-form-field>\\r\\n          </p>\\r\\n          <button type=\\\"submit\\\" mat-button class=\\\"background-primary text-floral-white\\\" [disabled]=\\\"occupancyForm.invalid\\\">\\r\\n              Submit\\r\\n          </button>\\r\\n    </form>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"isIncomeChart\\\">\\r\\n  <div fxFlex=\\\"50\\\">\\r\\n    <canvas baseChart\\r\\n      [datasets]=\\\"barChartData\\\"\\r\\n      [labels]=\\\"barChartLabels\\\"\\r\\n      [options]=\\\"barChartOptions\\\"\\r\\n      [legend]=\\\"barChartLegend\\\"\\r\\n      [chartType]=\\\"barChartType\\\"></canvas>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div fxLayout=\\\"column\\\" *ngIf=\\\"isRatingReport\\\">\\r\\n    <div fxFlex fxFlexOffset=\\\"20px\\\" class=\\\"form-size\\\">\\r\\n      Rental service <b>{{rentalServiceForRating.name}}</b> <br>\\r\\n      Rating: {{rentalServiceForRating.rating}}/5 <br>\\r\\n      Total ratings from users: {{rentalServiceForRating.ratingCount}} <br>\\r\\n    </div>\\r\\n    <div fxFlex fxFlexOffset=\\\"20px\\\" class=\\\"form-size\\\">\\r\\n      <table mat-table [dataSource]=\\\"carsForRating\\\">\\r\\n        <ng-container matColumnDef=\\\"registration\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef>Registration</th>\\r\\n            <td mat-cell *matCellDef=\\\"let car\\\">{{car.registration}}</td>\\r\\n          </ng-container>\\r\\n          <ng-container matColumnDef=\\\"rating\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef>Rating</th>\\r\\n            <td mat-cell *matCellDef=\\\"let car\\\">{{car.rating}}</td>\\r\\n          </ng-container>\\r\\n          <ng-container matColumnDef=\\\"ratingCount\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef>Number of rates</th>\\r\\n            <td mat-cell *matCellDef=\\\"let car\\\">{{car.ratingCount}}</td>\\r\\n          </ng-container>\\r\\n          <tr mat-header-row *matHeaderRowDef=\\\"columnsToDisplayCar\\\"></tr>\\r\\n          <tr mat-row *matRowDef=\\\"let car; columns: columnsToDisplayCar\\\">\\r\\n          </tr>\\r\\n      </table>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\"","module.exports = \"div.limited {\\n  max-height: 100px;\\n  max-width: 100px; }\\n\\ntd.mat-cell {\\n  padding: 15px; }\\n\\nth.mat-header-cell {\\n  padding: 15px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY2FyLWJ1c2luZXNzLXJlcG9ydHMvRDpcXER1c2FuXFwxRmFrc1xcTVJTX0lTQVxcTVJTX0lTQV9UaW0xMlxcRGFzVHJhdmVsU2l0ZS9zcmNcXGFwcFxcY2FyLWJ1c2luZXNzLXJlcG9ydHNcXGNhci1idXNpbmVzcy1yZXBvcnRzLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksaUJBQWlCO0VBQ2pCLGdCQUFnQixFQUFBOztBQUdwQjtFQUNJLGFBQWEsRUFBQTs7QUFHZjtFQUNFLGFBQWEsRUFBQSIsImZpbGUiOiJzcmMvYXBwL2Nhci1idXNpbmVzcy1yZXBvcnRzL2Nhci1idXNpbmVzcy1yZXBvcnRzLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiZGl2LmxpbWl0ZWQge1xyXG4gICAgbWF4LWhlaWdodDogMTAwcHg7XHJcbiAgICBtYXgtd2lkdGg6IDEwMHB4O1xyXG59XHJcblxyXG50ZC5tYXQtY2VsbCB7XHJcbiAgICBwYWRkaW5nOiAxNXB4O1xyXG4gIH1cclxuICBcclxuICB0aC5tYXQtaGVhZGVyLWNlbGwge1xyXG4gICAgcGFkZGluZzogMTVweDtcclxuICB9XHJcbiAgIl19 */\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { LoginServiceService } from '../login-service.service';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material';\r\nimport { RentalServiceApi, CarReservationApi, RentalService } from '../shared/sdk';\r\nimport { ItemService } from '../services/item.service';\r\n\r\n@Component({\r\n  selector: 'app-car-business-reports',\r\n  templateUrl: './car-business-reports.component.html',\r\n  styleUrls: ['./car-business-reports.component.scss']\r\n})\r\nexport class CarBusinessReportsComponent implements OnInit {\r\n\r\n  userType;\r\n\r\n  isIncomeForm = null;\r\n  isIncomeChart = null;\r\n  isOccupancyForm = null;\r\n  isRatingReport = null;\r\n\r\n  carsForRating = [];\r\n  rentalServiceForRating = {name: '', rating: '', ratingCount: ''};\r\n  columnsToDisplayCar = ['registration', 'rating', 'ratingCount'];\r\n\r\n  @ViewChild('incomeform') incomeFormDirective;\r\n  incomeForm : FormGroup;\r\n\r\n  @ViewChild('occupancyform') occupancyFormDirective;\r\n  occupancyForm : FormGroup;\r\n\r\n  public barChartOptions = {\r\n    scaleShowVerticalLines: false,\r\n    responsive: true\r\n  };\r\n\r\n  setToIncomeForm() {\r\n    this.isIncomeForm = true;\r\n    this.isIncomeChart = null;\r\n    this.isOccupancyForm = null;\r\n    this.isRatingReport = null;\r\n  }\r\n\r\n  setToIncomeChart() {\r\n    this.isIncomeForm = null;\r\n    this.isIncomeChart = true;\r\n    this.isOccupancyForm = null;\r\n    this.isRatingReport = null;\r\n  }\r\n\r\n  setToOccupancyForm() {\r\n    this.isIncomeForm = null;\r\n    this.isIncomeChart = null;\r\n    this.isOccupancyForm = true;\r\n    this.isRatingReport = null;\r\n  }\r\n\r\n  setToRatingReport() {\r\n    this.createRatingReport();\r\n    this.isIncomeForm = null;\r\n    this.isIncomeChart = null;\r\n    this.isOccupancyForm = null;\r\n    this.isRatingReport = true;\r\n  }\r\n  \r\n\r\n\r\n  public barChartLabels = ['2006', '2007', '2008', '2009', '2010', '2011', '2012'];\r\n  public barChartType = 'bar';\r\n  public barChartLegend = true;\r\n\r\n  public barChartData = [\r\n    {data: [65, 59, 80, 81, 56, 55, 40], label: 'Series A'},\r\n    {data: [50, 40, 30, 70, 50, 66, 70], label: 'Series B'}\r\n  ];\r\n\r\n  constructor(private loginService: LoginServiceService,\r\n    private fb: FormBuilder,\r\n    public snackBar: MatSnackBar,\r\n    private rentalServiceService: RentalServiceApi,\r\n    private reservationService: CarReservationApi,\r\n    private itemService: ItemService) { \r\n    this.loginService.user.subscribe(data => {\r\n      if (data) {\r\n        this.userType = data.user.type;\r\n      }\r\n    });\r\n    this.createIncomeForm();\r\n    this.createOccupancyForm();\r\n    this.createRatingReport();\r\n  }\r\n\r\n  openSnackBar(message: string, action: string) {\r\n    this.snackBar.open(message, action, {\r\n      duration: 2000,\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n\r\n\r\n \r\n\r\n  createIncomeForm() {\r\n    this.incomeForm = this.fb.group({\r\n      type: ['', Validators.required],\r\n      start: ['', Validators.required],\r\n      end: ['', Validators.required]\r\n    });\r\n    this.incomeForm.valueChanges.subscribe(data => this.onIncomeValueChanged(data));\r\n    this.onIncomeValueChanged();\r\n  }\r\n\r\n  createOccupancyForm() {\r\n    this.occupancyForm = this.fb.group({\r\n      start: ['', Validators.required],\r\n      end: ['', Validators.required]\r\n    });\r\n    this.occupancyForm.valueChanges.subscribe(data => this.onOccupancyValueChanged(data));\r\n    this.onOccupancyValueChanged();\r\n  }\r\n\r\n  onIncomeValueChanged(data?: any) {\r\n    if (!this.incomeForm) {\r\n      return;\r\n    }\r\n    const form = this.incomeForm;\r\n    for (const field in this.incomeFormErrors) {\r\n      if (this.incomeFormErrors.hasOwnProperty(field)) {\r\n        //clear previous error message\r\n        this.incomeFormErrors[field] = '';\r\n        const control = form.get(field);\r\n        if (control && !control.valid) {\r\n          const messages = this.incomeFormValidationMessages[field];\r\n          for (const key in control.errors) {\r\n            if (control.errors.hasOwnProperty(key)) {\r\n              this.incomeFormErrors[field] += messages[key] + ' ';\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  onOccupancyValueChanged(data?: any) {\r\n    if (!this.occupancyForm) {\r\n      return;\r\n    }\r\n    const form = this.occupancyForm;\r\n    for (const field in this.occupancyFormErrors) {\r\n      if (this.occupancyFormErrors.hasOwnProperty(field)) {\r\n        //clear previous error message\r\n        this.occupancyFormErrors[field] = '';\r\n        const control = form.get(field);\r\n        if (control && !control.valid) {\r\n          const messages = this.occupancyFormValidationMessages[field];\r\n          for (const key in control.errors) {\r\n            if (control.errors.hasOwnProperty(key)) {\r\n              this.occupancyFormErrors[field] += messages[key] + ' ';\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  incomeFormErrors = {\r\n    'type': '',\r\n    'start': '',\r\n    'end': ''\r\n  };\r\n\r\n  incomeFormValidationMessages = {\r\n    'type': {\r\n      'required': 'Type is required'\r\n    },\r\n    'start': {\r\n      'required': 'Start date is required'\r\n    },\r\n    'end': {\r\n      'required': 'End date is required'\r\n    }\r\n  };\r\n\r\n  occupancyFormErrors = {\r\n    'start': '',\r\n    'end': ''\r\n  };\r\n\r\n  occupancyFormValidationMessages = {\r\n    'start': {\r\n      'required': 'Start date is required'\r\n    },\r\n    'end': {\r\n      'required': 'End date is required'\r\n    }\r\n  };\r\n\r\n  onIncomeSubmit() {\r\n\r\n\r\n    var observable;\r\n    if (this.incomeForm.value.type === 'yearly') {\r\n      observable = this.reservationService.getYearlyReport(new Date(this.incomeForm.value.start).toJSON(),\r\n        new Date(this.incomeForm.value.end).toJSON(), this.itemService.getServiceId())\r\n    } else if (this.incomeForm.value.type == 'monthly') {\r\n      observable = this.reservationService.getMonthlyReport(new Date(this.incomeForm.value.start).toJSON(),\r\n      new Date(this.incomeForm.value.end).toJSON(), this.itemService.getServiceId());\r\n    } else {\r\n      observable = this.reservationService.getWeeklyReport(new Date(this.incomeForm.value.start).toJSON(),\r\n      new Date(this.incomeForm.value.end).toJSON(), this.itemService.getServiceId())\r\n    }\r\n    observable.subscribe(\r\n      (result) => {\r\n        this.barChartLabels = result.retval.labels;\r\n        this.barChartData = [{data: [], label: \"Income\"}];\r\n        this.barChartData[0].data = result.retval.sums;\r\n        this.setToIncomeChart();\r\n      },\r\n      (err) => {\r\n        this.openSnackBar(\"Failed to retrieve business report\", \"Dismiss\");\r\n      }\r\n    )\r\n\r\n  }\r\n\r\n  onOccupancySubmit() {\r\n\r\n    this.reservationService.getOccupancyReport(new Date(this.occupancyForm.value.start).toJSON(),\r\n      new Date(this.occupancyForm.value.end).toJSON(), this.itemService.getServiceId())\r\n    .subscribe(\r\n      (result) => {\r\n        this.barChartLabels = result.retval.labels;\r\n        this.barChartData = [{data: [], label: \"Reserved vehicles\"}, {data: [], label: \"Free vehicles\"}];\r\n        this.barChartData[0].data = result.retval.sums;\r\n        console.log(result);\r\n        for (let count of this.barChartData[0].data) {\r\n          this.barChartData[1].data.push(result.retval.totalVehicles - count);\r\n        }\r\n        this.setToIncomeChart();\r\n      },\r\n      (err) => {\r\n        this.openSnackBar(\"Failed to retrieve business report\", \"Dismiss\");\r\n      }\r\n    )\r\n\r\n  }\r\n\r\n  createRatingReport() {\r\n    this.reservationService.getRatingReport(this.itemService.getServiceId())\r\n    .subscribe(\r\n      (result) => {\r\n        this.carsForRating = result.retval.cars;\r\n        this.rentalServiceForRating = result.retval.rentalService;\r\n      },\r\n      (err) => {\r\n        this.openSnackBar(\"Failed to retrieve rating report\", \"Dismiss\");\r\n      }\r\n    )\r\n    \r\n  }\r\n\r\n}\r\n","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\r\\n  <a mat-button (click)=\\\"setToAdd()\\\" *ngIf=\\\"userType==='rentalServiceAdmin'\\\"> Add</a>\\r\\n  <a mat-button (click)=\\\"setToRemove()\\\" *ngIf=\\\"userType==='rentalServiceAdmin'\\\"> Remove </a>\\r\\n  <a mat-button (click)=\\\"setToChange()\\\" *ngIf=\\\"userType==='rentalServiceAdmin'\\\"> Change </a>\\r\\n  <a mat-button (click)=\\\"setToList()\\\" *ngIf=\\\"userType==='rentalServiceAdmin'\\\">List </a>\\r\\n</mat-toolbar>\\r\\n\\r\\n<div *ngIf=\\\"isAdd&&userType==='rentalServiceAdmin'\\\" >\\r\\n  <div fxFlex fxFlexOffset=\\\"20px\\\" class=\\\"form-size\\\">\\r\\n    <form novalidate [formGroup]=\\\"addForm\\\" #addform=\\\"ngForm\\\" (ngSubmit)=\\\"onAddSubmit()\\\">\\r\\n      <p>\\r\\n        <mat-form-field class=\\\"half-width\\\">\\r\\n          <input matInput formControlName=\\\"start\\\" [matDatepicker]=\\\"myDatepicker\\\" placeholder=\\\"Start time\\\">\\r\\n          <mat-datepicker-toggle [for]=\\\"myDatepicker\\\"></mat-datepicker-toggle>\\r\\n          <mat-datepicker #myDatepicker></mat-datepicker>\\r\\n          <mat-error *ngIf=\\\"addFormErrors.start\\\">\\r\\n            {{ addFormErrors.start }}\\r\\n          </mat-error>\\r\\n        </mat-form-field>\\r\\n      </p>\\r\\n      <p>\\r\\n        <mat-form-field class=\\\"half-width\\\">\\r\\n          <input matInput formControlName=\\\"end\\\" [matDatepicker]=\\\"myDatepicker2\\\" placeholder=\\\"Return time\\\">\\r\\n          <mat-datepicker-toggle [for]=\\\"myDatepicker2\\\"></mat-datepicker-toggle>\\r\\n          <mat-datepicker #myDatepicker2></mat-datepicker>\\r\\n          <mat-error *ngIf=\\\"addFormErrors.end\\\">\\r\\n            {{ addFormErrors.end }}\\r\\n          </mat-error>\\r\\n        </mat-form-field>\\r\\n      </p>\\r\\n      <p>\\r\\n      <mat-form-field class=\\\"half-width\\\">\\r\\n        <input matInput formControlName=\\\"registration\\\" placeholder=\\\"Registration\\\" type=\\\"text\\\">\\r\\n        <mat-error *ngIf=\\\"addFormErrors.registration\\\">\\r\\n          {{ addFormErrors.registration }}\\r\\n        </mat-error>\\r\\n      </mat-form-field>\\r\\n      </p>\\r\\n      <p>\\r\\n        <mat-form-field class=\\\"half-width\\\">\\r\\n          <input matInput formControlName=\\\"discount\\\" placeholder=\\\"Discount\\\" pattern=\\\"[0-9]*\\\" type=\\\"text\\\">\\r\\n          <mat-error *ngIf=\\\"addFormErrors.discount\\\">\\r\\n            {{ addFormErrors.discount }}\\r\\n          </mat-error>\\r\\n        </mat-form-field>\\r\\n      </p>\\r\\n        <button type=\\\"submit\\\" mat-button class=\\\"background-primary text-floral-white\\\" [disabled]=\\\"addForm.invalid\\\">\\r\\n            Submit\\r\\n        </button>\\r\\n      </form>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"isRemove&&userType==='rentalServiceAdmin'\\\" >\\r\\n  <div fxFlex fxFlexOffset=\\\"20px\\\" class=\\\"form-size\\\">\\r\\n    <form novalidate [formGroup]=\\\"deleteForm\\\" #deleteform=\\\"ngForm\\\" (ngSubmit)=\\\"onDeleteSubmit()\\\">\\r\\n      <p>\\r\\n        <mat-form-field class=\\\"half-width\\\">\\r\\n        <input matInput formControlName=\\\"registration\\\" placeholder=\\\"Registration\\\" type=\\\"text\\\">\\r\\n        <mat-error *ngIf=\\\"deleteFormErrors.registration\\\">\\r\\n          {{ deleteFormErrors.registration }}\\r\\n        </mat-error>\\r\\n        </mat-form-field>\\r\\n      </p>\\r\\n      <p>\\r\\n        <mat-form-field class=\\\"half-width\\\">\\r\\n          <input matInput formControlName=\\\"start\\\" [matDatepicker]=\\\"myDatepicker\\\" placeholder=\\\"Start time\\\">\\r\\n          <mat-datepicker-toggle [for]=\\\"myDatepicker\\\"></mat-datepicker-toggle>\\r\\n          <mat-datepicker #myDatepicker></mat-datepicker>\\r\\n          <mat-error *ngIf=\\\"deleteFormErrors.start\\\">\\r\\n            {{ deleteFormErrors.start }}\\r\\n          </mat-error>\\r\\n        </mat-form-field>\\r\\n      </p>\\r\\n      <button type=\\\"submit\\\" mat-button class=\\\"background-primary text-floral-white\\\" [disabled]=\\\"deleteForm.invalid\\\">\\r\\n          Submit\\r\\n      </button>\\r\\n    </form>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"isChange&&userType==='rentalServiceAdmin'\\\" >\\r\\n  <div fxFlex fxFlexOffset=\\\"20px\\\" class=\\\"form-size\\\">\\r\\n    <form novalidate [formGroup]=\\\"changeForm\\\" #changeform=\\\"ngForm\\\" (ngSubmit)=\\\"onChangeSubmit()\\\">\\r\\n      <p>\\r\\n        <mat-form-field class=\\\"half-width\\\">\\r\\n        <input matInput formControlName=\\\"registration\\\" placeholder=\\\"Registration\\\" type=\\\"text\\\">\\r\\n        <mat-error *ngIf=\\\"changeFormErrors.registration\\\">\\r\\n          {{ changeFormErrors.registration }}\\r\\n        </mat-error>\\r\\n        </mat-form-field>\\r\\n      </p>\\r\\n      <p>\\r\\n        <mat-form-field class=\\\"half-width\\\">\\r\\n          <input matInput formControlName=\\\"start\\\" [matDatepicker]=\\\"myDatepicker\\\" placeholder=\\\"Start time\\\">\\r\\n          <mat-datepicker-toggle [for]=\\\"myDatepicker\\\"></mat-datepicker-toggle>\\r\\n          <mat-datepicker #myDatepicker></mat-datepicker>\\r\\n          <mat-error *ngIf=\\\"changeFormErrors.start\\\">\\r\\n            {{ changeFormErrors.start }}\\r\\n          </mat-error>\\r\\n        </mat-form-field>\\r\\n      </p>\\r\\n      <p>\\r\\n          <mat-form-field class=\\\"half-width\\\">\\r\\n            <input matInput formControlName=\\\"newDiscount\\\" placeholder=\\\"New discount\\\" type=\\\"text\\\" pattern=\\\"[0-9]*\\\">\\r\\n            <mat-error *ngIf=\\\"changeFormErrors.newDiscount\\\">\\r\\n                {{ changeFormErrors.newDiscount }}\\r\\n            </mat-error>\\r\\n          </mat-form-field>\\r\\n\\r\\n      </p>\\r\\n      <button type=\\\"submit\\\" mat-button class=\\\"background-primary text-floral-white\\\" [disabled]=\\\"changeForm.invalid\\\">\\r\\n          Submit\\r\\n      </button>\\r\\n    </form>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"isList&&userType==='rentalServiceAdmin'\\\">\\r\\n  <app-list-car-discounts></app-list-car-discounts>\\r\\n  list all discounts from this rental service (for now all of them)\\r\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Nhci1kaXNjb3VudHMvY2FyLWRpc2NvdW50cy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { LoginServiceService } from '../login-service.service';\r\nimport { MatSnackBar } from '@angular/material';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport {CarApi} from '../shared/sdk';\r\nimport {ItemService} from '../services/item.service';\r\nimport { CarSpecialOfferApi } from '../shared/sdk/services'\r\n\r\n@Component({\r\n  selector: 'app-car-discounts',\r\n  templateUrl: './car-discounts.component.html',\r\n  styleUrls: ['./car-discounts.component.scss']\r\n})\r\nexport class CarDiscountsComponent implements OnInit {\r\n\r\n\r\n  addForm: FormGroup;\r\n  @ViewChild('addform') addFormDirective;\r\n\r\n  deleteForm: FormGroup;\r\n  @ViewChild('deleteform') deleteFormDirective;\r\n\r\n  changeForm: FormGroup;\r\n  @ViewChild('changeform') changeFormDirective;\r\n\r\n  constructor(private loginService: LoginServiceService,\r\n    public snackBar: MatSnackBar,\r\n    private fb: FormBuilder,\r\n    private carService: CarApi,\r\n    private itemService: ItemService,\r\n    private specialOfferService: CarSpecialOfferApi) { \r\n    loginService.user.subscribe(data => {\r\n      if (data) {\r\n        this.userType = data.user.type;\r\n      }\r\n    });\r\n    this.createAddForm();\r\n    this.createDeleteForm();\r\n    this.createChangeForm();\r\n  }\r\n\r\n  isAdd: boolean = null;\r\n  isRemove: boolean = null;\r\n  isChange: boolean = null;\r\n  isList : boolean = null;\r\n  userType: any;\r\n\r\n  openSnackBar(message: string, action: string) {\r\n    this.snackBar.open(message, action, {\r\n       duration: 2000,\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  setToAdd() {\r\n    this.isAdd = true;\r\n    this.isRemove = null;\r\n    this.isChange = null;\r\n    this.isList = null;\r\n  }\r\n\r\n  setToRemove() {\r\n    this.isAdd = null;\r\n    this.isRemove = true;\r\n    this.isChange = null;\r\n    this.isList = null;\r\n  }\r\n\r\n  setToChange() {\r\n    this.isAdd = null;\r\n    this.isRemove = null;\r\n    this.isChange = true;\r\n    this.isList = null;\r\n  }\r\n\r\n  setToList() {\r\n    this.isAdd = null;\r\n    this.isRemove = null;\r\n    this.isChange = null;\r\n    this.isList = true;\r\n  }\r\n\r\n  addFormErrors = {\r\n    'start': '',\r\n    'end': '',\r\n    'registration': '',\r\n    'discount': ''\r\n  };\r\n\r\n  addFormValidationMessages = {\r\n    'start': {\r\n      'required': 'Start time is required',\r\n      'minv': 'Start time has to be smaller than end time',\r\n      'ming': 'Start time has to be after today'\r\n    },\r\n    'end': {\r\n      'required': 'End time is required'\r\n    },\r\n    'registration': {\r\n      'required': 'Registration is required'\r\n    },\r\n    'discount': {\r\n      'required': 'Discount is required',\r\n      'pattern': 'Discount has to be a number'\r\n    }\r\n  };\r\n\r\n  onAddValueChanged(data?: any) {\r\n    if (!this.addForm) {\r\n      return;\r\n    }\r\n    const form = this.addForm;\r\n    for (const field in this.addFormErrors) {\r\n      if (this.addFormErrors.hasOwnProperty(field)) {\r\n        //clear previous error message\r\n        this.addFormErrors[field] = '';\r\n        const control = form.get(field);\r\n        if (control && !control.valid) {\r\n          const messages = this.addFormValidationMessages[field];\r\n          for (const key in control.errors) {\r\n            if (control.errors.hasOwnProperty(key)) {\r\n              this.addFormErrors[field] += messages[key] + ' ';\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    const startDate = new Date(this.addForm.get('start').value);\r\n    const now = new Date();\r\n    const endDate = new Date(this.addForm.get('end').value);\r\n\r\n    if (startDate > endDate) {\r\n      this.addFormErrors['start'] += this.addFormValidationMessages['start']['minv'] + ' ';\r\n      this.addForm.controls['start'].setErrors({'minv' : true});\r\n    }\r\n\r\n    if (startDate < now ) {\r\n      this.addFormErrors['start'] += this.addFormValidationMessages['start']['ming'] + ' ';\r\n      this.addForm.controls['start'].setErrors({'ming' : true});\r\n    }\r\n\r\n\r\n\r\n  }\r\n\r\n  onDeleteValueChanged(data?: any) {\r\n    if (!this.deleteForm) {\r\n      return;\r\n    }\r\n    const form = this.deleteForm;\r\n    for (const field in this.deleteFormErrors) {\r\n      if (this.deleteFormErrors.hasOwnProperty(field)) {\r\n        //clear previous error message\r\n        this.deleteFormErrors[field] = '';\r\n        const control = form.get(field);\r\n        if (control && !control.valid) {\r\n          const messages = this.deleteFormValidationMessages[field];\r\n          for (const key in control.errors) {\r\n            if (control.errors.hasOwnProperty(key)) {\r\n              this.deleteFormErrors[field] += messages[key] + ' ';\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  onChangeValueChanged(data? : any) {\r\n    if (!this.changeForm) {\r\n      return;\r\n    }\r\n    const form = this.changeForm;\r\n    for (const field in this.changeFormErrors) {\r\n      if (this.changeFormErrors.hasOwnProperty(field)) {\r\n        //clear previous error message\r\n        this.changeFormErrors[field] = '';\r\n        const control = form.get(field);\r\n        if (control && !control.valid) {\r\n          const messages = this.changeFormValidationMessages[field];\r\n          for (const key in control.errors) {\r\n            if (control.errors.hasOwnProperty(key)) {\r\n              this.changeFormErrors[field] += messages[key] + ' ';\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  deleteFormErrors = {\r\n    'start': '',\r\n    'registration': ''\r\n  };\r\n\r\n  deleteFormValidationMessages = {\r\n    'start': {\r\n      'required': 'Start time is required'\r\n    },\r\n    'registration': {\r\n      'required': 'Registration is required'\r\n    }\r\n  };\r\n\r\n  changeFormErrors = {\r\n    'start': '',\r\n    'registration': '',\r\n    'newDiscount': ''\r\n  };\r\n\r\n  changeFormValidationMessages = {\r\n    'start': {\r\n      'required': 'Start time is required'\r\n    },\r\n    'registration': {\r\n      'required': 'Registration is required'\r\n    },\r\n    'newDiscount': {\r\n      'required': 'New discount value is required',\r\n      'pattern': 'Discount has to be a number'\r\n    }\r\n  };\r\n\r\n  createAddForm() {\r\n    this.addForm = this.fb.group({\r\n      start: ['', Validators.required],\r\n      end: ['', Validators.required],\r\n      registration: ['', Validators.required],\r\n      discount: [0, [Validators.required, Validators.pattern]]\r\n    });\r\n    this.addForm.valueChanges.subscribe(data => this.onAddValueChanged(data));\r\n    this.onAddValueChanged();\r\n  }\r\n\r\n  createDeleteForm() {\r\n    this.deleteForm = this.fb.group({\r\n      registration: ['', Validators.required],\r\n      start: ['', Validators.required]\r\n    });\r\n    this.deleteForm.valueChanges.subscribe(data => this.onDeleteValueChanged(data));\r\n    this.onDeleteValueChanged();\r\n  }\r\n\r\n  createChangeForm() {\r\n    this.changeForm = this.fb.group({\r\n      registration: ['', Validators.required],\r\n      start: ['', Validators.required],\r\n      newDiscount: ['', [Validators.required, Validators.pattern]]\r\n    });\r\n    this.changeForm.valueChanges.subscribe(data => this.onChangeValueChanged(data));\r\n    this.onChangeValueChanged();\r\n  }\r\n\r\n  matchCarAndPrice(car, prices, start) {\r\n    car.price = 0;\r\n      car.start = new Date(0);\r\n      car.category = \"B\"; //ovaj red treba izbaciti, tu je zarad testiranja\r\n      for (let price of prices) {\r\n        if (car.rentalServiceId == price.rentalServiceId) {\r\n          if (start > price.start && car.start < price.start) {\r\n            car.start = price.start;\r\n            car.price = price['cat' + car.category + 'Price'];\r\n          }\r\n        }\r\n      }\r\n  }\r\n\r\n  onAddSubmit() {\r\n    this.carService.findOne({'where': {'registration': this.addForm.value.registration}})\r\n    .subscribe(\r\n      (car) => {\r\n        var car_res = car as any;\r\n        this.itemService.getPrices().subscribe(\r\n          (prices) => {\r\n            this.matchCarAndPrice(car_res, prices, this.addForm.value.start)\r\n            var startDate = new Date(this.addForm.value.start).toJSON();\r\n            var endDate = new Date(this.addForm.value.end).toJSON();\r\n\r\n            console.log(startDate);\r\n            console.log(endDate);\r\n\r\n            var oneDay = 24*60*60*1000; // hours*minutes*seconds*milliseconds\r\n            var days = 1 + Math.round(Math.abs((new Date(startDate).getTime() - new Date(endDate).getTime())/(oneDay)));\r\n            var totalPrice = days * car_res.price\r\n            this.specialOfferService.makeSpecialOffer(startDate, endDate, car_res.id,\r\n               totalPrice, car_res.rentalServiceId, this.addForm.value.discount, car_res.registration)\r\n            .subscribe((result) => {\r\n              this.openSnackBar(\"Successfully added special offer at this date\", \"Dismiss\");\r\n            },\r\n            (err) => {\r\n              this.openSnackBar(\"Failed to make a special offer at this date\", \"Dismiss\");\r\n            })\r\n          },\r\n          (err) => {\r\n            this.openSnackBar(\"Failed to retrieve prices\", \"Dismiss\");\r\n          });\r\n      },\r\n      (err) => {\r\n        this.openSnackBar(\"No car with this registration exists\", \"Dismiss\");\r\n      }\r\n    )\r\n  }\r\n\r\n  onDeleteSubmit() {\r\n    this.specialOfferService.removeOffer(new Date(this.deleteForm.value.start).toJSON(), this.deleteForm.value.registration)\r\n    .subscribe((result) => {\r\n      if (result.retval.count == 0) {\r\n        this.openSnackBar(\"No special offer like this exists\", \"Dismiss\");\r\n      } else {\r\n        this.openSnackBar(\"Successfully removed special offer\", \"Dismiss\");\r\n      }\r\n    },\r\n    (err) => {\r\n      this.openSnackBar(\"Could not delete this special offer, already reserved\", \"Dismiss\");\r\n    })\r\n  }\r\n\r\n  onChangeSubmit() {\r\n    this.specialOfferService.changeOffer(new Date(this.changeForm.value.start).toJSON(), this.changeForm.value.registration,\r\n     this.changeForm.value.newDiscount)\r\n    .subscribe(\r\n      (result) => {\r\n        if (result.retval.count == 0) {\r\n          this.openSnackBar(\"No special offer like this exists\", \"Dismiss\");\r\n        } else {\r\n          this.openSnackBar(\"Successfully changed special offer\", \"Dismiss\");\r\n        }\r\n    },\r\n    (err) => {\r\n      this.openSnackBar(\"Could not change this special offer, already reserved\", \"Dismiss\");\r\n    })\r\n  }\r\n}\r\n\r\n\r\n","module.exports = \"<table #tablereservations mat-table [dataSource]=\\\"reservationsInfo\\\">\\r\\n  <ng-container matColumnDef=\\\"rentalService\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef>Rental service</th>\\r\\n    <td mat-cell *matCellDef=\\\"let reservationInfo\\\">{{reservationInfo.rentalService.name}}</td>\\r\\n  </ng-container>\\r\\n  <ng-container matColumnDef=\\\"make\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef>Car make</th>\\r\\n    <td mat-cell *matCellDef=\\\"let reservationInfo\\\">{{reservationInfo.car.make}}</td>\\r\\n  </ng-container>\\r\\n  <ng-container matColumnDef=\\\"registration\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef>Registration</th>\\r\\n    <td mat-cell *matCellDef=\\\"let reservationInfo\\\">{{reservationInfo.car.registration}}</td>\\r\\n  </ng-container>\\r\\n  <ng-container matColumnDef=\\\"startDate\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef>Start Date</th>\\r\\n    <td mat-cell *matCellDef=\\\"let reservationInfo\\\">{{reservationInfo.reservation.startDate | date:'dd/MM/yyyy'}}</td>\\r\\n  </ng-container>\\r\\n  <ng-container matColumnDef=\\\"endDate\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef>End Date</th>\\r\\n    <td mat-cell *matCellDef=\\\"let reservationInfo\\\">{{reservationInfo.reservation.endDate | date:'dd/MM/yyyy'}}</td>\\r\\n  </ng-container>\\r\\n  <ng-container matColumnDef=\\\"price\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef>Price</th>\\r\\n    <td mat-cell *matCellDef=\\\"let reservationInfo\\\">{{reservationInfo.reservation.price}}</td>\\r\\n  </ng-container>\\r\\n  <ng-container matColumnDef=\\\"action\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef>Action</th>\\r\\n    <td mat-cell *matCellDef=\\\"let reservationInfo\\\"> <button id={{reservationInfo.reservation.id}} mat-button (click)='mymethod($event)'> Cancel </button> </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <ng-container matColumnDef=\\\"rate\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef>Rate</th>\\r\\n      <td mat-cell *matCellDef=\\\"let reservationInfo\\\"> <button *ngIf=!reservationInfo.reservation.rated id={{reservationInfo.reservation.id}} mat-button (click)='rateDialog($event)'> Rate </button> \\r\\n        <div *ngIf=reservationInfo.reservation.rated style=\\\"color:green\\\"> Rated </div> </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <tr mat-header-row *matHeaderRowDef=\\\"columnsToDisplayReservations\\\"></tr>\\r\\n  <tr mat-row *matRowDef=\\\"let myRowData; columns: columnsToDisplayReservations\\\"></tr>\\r\\n</table>\\r\\n<div>\\r\\n  <a mat-button (click)=\\\"previousPage()\\\" [disabled]=\\\"this.pageNum === 0\\\">Previous page</a>\\r\\n  <a mat-button (click)=\\\"nextPage()\\\" [disabled]=\\\"this.reservationsInfo.length !== this.pageSize\\\">Next page</a>\\r\\n</div>\\r\\n\"","module.exports = \"td.mat-cell {\\n  padding: 15px; }\\n\\nth.mat-header-cell {\\n  padding: 15px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY2FyLXJlc2VydmF0aW9uLWxpc3QvRDpcXER1c2FuXFwxRmFrc1xcTVJTX0lTQVxcTVJTX0lTQV9UaW0xMlxcRGFzVHJhdmVsU2l0ZS9zcmNcXGFwcFxcY2FyLXJlc2VydmF0aW9uLWxpc3RcXGNhci1yZXNlcnZhdGlvbi1saXN0LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBYSxFQUFBOztBQUdmO0VBQ0UsYUFBYSxFQUFBIiwiZmlsZSI6InNyYy9hcHAvY2FyLXJlc2VydmF0aW9uLWxpc3QvY2FyLXJlc2VydmF0aW9uLWxpc3QuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0ZC5tYXQtY2VsbCB7XHJcbiAgcGFkZGluZzogMTVweDtcclxufVxyXG5cclxudGgubWF0LWhlYWRlci1jZWxsIHtcclxuICBwYWRkaW5nOiAxNXB4O1xyXG59XHJcbiJdfQ== */\"","import {Component, Inject, OnInit, ViewChild} from '@angular/core';\r\nimport {Car, CarReservation, RentalService, Room} from '../shared/sdk/models';\r\nimport {MatSnackBar, MatTable, MatDialog} from '@angular/material';\r\nimport {CarApi, MyuserApi, RentalServiceApi, CarReservationApi} from '../shared/sdk/services/custom';\r\nimport { RateCarAndServiceComponent } from '../rate-car-and-service/rate-car-and-service.component';\r\nimport { ItemService } from '../services/item.service';\r\n\r\n@Component({\r\n  selector: 'app-car-reservation-list',\r\n  templateUrl: './car-reservation-list.component.html',\r\n  styleUrls: ['./car-reservation-list.component.scss']\r\n})\r\nexport class CarReservationListComponent implements OnInit {\r\n  carReservations: CarReservation[];\r\n  reservationsInfo = [];\r\n  pageNum = 0;\r\n  pageSize = 8;\r\n\r\n  columnsToDisplayReservations = ['rentalService', 'make', 'registration', 'startDate', 'endDate', 'price', 'action', 'rate'];\r\n\r\n  @ViewChild('tablereservations') tableReservations: MatTable<any>;\r\n\r\n  constructor(@Inject('baseURL') private baseURL,\r\n              private myuserservice: MyuserApi,\r\n              private carservice: CarApi,\r\n              private rentalserviceservice: RentalServiceApi,\r\n              private snackBar: MatSnackBar,\r\n              private reservationService: CarReservationApi,\r\n              public dialog: MatDialog,\r\n              private itemService: ItemService\r\n              ) { }\r\n\r\n  ngOnInit() {\r\n    this.getReservations();\r\n  }\r\n\r\n  getReservations() {\r\n    if (this.myuserservice.getCachedCurrent()) {\r\n      this.myuserservice.getCarReservations(this.myuserservice.getCachedCurrent().id,\r\n        this.pageSize, this.pageNum * this.pageSize)\r\n        .subscribe(result => {\r\n          this.carReservations = result.retval;\r\n          const done = new Promise((resolve, reject) => {\r\n            let index = 0;\r\n            this.reservationsInfo = [];\r\n            for (const carReservation of this.carReservations) {\r\n              const idLen = carReservation.carsId.length;\r\n              this.carservice.findById(carReservation.carsId)\r\n                .subscribe((car: Car) => {\r\n                  this.rentalserviceservice.findById(car.rentalServiceId)\r\n                    .subscribe((rentalService: RentalService) => {\r\n                      this.reservationsInfo.push({reservation: carReservation, car: car, rentalService: rentalService,\r\n                      method: \"mymethod()\"});\r\n                      index++;\r\n                      if (index === this.carReservations.length) {\r\n                        resolve();\r\n                      }\r\n                    }, err => this.openSnackBar('Something went wrong. Please try again.', 'Dismiss'));\r\n                }, err => this.openSnackBar('Something went wrong. Please try again.', 'Dismiss'));\r\n\r\n            }\r\n          });\r\n          done.then(() => {\r\n            this.tableReservations.renderRows();\r\n          });\r\n        }, err => this.openSnackBar('Something went wrong. Please try again.', 'Dismiss'));\r\n\r\n    }\r\n  }\r\n\r\n  openSnackBar(message: string, action: string) {\r\n    this.snackBar.open(message, action, {\r\n      duration: 2000,\r\n    });\r\n  }\r\n\r\n  nextPage() {\r\n    if (this.reservationsInfo.length === this.pageSize) {\r\n      this.pageNum++;\r\n      this.getReservations();\r\n    }\r\n  }\r\n\r\n  previousPage() {\r\n    if (this.pageNum > 0) {\r\n      this.pageNum--;\r\n      this.getReservations();\r\n    }\r\n  }\r\n\r\n  mymethod(event) {\r\n    var reservationid;\r\n    if (event.path[1].id == \"\") {\r\n      reservationid = event.path[0].id;\r\n    }\r\n    if (event.path[0].id == \"\") {\r\n      reservationid = event.path[1].id;\r\n    }\r\n    this.reservationService.cancel(reservationid)\r\n    .subscribe(\r\n      (result) => {\r\n        this.openSnackBar(\"Successfully cancelled reservation\", \"Dismiss\");\r\n      },\r\n      (err) => {\r\n        this.openSnackBar(\"Failed to cancel reservation\", \"Dismiss\");\r\n      }\r\n    )\r\n  }\r\n\r\n  rateDialog(event) {\r\n    var reservationid;\r\n    if (event.path[1].id == \"\") {\r\n      reservationid = event.path[0].id;\r\n    }\r\n    if (event.path[0].id == \"\") {\r\n      reservationid = event.path[1].id;\r\n    }\r\n    this.itemService.setCarReservationIdForRate(reservationid);\r\n    this.dialog.open(RateCarAndServiceComponent, {width: '500px', height: '450 px'})\r\n\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\n","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\r\\n  <a mat-button (click)=\\\"setToAdd()\\\"> Add</a>\\r\\n  <span class=\\\"flex-spacer\\\"></span>\\r\\n</mat-toolbar>\\r\\n\\r\\n<div *ngIf=\\\"isAdd\\\">\\r\\n  <div fxFlex fxFlexOffset=\\\"20px\\\" class=\\\"form-size\\\">\\r\\n      <form novalidate [formGroup]=\\\"addForm\\\" #addform=\\\"ngForm\\\" (ngSubmit)=\\\"onAddSubmit()\\\">\\r\\n        <p>\\r\\n          <mat-form-field class=\\\"half-width\\\">\\r\\n            <input matInput formControlName=\\\"start\\\" [matDatepicker]=\\\"myDatepicker\\\" placeholder=\\\"Start time\\\">\\r\\n            <mat-datepicker-toggle [for]=\\\"myDatepicker\\\"></mat-datepicker-toggle>\\r\\n            <mat-datepicker #myDatepicker></mat-datepicker>\\r\\n            <mat-error *ngIf=\\\"addFormErrors.start\\\">\\r\\n              {{ addFormErrors.start }}\\r\\n            </mat-error>\\r\\n          </mat-form-field>\\r\\n        </p>\\r\\n        <p>\\r\\n          <mat-form-field class=\\\"half-width\\\">\\r\\n            <input matInput formControlName=\\\"priceA\\\" placeholder=\\\"A category price\\\" pattern=\\\"[0-9]*\\\" type=\\\"text\\\">\\r\\n            <mat-error *ngIf=\\\"addFormErrors.priceA\\\">\\r\\n              {{ addFormErrors.priceA }}\\r\\n            </mat-error>\\r\\n          </mat-form-field>\\r\\n        </p>\\r\\n        <p>\\r\\n          <mat-form-field class=\\\"half-width\\\">\\r\\n            <input matInput formControlName=\\\"priceB\\\" placeholder=\\\"B category price\\\" pattern=\\\"[0-9]*\\\" type=\\\"text\\\">\\r\\n            <mat-error *ngIf=\\\"addFormErrors.priceB\\\">\\r\\n              {{ addFormErrors.priceB }}\\r\\n            </mat-error>\\r\\n          </mat-form-field>\\r\\n        </p>\\r\\n          <p>\\r\\n            <mat-form-field class=\\\"half-width\\\">\\r\\n              <input matInput formControlName=\\\"priceC\\\" placeholder=\\\"C category price\\\" pattern=\\\"[0-9]*\\\" type=\\\"text\\\">\\r\\n              <mat-error *ngIf=\\\"addFormErrors.priceC\\\">\\r\\n                {{ addFormErrors.priceC }}\\r\\n              </mat-error>\\r\\n            </mat-form-field>\\r\\n          </p>\\r\\n          <button type=\\\"submit\\\" mat-button class=\\\"background-primary text-floral-white\\\" [disabled]=\\\"addForm.invalid\\\">\\r\\n            Submit\\r\\n          </button>\\r\\n      </form>\\r\\n  </div>\\r\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NhcnByaWNlcy9jYXJwcmljZXMuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, ViewChild, Inject } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material';\r\nimport { RentalServiceApi, LoopBackConfig, RentalService } from '../shared/sdk';\r\nimport { API_VERSION } from '../shared/baseUrl';\r\nimport { CarPriceApi } from '../shared/sdk';\r\nimport { ItemService } from '../services/item.service';\r\n\r\n@Component({\r\n  selector: 'app-carprices',\r\n  templateUrl: './carprices.component.html',\r\n  styleUrls: ['./carprices.component.scss']\r\n})\r\nexport class CarpricesComponent implements OnInit {\r\n\r\n  isAdd: boolean;\r\n\r\n  addForm: FormGroup;\r\n  @ViewChild('addform') addFormDirective;\r\n\r\n  setToAdd() {\r\n    this.isAdd = true;\r\n  }\r\n  \r\n  constructor(\r\n    @Inject('baseURL') private baseURL,\r\n    private fb: FormBuilder,\r\n    private rentalServiceService: RentalServiceApi,\r\n    private carPriceService: CarPriceApi,\r\n    public snackBar: MatSnackBar,\r\n    private itemService: ItemService) {\r\n      LoopBackConfig.setBaseURL(baseURL);\r\n      LoopBackConfig.setApiVersion(API_VERSION);\r\n      this.createAddForm();\r\n   }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  openSnackBar(message: string, action: string) {\r\n    this.snackBar.open(message, action, {\r\n       duration: 2000,\r\n    });\r\n  }\r\n\r\n  addFormErrors = {\r\n    'start': '',\r\n    'priceA': '',\r\n    'priceB': '',\r\n    'priceC': '' \r\n  }\r\n\r\n  addFormValidationMessages = {\r\n    'start': {\r\n      'required': 'Start date is required'\r\n    },\r\n    'priceA': {\r\n      'required': 'Price for category A is required',\r\n      'pattern': 'Price has to be a number'\r\n    },\r\n    'priceB': {\r\n      'required': 'Price for category B is required',\r\n      'pattern': 'Price has to be a number'\r\n    },\r\n    'priceC': {\r\n      'required': 'Price for category C is required',\r\n      'pattern': 'Price has to be a number'\r\n    }\r\n  }\r\n\r\n  onAddValueChanged(data?:any) {\r\n    if (!this.addForm) { return; }\r\n    const form = this.addForm;\r\n    for (const field in this.addFormErrors) {\r\n      if (this.addFormErrors.hasOwnProperty(field)) {\r\n        //clear previous error message\r\n        this.addFormErrors[field] = '';\r\n        const control = form.get(field);\r\n        if (control && !control.valid) {\r\n          const messages = this.addFormValidationMessages[field];\r\n          for (const key in control.errors) {\r\n            if (control.errors.hasOwnProperty(key)) {\r\n              this.addFormErrors[field] += messages[key] + ' ';\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  createAddForm() {\r\n    this.addForm = this.fb.group({\r\n      start: ['', Validators.required],\r\n      priceA: [0, [Validators.required, Validators.pattern]],\r\n      priceB: [0, [Validators.required, Validators.pattern]],\r\n      priceC: [0, [Validators.required, Validators.pattern]]\r\n    });\r\n    this.addForm.valueChanges.subscribe(\r\n      (data) => this.onAddValueChanged(data)\r\n    )\r\n    this.onAddValueChanged();\r\n  }\r\n\r\n  onAddSubmit() {\r\n    var searchObj = {\r\n      start: this.addForm.value.start,\r\n      rentalServiceId: this.itemService.getServiceId(),\r\n      catAPrice: Number(this.addForm.value.priceA),\r\n      catBPrice: Number(this.addForm.value.priceB),\r\n      catCPrice: Number(this.addForm.value.priceC)\r\n    }\r\n    this.carPriceService.create(searchObj)\r\n    .subscribe(\r\n      (result) => {\r\n        this.openSnackBar(\"Successfully added price menu.\", \"Dismiss\");\r\n      },\r\n      (err) => {\r\n        this.openSnackBar(\"Failed to add price menu.\", \"Dismiss\");\r\n      }\r\n    )    \r\n  }\r\n\r\n\r\n}\r\n","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\r\\n    <a mat-button (click)=\\\"setToAdd()\\\" *ngIf=\\\"userType==='rentalServiceAdmin'\\\"> Add</a>\\r\\n    <a mat-button (click)=\\\"setToRemove()\\\" *ngIf=\\\"userType==='rentalServiceAdmin'\\\"> Remove </a>\\r\\n    <a mat-button (click)=\\\"setToChange()\\\" *ngIf=\\\"userType==='rentalServiceAdmin'\\\"> Change </a>\\r\\n    <a mat-button (click)=\\\"setToList()\\\" *ngIf=\\\"userType==='rentalServiceAdmin'\\\"> List service's cars </a>\\r\\n    <a mat-button (click)=\\\"setToSearch()\\\"> Search </a>\\r\\n    <span class=\\\"flex-spacer\\\"></span>\\r\\n    <!--<a mat-button (click)=\\\"openLoginForm()\\\"><span class=\\\"fa fa-sign-in fa-lg\\\">Login</span></a>-->\\r\\n</mat-toolbar>\\r\\n\\r\\n<mat-autocomplete #auto=\\\"matAutocomplete\\\">\\r\\n  <mat-option *ngFor=\\\"let location of filteredLocationsStrings\\\" [value]=\\\"location\\\">{{location}}</mat-option>\\r\\n</mat-autocomplete>\\r\\n\\r\\n<div *ngIf=\\\"isAdd&&userType==='rentalServiceAdmin'\\\" >\\r\\n    <div fxFlex fxFlexOffset=\\\"20px\\\" class=\\\"form-size\\\">\\r\\n      <form novalidate [formGroup]=\\\"addForm\\\" #addform=\\\"ngForm\\\" (ngSubmit)=\\\"onAddSubmit()\\\">\\r\\n          <p>\\r\\n            <mat-form-field class=\\\"form-size\\\">\\r\\n              <input matInput formControlName=\\\"registration\\\" placeholder=\\\"Registration\\\" type=\\\"text\\\">\\r\\n              <mat-error *ngIf=\\\"addFormErrors.registration\\\">\\r\\n                {{ addFormErrors.registration }}\\r\\n              </mat-error>\\r\\n            </mat-form-field>\\r\\n          </p>\\r\\n          <p>\\r\\n            <mat-form-field class=\\\"form-size\\\">\\r\\n              <mat-select formControlName=\\\"category\\\" placeholder=\\\"Category\\\">\\r\\n                <mat-option value=\\\"A\\\">\\r\\n                  A\\r\\n                </mat-option>\\r\\n                <mat-option value=\\\"B\\\">\\r\\n                  B\\r\\n                </mat-option>\\r\\n                <mat-option value=\\\"C\\\">\\r\\n                  C\\r\\n                </mat-option>\\r\\n              </mat-select>\\r\\n              <mat-error *ngIf=\\\"addFormErrors.category\\\">\\r\\n                  {{ addFormErrors.category }}\\r\\n              </mat-error>\\r\\n            </mat-form-field>\\r\\n        </p>\\r\\n          <p>\\r\\n            <mat-form-field class=\\\"form-size\\\">\\r\\n              <input matInput formControlName=\\\"make\\\" placeholder=\\\"Make\\\" type=\\\"text\\\">\\r\\n              <mat-error *ngIf=\\\"addFormErrors.make\\\">\\r\\n                {{ addFormErrors.make }}\\r\\n              </mat-error>\\r\\n            </mat-form-field>\\r\\n          </p>\\r\\n          <p>\\r\\n            <mat-form-field class=\\\"half-width\\\">\\r\\n              <input matInput formControlName=\\\"seats\\\" placeholder=\\\"Number of seats\\\" pattern=\\\"[0-9]*\\\" type=\\\"text\\\">\\r\\n              <mat-error *ngIf=\\\"addFormErrors.seats\\\">\\r\\n                {{ addFormErrors.seats }}\\r\\n              </mat-error>\\r\\n            </mat-form-field>\\r\\n          </p>\\r\\n          <button type=\\\"submit\\\" mat-button class=\\\"background-primary text-floral-white\\\" [disabled]=\\\"addForm.invalid\\\">\\r\\n              Submit\\r\\n          </button>\\r\\n        </form>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"isRemove&&userType==='rentalServiceAdmin'\\\">\\r\\n  <div fxFlex fxFlexOffset=\\\"20px\\\" class=\\\"form-size\\\">\\r\\n    <form novalidate [formGroup]=\\\"removeForm\\\" #removeform=\\\"ngForm\\\" (ngSubmit)=\\\"onRemoveSubmit()\\\">\\r\\n      <p>\\r\\n        <mat-form-field class=\\\"form-size\\\">\\r\\n          <input matInput formControlName=\\\"registration\\\" placeholder=\\\"Registration\\\" type=\\\"text\\\">\\r\\n          <mat-error *ngIf=\\\"removeFormErrors.registration\\\">\\r\\n            {{ removeFormErrors.registration }}\\r\\n          </mat-error>\\r\\n        </mat-form-field>\\r\\n      </p>\\r\\n      <button type=\\\"submit\\\" mat-button class=\\\"background-primary text-floral-white\\\" [disabled]=\\\"removeForm.invalid\\\">\\r\\n          Submit\\r\\n      </button>\\r\\n    </form>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"isChange&&userType==='rentalServiceAdmin'\\\">\\r\\n  <div fxFlex fxFlexOffset=\\\"20px\\\" class=\\\"form-size\\\">\\r\\n    <form novalidate [formGroup]=\\\"changeForm\\\" #changeform=\\\"ngForm\\\" (ngSubmit)=\\\"onChangeSubmit()\\\">\\r\\n      <p>\\r\\n        <mat-form-field class=\\\"form-size\\\">\\r\\n          <input matInput formControlName=\\\"registration\\\" placeholder=\\\"Registration\\\" type=\\\"text\\\">\\r\\n          <mat-error *ngIf=\\\"changeFormErrors.registration\\\">\\r\\n            {{ changeFormErrors.registration }}\\r\\n          </mat-error>\\r\\n        </mat-form-field>\\r\\n      </p>\\r\\n      <button type=\\\"button\\\" mat-button class=\\\"background-primary text-floral-white\\\" (click)=\\\"changeGrabCar()\\\">Get</button>\\r\\n      <p>\\r\\n        <mat-form-field class=\\\"form-size\\\">\\r\\n          <input matInput formControlName=\\\"make\\\" placeholder=\\\"Make\\\" type=\\\"text\\\">\\r\\n          <mat-error *ngIf=\\\"changeFormErrors.make\\\">\\r\\n            {{ changeFormErrors.make }}\\r\\n          </mat-error>\\r\\n        </mat-form-field>\\r\\n      </p>\\r\\n      <p>\\r\\n        <mat-form-field class=\\\"half-width\\\">\\r\\n          <input matInput formControlName=\\\"seats\\\" placeholder=\\\"Number of seats\\\" pattern=\\\"[0-9]*\\\" type=\\\"text\\\">\\r\\n          <mat-error *ngIf=\\\"changeFormErrors.seats\\\">\\r\\n            {{ changeFormErrors.seats }}\\r\\n          </mat-error>\\r\\n        </mat-form-field>\\r\\n      </p>\\r\\n      <button type=\\\"submit\\\" mat-button class=\\\"background-primary text-floral-white\\\" [disabled]=\\\"changeForm.invalid\\\">\\r\\n          Submit\\r\\n      </button>\\r\\n    </form>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"isSearch\\\">\\r\\n  <div fxFlex fxFlexOffset=\\\"20px\\\" class=\\\"form-size\\\">\\r\\n    <form novalidate [formGroup]=\\\"searchForm\\\" #searchform=\\\"ngForm\\\" (ngSubmit)=\\\"onSearchSubmit()\\\">\\r\\n      <p>\\r\\n        <mat-form-field class=\\\"half-width\\\">\\r\\n          <input matInput formControlName=\\\"startDate\\\" [matDatepicker]=\\\"myDatepicker\\\" placeholder=\\\"Start time\\\">\\r\\n          <mat-datepicker-toggle [for]=\\\"myDatepicker\\\"></mat-datepicker-toggle>\\r\\n          <mat-datepicker #myDatepicker></mat-datepicker>\\r\\n          <mat-error *ngIf=\\\"searchFormErrors.startDate\\\">\\r\\n            {{ searchFormErrors.startDate }}\\r\\n          </mat-error>\\r\\n        </mat-form-field>\\r\\n      </p>\\r\\n      <p>\\r\\n        <mat-form-field class=\\\"half-width\\\">\\r\\n          <input matInput formControlName=\\\"endDate\\\" [matDatepicker]=\\\"myDatepicker2\\\" placeholder=\\\"Return time\\\">\\r\\n          <mat-datepicker-toggle [for]=\\\"myDatepicker2\\\"></mat-datepicker-toggle>\\r\\n          <mat-datepicker #myDatepicker2></mat-datepicker>\\r\\n          <mat-error *ngIf=\\\"searchFormErrors.endDate\\\">\\r\\n            {{ searchFormErrors.endDate }}\\r\\n          </mat-error>\\r\\n        </mat-form-field>\\r\\n      </p>\\r\\n      <p>\\r\\n        <mat-form-field class=\\\"half-width\\\">\\r\\n          <input matInput formControlName=\\\"make\\\" placeholder=\\\"Make\\\" type=\\\"text\\\">\\r\\n          <mat-error *ngIf=\\\"searchFormErrors.make\\\">\\r\\n            {{ searchFormErrors.make }}\\r\\n          </mat-error>\\r\\n        </mat-form-field>\\r\\n      </p>\\r\\n      <p>\\r\\n        <mat-form-field class=\\\"half-width\\\">\\r\\n          <input matInput formControlName=\\\"seats\\\" placeholder=\\\"Seats\\\" pattern=\\\"[0-9]*\\\" type=\\\"text\\\">\\r\\n          <mat-error *ngIf=\\\"searchFormErrors.seats\\\">\\r\\n            {{ searchFormErrors.seats }}\\r\\n          </mat-error>\\r\\n        </mat-form-field>\\r\\n      </p>\\r\\n      <p>\\r\\n        <mat-form-field class=\\\"half-width\\\">\\r\\n          <input matInput formControlName=\\\"rentalService\\\" placeholder=\\\"RentalService\\\" type=\\\"text\\\">\\r\\n          <mat-error *ngIf=\\\"searchFormErrors.rentalService\\\">\\r\\n            {{ searchFormErrors.rentalService }}\\r\\n          </mat-error>\\r\\n        </mat-form-field>\\r\\n      </p>\\r\\n      <p>\\r\\n        <mat-form-field>\\r\\n          <input matInput formControlName=\\\"countryCity\\\" placeholder=\\\"Location\\\" type=\\\"text\\\" [matAutocomplete]=\\\"auto\\\">\\r\\n          <mat-error *ngIf=\\\"searchFormErrors.countryCity\\\">\\r\\n            {{ searchFormErrors.countryCity }}\\r\\n          </mat-error>\\r\\n        </mat-form-field>\\r\\n      </p>\\r\\n      <button type=\\\"submit\\\" mat-button class=\\\"background-primary text-floral-white\\\" [disabled]=\\\"searchForm.invalid\\\">\\r\\n          Submit\\r\\n      </button>\\r\\n    </form>\\r\\n  </div>\\r\\n  <div fxFlex>\\r\\n    <mat-grid-list cols=\\\"3\\\" rowHeight=\\\"200px\\\">\\r\\n      <mat-grid-tile *ngFor=\\\"let car of foundCars\\\">\\r\\n        <mat-card id={{car.id}} (click)=\\\"inspect($event)\\\" class=\\\"pointer\\\">\\r\\n          Registration: {{car.registration}} | Make:  {{car.make}} | Seats:  {{car.seats}} | Price: {{car.price}} | Category:  {{car.category}}\\r\\n        </mat-card>\\r\\n      </mat-grid-tile>\\r\\n    </mat-grid-list>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"isList&&userType==='rentalServiceAdmin'\\\" >\\r\\n  <app-list-cars-admin></app-list-cars-admin>\\r\\n</div>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NhcnMvY2Fycy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, Inject, ViewChild, ChangeDetectionStrategy } from '@angular/core';\r\nimport {LoopBackConfig, RentalService, CarPrice, Location, LocationApi} from '../shared/sdk';\r\nimport { API_VERSION } from '../shared/baseUrl';\r\nimport { CarApi, RentalServiceApi } from '../shared/sdk/services';\r\nimport { Car } from '../shared/sdk/models/Car';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material';\r\nimport { Router } from '@angular/router';\r\nimport { ItemService } from '../services/item.service';\r\nimport {LoginServiceService} from '../login-service.service';\r\nimport {count} from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-cars',\r\n  templateUrl: './cars.component.html',\r\n  styleUrls: ['./cars.component.scss']\r\n})\r\nexport class CarsComponent implements OnInit {\r\n\r\n  foundCars: Car[];\r\n  userType: string;\r\n  addForm: FormGroup;\r\n  @ViewChild('addform') addFormDirective;\r\n\r\n  removeForm: FormGroup;\r\n  @ViewChild('removeform') removeFormDirective;\r\n\r\n\r\n  changeForm: FormGroup;\r\n  @ViewChild('changeform') changeFormDirective;\r\n\r\n  searchForm: FormGroup;\r\n  @ViewChild('searchform') searchFormDirective;\r\n\r\n  isAdd: boolean;\r\n\r\n  isRemove: boolean;\r\n\r\n  isChange: boolean;\r\n\r\n  isSearch: boolean;\r\n\r\n  isList: boolean;\r\n\r\n  locations = [];\r\n  filteredLocations: Location[] = [];\r\n  filteredLocationsStrings = [];\r\n\r\n  constructor(@Inject('baseURL') private baseURL,\r\n              private carservice: CarApi,\r\n              private fb: FormBuilder,\r\n              private rentalServiceService: RentalServiceApi,\r\n              private loginService: LoginServiceService,\r\n              public snackBar: MatSnackBar,\r\n              private locationsservice: LocationApi,\r\n              private _router: Router,\r\n              private itemService: ItemService) {\r\n    LoopBackConfig.setBaseURL(baseURL);\r\n    LoopBackConfig.setApiVersion(API_VERSION);\r\n    this.createAddForm();\r\n    this.createRemoveForm();\r\n    this.createChangeForm();\r\n    this.createSearchForm();\r\n    this.locationsservice.find().subscribe((locations: Location[]) => {\r\n        this.locations = locations;\r\n        this.filteredLocations = this.locations;\r\n        this.fillLocationsList();\r\n      }\r\n    );\r\n    this.loginService.user.subscribe(data => {\r\n      if (data) {\r\n        this.userType = data.user.type;\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  setToAdd() {\r\n    this.isAdd = true;\r\n    this.isRemove = null;\r\n    this.isChange = null;\r\n    this.isSearch = null;\r\n    this.isList = null;\r\n  }\r\n\r\n  setToRemove() {\r\n    this.isAdd = null;\r\n    this.isRemove = true;\r\n    this.isChange = null;\r\n    this.isSearch = null;\r\n    this.isList = null;\r\n  }\r\n\r\n  setToChange() {\r\n    this.isAdd = null;\r\n    this.isRemove = null;\r\n    this.isChange = true;\r\n    this.isSearch = null;\r\n    this.isList = null;\r\n  }\r\n\r\n  setToSearch() {\r\n    this.isAdd = null;\r\n    this.isRemove = null;\r\n    this.isChange = null;\r\n    this.isSearch = true;\r\n    this.isList = null;\r\n  }\r\n\r\n  setToList() {\r\n    this.isAdd = null;\r\n    this.isRemove = null;\r\n    this.isChange = null;\r\n    this.isSearch = null;\r\n    this.isList = true;\r\n  }\r\n\r\n  private _filter(value: string): Location[] {\r\n    if (value != null) {\r\n      const filterValue = value.toLowerCase();\r\n      return this.locations.filter(location => (location.city.toLowerCase() + ', ' + location.country.toLowerCase()).includes(filterValue));\r\n    } else {\r\n      return this.locations;\r\n    }\r\n  }\r\n\r\n  openSnackBar(message: string, action: string) {\r\n    this.snackBar.open(message, action, {\r\n      duration: 2000,\r\n    });\r\n  }\r\n\r\n  fillLocationsList() {\r\n    this.filteredLocationsStrings = [];\r\n    for (const location of this.filteredLocations) {\r\n      this.filteredLocationsStrings.push(location.city + ', ' + location.country);\r\n    }\r\n  }\r\n\r\n  getCityCountry(countryCity) {\r\n    countryCity = countryCity.split(', ');\r\n    if (countryCity.length !== 2) return ['', ''];\r\n    return [countryCity[0], countryCity[1]];\r\n  }\r\n\r\n  addFormErrors = {\r\n    'registration': '',\r\n    'category': '',\r\n    'make': '',\r\n    'seats': ''\r\n  };\r\n\r\n  addFormValidationMessages = {\r\n    'registration': {\r\n      'required': 'Registration is required'\r\n    },\r\n    'category': {\r\n      'required': 'Category is required'\r\n    },\r\n    'make': {\r\n      'required': 'Make is required'\r\n    },\r\n    'seats': {\r\n      'required': 'Seats are required',\r\n      'pattern': 'Seats have to be a number'\r\n    }\r\n  };\r\n\r\n  onAddValueChanged(data?: any) {\r\n    if (!this.addForm) {\r\n      return;\r\n    }\r\n    const form = this.addForm;\r\n    for (const field in this.addFormErrors) {\r\n      if (this.addFormErrors.hasOwnProperty(field)) {\r\n        //clear previous error message\r\n        this.addFormErrors[field] = '';\r\n        const control = form.get(field);\r\n        if (control && !control.valid) {\r\n          const messages = this.addFormValidationMessages[field];\r\n          for (const key in control.errors) {\r\n            if (control.errors.hasOwnProperty(key)) {\r\n              this.addFormErrors[field] += messages[key] + ' ';\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  createAddForm() {\r\n    this.addForm = this.fb.group({\r\n      registration: ['', Validators.required],\r\n      category: ['', Validators.required],\r\n      make: ['', Validators.required],\r\n      seats: [0, [Validators.required, Validators.pattern]]\r\n    });\r\n    this.addForm.valueChanges\r\n      .subscribe(data => this.onAddValueChanged(data));\r\n    this.onAddValueChanged();\r\n  }\r\n\r\n  onAddSubmit() {\r\n    var o1 = this.carservice.create({\r\n      'make': this.addForm.value.make,\r\n      'registration': this.addForm.value.registration,\r\n      'category': this.addForm.value.category,\r\n      'seats': this.addForm.value.seats,\r\n      'rentalServiceId': this.itemService.getServiceId()\r\n    });\r\n    o1.subscribe(\r\n      (result) => {\r\n        this.openSnackBar('Car added successfully', 'Dismiss');\r\n      },\r\n      (err) => {\r\n        console.log(err);\r\n        this.openSnackBar('Failed to add car', 'Dismiss');\r\n      });\r\n      \r\n  }\r\n\r\n  removeFormErrors = {\r\n    'registration': ''\r\n  };\r\n\r\n  removeFormValidationMessages = {\r\n    'registration': {\r\n      'required': 'Registration is required'\r\n    }\r\n  };\r\n\r\n  onRemoveValueChanged(data?: any) {\r\n    if (!this.removeForm) {\r\n      return;\r\n    }\r\n    const form = this.removeForm;\r\n    for (const field in this.removeFormErrors) {\r\n      if (this.removeFormErrors.hasOwnProperty(field)) {\r\n        //clear previous error message\r\n        this.removeFormErrors[field] = '';\r\n        const control = form.get(field);\r\n        if (control && !control.valid) {\r\n          const messages = this.removeFormValidationMessages[field];\r\n          for (const key in control.errors) {\r\n            if (control.errors.hasOwnProperty(key)) {\r\n              this.removeFormErrors[field] += messages[key] + ' ';\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  createRemoveForm() {\r\n    this.removeForm = this.fb.group({\r\n      registration: ['', Validators.required]\r\n    });\r\n    this.removeForm.valueChanges\r\n      .subscribe((data) => this.onRemoveValueChanged(data));\r\n    this.onRemoveValueChanged();\r\n  }\r\n\r\n  onRemoveSubmit() {\r\n    var o1 = this.carservice.findOne({'where': {'registration': this.removeForm.value.registration}});\r\n    o1.subscribe(\r\n      (result) => {\r\n        var mycar = result as Car;\r\n        var o2 = this.carservice.deleteById(mycar.id);\r\n        o2.subscribe(\r\n          (result) => {\r\n            this.openSnackBar('Car deleted successfuly', 'Dismiss');\r\n          },\r\n          (err) => {\r\n            this.openSnackBar('Could not delete car', 'Dismiss');\r\n          });\r\n      },\r\n      (err) => {\r\n        this.openSnackBar('This car does not exist', 'Dismiss');\r\n      }\r\n    );\r\n  }\r\n\r\n  changeFormErrors = {\r\n    'serviceName': '',\r\n    'registration': '',\r\n    'make': '',\r\n    'seats': ''\r\n  };\r\n\r\n  changeFormValidationMessages = {\r\n    'serviceName': {\r\n      'required': 'Service name is required'\r\n    },\r\n    'registration': {\r\n      'required': 'Registration is required'\r\n    },\r\n    'make': {\r\n      'required': 'Make is required'\r\n    },\r\n    'seats': {\r\n      'required': 'Seats are required',\r\n      'pattern': 'Seats have to be a number'\r\n    }\r\n  };\r\n\r\n  onChangeValueChanged(data?: any) {\r\n    if (!this.changeForm) {\r\n      return;\r\n    }\r\n    const form = this.changeForm;\r\n    for (const field in this.changeFormErrors) {\r\n      if (this.changeFormErrors.hasOwnProperty(field)) {\r\n        //clear previous error message\r\n        this.changeFormErrors[field] = '';\r\n        const control = form.get(field);\r\n        if (control && !control.valid) {\r\n          const messages = this.changeFormValidationMessages[field];\r\n          for (const key in control.errors) {\r\n            if (control.errors.hasOwnProperty(key)) {\r\n              this.changeFormErrors[field] += messages[key] + ' ';\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  createChangeForm() {\r\n    this.changeForm = this.fb.group({\r\n      registration: ['', Validators.required],\r\n      make: ['', Validators.required],\r\n      seats: [0, [Validators.required, Validators.pattern]]\r\n    });\r\n    this.changeForm.valueChanges\r\n      .subscribe(data => this.onChangeValueChanged(data));\r\n    this.onChangeValueChanged();\r\n  }\r\n\r\n  onChangeSubmit() {\r\n    var o1 = this.carservice.findOne({'where': {'registration': this.changeForm.value.registration}});\r\n    o1.subscribe(\r\n      (result) => {\r\n        var mycar = result as Car;\r\n        mycar.seats = this.changeForm.value.seats;\r\n        mycar.make = this.changeForm.value.make;\r\n        var o2 = this.carservice.updateAttributes(mycar.id, mycar);\r\n        o2.subscribe(\r\n          (result) => {\r\n            this.openSnackBar('Car changed successfully', 'Dismiss');\r\n          },\r\n          (err) => {\r\n            this.openSnackBar('Failed to change car', 'Dismiss');\r\n          });\r\n      },\r\n      (err) => {\r\n        this.openSnackBar('Could not find car with that registration', 'Dismiss');\r\n      });\r\n  }\r\n\r\n  changeGrabCar() {\r\n    var o1 = this.carservice.findOne({'where': {'registration': this.changeForm.value.registration}});\r\n    o1.subscribe(\r\n      (result) => {\r\n        var mycar = result as Car;\r\n        this.changeForm.controls['make'].setValue(mycar.make);\r\n        this.changeForm.controls['seats'].setValue(mycar.seats);\r\n      },\r\n      (err) => {\r\n        this.openSnackBar('Could not find car with that registration', 'Dismiss');\r\n        this.changeForm.controls['make'].setValue('');\r\n        this.changeForm.controls['seats'].setValue('');\r\n      }\r\n    );\r\n  }\r\n\r\n  searchFormErrors = {\r\n    'startDate': '',\r\n    'endDate': '',\r\n    'make': '',\r\n    'seats': '',\r\n    'rentalService': '',\r\n    'countryCity': ''\r\n  };\r\n\r\n  searchFormValidationMessages = {\r\n    'startDate': {\r\n      'required': 'Start date is required',\r\n      'minv': 'Start date has to be before end date'\r\n    },\r\n    'endDate': {\r\n      'required': 'End date is required'\r\n    },\r\n    'make': {\r\n      'required': 'Make is required'\r\n    },\r\n    'seats': {\r\n      'required': 'Seats are required',\r\n      'pattern': 'Seats have to be a number'\r\n    },\r\n    'rentalService': {},\r\n    'countryCity': {}\r\n  };\r\n\r\n  onSearchValueChanged(data?: any) {\r\n    if (!this.searchForm) {\r\n      return;\r\n    }\r\n    const form = this.searchForm;\r\n    this.filteredLocations = this._filter(form.value.countryCity);\r\n    this.fillLocationsList();\r\n    for (const field in this.searchFormErrors) {\r\n      if (this.searchFormErrors.hasOwnProperty(field)) {\r\n        //clear previous error message\r\n        this.searchFormErrors[field] = '';\r\n        const control = form.get(field);\r\n        if (control && !control.valid) {\r\n          const messages = this.searchFormValidationMessages[field];\r\n          for (const key in control.errors) {\r\n            if (control.errors.hasOwnProperty(key)) {\r\n              this.searchFormErrors[field] += messages[key] + ' ';\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    const startDate = new Date(form.get('startDate').value);\r\n    const endDate = new Date(form.get('endDate').value);\r\n\r\n    if (startDate > endDate) {\r\n      this.searchFormErrors['startDate'] += this.searchFormValidationMessages['startDate']['minv'] + ' ';\r\n      this.searchForm.controls['startDate'].setErrors({'minv' : true});\r\n    }\r\n\r\n\r\n  }\r\n\r\n  createSearchForm() {\r\n    this.searchForm = this.fb.group({\r\n      startDate: ['', Validators.required],\r\n      endDate: ['', Validators.required],\r\n      make: [''],\r\n      seats: ['', Validators.pattern],\r\n      rentalService: [''],\r\n      countryCity: ['']\r\n    });\r\n    this.searchForm.valueChanges\r\n      .subscribe(data => this.onSearchValueChanged(data));\r\n    this.onSearchValueChanged();\r\n  }\r\n\r\n  matchCarsAndPrices(cars, prices: CarPrice[], start) {\r\n    start = new Date(start);\r\n    for (let car of cars) {\r\n      car.price = 0;\r\n      car.start = new Date(0);\r\n      for (let price of prices) {\r\n        if (car.rentalServiceId == price.rentalServiceId) {\r\n          if (start > price.start && car.start < price.start) {\r\n            car.start = price.start;\r\n            car.price = price['cat' + car.category + 'Price'];\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  onSearchSubmit() {\r\n\r\n    var make = null;\r\n    var seats = null;\r\n    var rentalService = null;\r\n    var startDate = new Date(this.searchForm.value.startDate).toJSON();\r\n    var endDate = new Date(this.searchForm.value.endDate).toJSON();\r\n\r\n    const cityCountry = this.getCityCountry(this.searchForm.value.countryCity);\r\n    const city = cityCountry[0];\r\n    const country = cityCountry[1];\r\n\r\n    if (this.searchForm.value.make != '') {\r\n      make = this.searchForm.value.make;\r\n    }\r\n    if (this.searchForm.value.seats != '') {\r\n      seats = this.searchForm.value.seats;\r\n    }\r\n    if (this.searchForm.value.rentalService != '') {\r\n      rentalService = this.searchForm.value.rentalService;\r\n    }\r\n\r\n    this.carservice.searchCars(startDate, endDate, make, seats, rentalService)\r\n    .subscribe(\r\n      (result) => {\r\n        result = result.retval\r\n        this.itemService.getPrices()\r\n        .subscribe(\r\n          (result_prices) => {\r\n            var result_cars = result as Car[];\r\n            this.matchCarsAndPrices(result_cars, result_prices as CarPrice[], this.searchForm.value.startDate);\r\n            if (city === '') {\r\n              this.foundCars = result_cars;\r\n            } else {\r\n              this.foundCars = [];\r\n              for (const car of result_cars) {\r\n                this.rentalServiceService.findById(car.rentalServiceId, {include: 'location'})\r\n                  .subscribe((rac: RentalService) => {\r\n                      if (rac.location.city === city && rac.location.country === country) {\r\n                        this.foundCars.push(car);\r\n                      }\r\n                  }, err => this.openSnackBar(\"Could not get rental service location, stopping search\", \"Dismiss\"));\r\n              }\r\n              this.openSnackBar('Search done', 'Dismiss');\r\n            }\r\n          },\r\n          (err) => {\r\n            this.openSnackBar(\"Could not get car prices, stopping search\", \"Dismiss\");\r\n          }\r\n        )\r\n      },\r\n      (err) => {\r\n        }\r\n      );\r\n  }\r\n\r\n  inspect(clicked_card: any) {\r\n    var car_id = clicked_card.path[0].id;\r\n    for (let car of this.foundCars) {\r\n      if (car.id == car_id) {\r\n        (car as any).start = this.searchForm.value.startDate;\r\n        (car as any).end = this.searchForm.value.endDate;\r\n        this.itemService.setReservableCar(car);\r\n        if (new Date(this.searchForm.value.startDate) < new Date()) {\r\n          return;\r\n        }\r\n        this._router.navigate(['/carreservation'])\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n","module.exports = \"<div fxFlex fxFlexOffset=\\\"20px\\\" class=\\\"form-size\\\">\\r\\n    <form novalidate [formGroup]=\\\"changeForm\\\" #changeform=\\\"ngForm\\\" (ngSubmit)=\\\"onChangeSubmit()\\\">\\r\\n      <p>\\r\\n        <mat-form-field class=\\\"form-size\\\">\\r\\n          <input matInput formControlName=\\\"name\\\" placeholder=\\\"Name\\\" type=\\\"text\\\" [readonly]=true>\\r\\n          <mat-error *ngIf=\\\"changeFormErrors.name\\\">\\r\\n            {{ changeFormErrors.name }}\\r\\n          </mat-error>\\r\\n        </mat-form-field>\\r\\n      </p>\\r\\n      <p>\\r\\n        <mat-form-field class=\\\"form-size\\\">\\r\\n          <input matInput formControlName=\\\"address\\\" placeholder=\\\"Address\\\" type=\\\"text\\\">\\r\\n          <mat-error *ngIf=\\\"changeFormErrors.address\\\">\\r\\n            {{ changeFormErrors.address }}\\r\\n          </mat-error>\\r\\n        </mat-form-field>\\r\\n      </p>\\r\\n      <p>\\r\\n        <mat-form-field class=\\\"form-size\\\">\\r\\n          <input matInput formControlName=\\\"description\\\" placeholder=\\\"Description\\\" type=\\\"text\\\">\\r\\n          <mat-error *ngIf=\\\"changeFormErrors.description\\\">\\r\\n            {{ changeFormErrors.description }}\\r\\n          </mat-error>\\r\\n        </mat-form-field>\\r\\n      </p>\\r\\n      <button type=\\\"submit\\\" mat-button class=\\\"background-primary text-floral-white\\\" [disabled]=\\\"changeForm.invalid\\\" (ngSubmit)=\\\"onChangeSubmit()\\\">\\r\\n          Submit\\r\\n      </button>\\r\\n    </form>\\r\\n  </div>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NoYW5nZS1yZW50YWwtc2VydmljZS9jaGFuZ2UtcmVudGFsLXNlcnZpY2UuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, ViewChild, Inject } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { RentalServiceApi, LoopBackConfig } from '../shared/sdk';\r\nimport { LoginServiceService } from '../login-service.service';\r\nimport { MatSnackBar } from '@angular/material';\r\nimport { API_VERSION } from '../shared/baseUrl';\r\nimport { ItemService } from '../services/item.service';\r\nimport { RentalService } from '../shared/sdk/models';\r\n\r\n@Component({\r\n  selector: 'app-change-rental-service',\r\n  templateUrl: './change-rental-service.component.html',\r\n  styleUrls: ['./change-rental-service.component.scss']\r\n})\r\nexport class ChangeRentalServiceComponent implements OnInit {\r\n\r\n\r\n  userType: string;\r\n  changeForm: FormGroup;\r\n\r\n  @ViewChild('changeform') changeFormDirective;\r\n\r\n  constructor(@Inject('baseURL') private baseURL,\r\n    private rentalServiceService: RentalServiceApi,\r\n    private loginService: LoginServiceService,\r\n    private fb: FormBuilder,\r\n    public snackBar: MatSnackBar,\r\n    private itemService: ItemService) {\r\n      LoopBackConfig.setBaseURL(baseURL);\r\n      LoopBackConfig.setApiVersion(API_VERSION);\r\n      this.createChangeForm();\r\n      var temp = this.itemService.getServiceId()\r\n      console.log(temp);\r\n      this.rentalServiceService.findById(this.itemService.getServiceId())\r\n      .subscribe(\r\n        (result: any) => {\r\n          this.changeForm.controls['name'].setValue(result.name);\r\n          this.changeForm.controls['address'].setValue(result.address);\r\n          this.changeForm.controls['description'].setValue(result.description);\r\n        },\r\n        (err) => {\r\n\r\n      })\r\n     }\r\n\r\n     openSnackBar(message: string, action: string) {\r\n      this.snackBar.open(message, action, {\r\n         duration: 2000,\r\n      });\r\n    }\r\n    \r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  changeFormErrors = {\r\n    'name': '',\r\n    'address': '',\r\n    'description': ''\r\n  }\r\n\r\n  changeFormValidationMessages = {\r\n    'name': {\r\n      'required': 'Name is required in order to change a rental service',\r\n      'non-existent': 'Rental service with this name does not exist'\r\n    },\r\n    'address': {\r\n      'required': 'Address can\\'t be empty'\r\n    },\r\n    'description': {\r\n      'required': 'Description can\\'t be empty'\r\n    }\r\n  }\r\n\r\n  onChangeSubmit() {\r\n\r\n    this.rentalServiceService.findById(this.itemService.getServiceId())\r\n    .subscribe(\r\n      (rentalservice) => {\r\n        var myRentalService = rentalservice as RentalService;\r\n        myRentalService.address = this.changeForm.value.address;\r\n        myRentalService.description = this.changeForm.value.description;\r\n        this.rentalServiceService.updateAttributes(myRentalService.id, myRentalService)\r\n         .subscribe(\r\n          (result) => {\r\n            if (result != null) {\r\n              this.openSnackBar(\"Change successfull\", \"Dismiss\");\r\n            }\r\n            else {\r\n              this.openSnackBar(\"Change failed\", \"Dismiss\");\r\n            }\r\n          },\r\n          (err) => {\r\n            this.openSnackBar(\"Change failed\", \"Dismiss\");\r\n          });\r\n      },\r\n      (err) => {\r\n        this.baseURL.openSnackBar(\"Failed to retrieve rental service\", \"Dismiss\");\r\n      }\r\n    )\r\n        \r\n      \r\n    \r\n  }\r\n\r\n  onChangeValueChanged(data?:any) {\r\n    if (!this.changeForm) { return; }\r\n    const form = this.changeForm;\r\n    for (const field in this.changeFormErrors) {\r\n      if (this.changeFormErrors.hasOwnProperty(field)) {\r\n        //clear previous error message\r\n        this.changeFormErrors[field] = '';\r\n        const control = form.get(field);\r\n        if (control && !control.valid) {\r\n          const messages = this.changeFormValidationMessages[field];\r\n          for (const key in control.errors) {\r\n            if (control.errors.hasOwnProperty(key)) {\r\n              this.changeFormErrors[field] += messages[key] + ' ';\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  createChangeForm() {\r\n    this.changeForm = this.fb.group({\r\n      name: ['', Validators.required],\r\n      address: ['', Validators.required],\r\n      description: ['', Validators.required]\r\n    });\r\n    this.changeForm.valueChanges\r\n    .subscribe((data) => {this.onChangeValueChanged(data)});\r\n    this.onChangeValueChanged();\r\n  }\r\n\r\n}\r\n","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\r\\n  <a mat-button (click)=\\\"setToSearch()\\\"> Search </a>\\r\\n  <span class=\\\"flex-spacer\\\"></span>\\r\\n</mat-toolbar>\\r\\n\\r\\n<div *ngIf=\\\"isSearch\\\"\\r\\n  fxLayout=\\\"rows\\\">\\r\\n  <div fxFlex fxFlexOffset=\\\"20px\\\" class=\\\"form-size\\\">\\r\\n    <form novalidate [formGroup]=\\\"onewaySearchForm\\\" #onewaySearchform=\\\"ngForm\\\" (ngSubmit)=\\\"onOnewaySearchSubmit()\\\">\\r\\n      <p>\\r\\n        <mat-form-field class=\\\"half-width\\\">\\r\\n          <input matInput formControlName=\\\"origin\\\" placeholder=\\\"From\\\" type=\\\"text\\\">\\r\\n          <mat-error *ngIf=\\\"onewaySearchFormErrors.origin\\\">\\r\\n            {{ onewaySearchFormErrors.origin }}\\r\\n          </mat-error>\\r\\n        </mat-form-field>\\r\\n      </p>\\r\\n      <p>\\r\\n        <mat-form-field class=\\\"half-width\\\">\\r\\n          <input matInput formControlName=\\\"destination\\\" placeholder=\\\"To\\\" type=\\\"text\\\">\\r\\n          <mat-error *ngIf=\\\"onewaySearchFormErrors.destination\\\">\\r\\n            {{ onewaySearchFormErrors.destination }}\\r\\n          </mat-error>\\r\\n        </mat-form-field>\\r\\n      </p>\\r\\n      <p>\\r\\n        <mat-form-field class=\\\"half-width\\\">\\r\\n          <input matInput formControlName=\\\"takeoffDate\\\" [matDatepicker]=\\\"takeoffDatepicker\\\" placeholder=\\\"Takeoff Date\\\">\\r\\n          <mat-datepicker-toggle [for]=\\\"takeoffDatepicker\\\"></mat-datepicker-toggle>\\r\\n          <mat-datepicker #takeoffDatepicker></mat-datepicker>\\r\\n          <mat-error *ngIf=\\\"onewaySearchFormErrors.takeoffDate\\\">\\r\\n            {{ onewaySearchFormErrors.takeoffDate }}\\r\\n          </mat-error>\\r\\n        </mat-form-field>\\r\\n      </p>\\r\\n      <button type=\\\"submit\\\" mat-button class=\\\"background-primary text-floral-white\\\" [disabled]=\\\"onewaySearchForm.invalid\\\">\\r\\n        Submit\\r\\n      </button>\\r\\n    </form>\\r\\n  </div>\\r\\n  <div fxFlex fxFlexOffset=\\\"20px\\\">\\r\\n    <table #onewayFlightTable mat-table [dataSource]=\\\"onewayFlightList\\\"\\r\\n    class=\\\"flightTable\\\">\\r\\n\\r\\n      <ng-container matColumnDef=\\\"origin\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef> Origin </th>\\r\\n        <td mat-cell *matCellDef=\\\"let flight\\\" class=\\\"flightTableCell\\\"> {{flight.origin}} </td>\\r\\n      </ng-container>\\r\\n    \\r\\n      <ng-container matColumnDef=\\\"destination\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef> Destination </th>\\r\\n        <td mat-cell *matCellDef=\\\"let flight\\\" class=\\\"flightTableCell\\\"> {{flight.destination}} </td>\\r\\n      </ng-container>\\r\\n    \\r\\n      <ng-container matColumnDef=\\\"takeoffDate\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef> Takeoff </th>\\r\\n        <td mat-cell *matCellDef=\\\"let flight\\\" class=\\\"flightTableCell\\\"> {{flight.takeoffDate | date:'dd/MM/yyyy HH:mm'}} </td>\\r\\n      </ng-container>\\r\\n    \\r\\n      <ng-container matColumnDef=\\\"landingDate\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef> Landing </th>\\r\\n        <td mat-cell *matCellDef=\\\"let flight\\\" class=\\\"flightTableCell\\\"> {{flight.landingDate | date:'dd/MM/yyyy HH:mm'}} </td>\\r\\n      </ng-container>\\r\\n    \\r\\n      <ng-container matColumnDef=\\\"price\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef> Price </th>\\r\\n        <td mat-cell *matCellDef=\\\"let flight\\\" class=\\\"flightTableCell\\\"> {{flight.price}} </td>\\r\\n      </ng-container>\\r\\n    \\r\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" (click)=\\\"setClickedRow(row)\\\" [class.active]=\\\"row == selectedFlight\\\"></tr>\\r\\n    </table>\\r\\n\\r\\n    <div>\\r\\n      <button mat-button class=\\\"background-primary text-floral-white\\\" (click) = \\\"ReserveButton()\\\">Reserve</button>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"isReserve\\\">\\r\\n  <app-reserve-seat [selectedFlight]=\\\"selectedFlight\\\"></app-reserve-seat>\\r\\n</div>\"","module.exports = \".column-title {\\n  align-self: center; }\\n\\n.flightTableCell {\\n  padding: 15px; }\\n\\n.flightTable tr.active td {\\n  background-color: #123456 !important;\\n  color: white; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZmxpZ2h0cy9EOlxcRHVzYW5cXDFGYWtzXFxNUlNfSVNBXFxNUlNfSVNBX1RpbTEyXFxEYXNUcmF2ZWxTaXRlL3NyY1xcYXBwXFxmbGlnaHRzXFxmbGlnaHRzLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksa0JBQWtCLEVBQUE7O0FBR3RCO0VBQ0ksYUFBYSxFQUFBOztBQUdqQjtFQUNJLG9DQUFtQztFQUNuQyxZQUFZLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9mbGlnaHRzL2ZsaWdodHMuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY29sdW1uLXRpdGxlIHtcclxuICAgIGFsaWduLXNlbGY6IGNlbnRlcjtcclxufVxyXG5cclxuLmZsaWdodFRhYmxlQ2VsbCB7XHJcbiAgICBwYWRkaW5nOiAxNXB4O1xyXG59XHJcblxyXG4uZmxpZ2h0VGFibGUgdHIuYWN0aXZlIHRkIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IzEyMzQ1NiAhaW1wb3J0YW50O1xyXG4gICAgY29sb3I6IHdoaXRlO1xyXG59Il19 */\"","import { Component, OnInit, Inject, ViewChild } from '@angular/core';\r\nimport {LoopBackConfig, Flight, FlightApi} from '../shared/sdk';\r\nimport {API_VERSION} from '../shared/baseUrl';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {MatSnackBar, MatTable} from '@angular/material';\r\nimport {LoginServiceService} from '../login-service.service';\r\n\r\n@Component({\r\n  selector: 'app-flights',\r\n  templateUrl: './flights.component.html',\r\n  styleUrls: ['./flights.component.scss']\r\n})\r\nexport class FlightsComponent implements OnInit {\r\n\r\n  onewayFlightList: Flight[];\r\n  userType: string;\r\n\r\n  onewaySearchForm: FormGroup;\r\n  @ViewChild('onewaySearchForm') onewaySearchFormDirective;\r\n\r\n  @ViewChild('onewayFlightTable') onewayFlightTable: MatTable<any>;\r\n  displayedColumns: string[] = ['origin', 'destination', 'takeoffDate', 'landingDate', 'price'];\r\n\r\n  isSearch: boolean;\r\n  isReserve: boolean;\r\n  \r\n  setClickedRow : Function;\r\n  selectedFlight: Flight = null;\r\n\r\n  onewaySearchFormErrors = {\r\n    'origin': '',\r\n    'destination': '',\r\n    'takeoffDate': ''\r\n  };\r\n\r\n  onewaySearchFormValidationMessages = {\r\n    'origin': {\r\n      'required': 'Origin of flight is required'\r\n    },\r\n    'destination': {\r\n      'required': 'Destination of flight is required'\r\n    },\r\n    'takeoffDate': {\r\n      'required': 'Takeoff time of flight is required'\r\n    }\r\n  };\r\n\r\n\r\n\r\n  constructor(@Inject('baseURL') private baseURL,\r\n              private flightservice: FlightApi,\r\n              private fb: FormBuilder,\r\n              private loginService: LoginServiceService,\r\n              public snackBar: MatSnackBar) {\r\n    LoopBackConfig.setBaseURL(baseURL);\r\n    LoopBackConfig.setApiVersion(API_VERSION);\r\n    this.createOnewaySearchForm();\r\n    this.loginService.user.subscribe(data => {\r\n      if (data) {\r\n        this.userType = data.user.type;\r\n      }\r\n    });\r\n    this.setClickedRow = function(index){\r\n      this.selectedFlight = index;\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  openSnackBar(message: string, action: string) {\r\n    this.snackBar.open(message, action, {\r\n      duration: 2000,\r\n    });\r\n  }\r\n\r\n  onValueChangedOnewaySearch(data?: any) {\r\n    if (!this.onewaySearchForm) {return; }\r\n    const form = this.onewaySearchForm;\r\n    for (const field in this.onewaySearchFormErrors){\r\n      if (this.onewaySearchFormErrors.hasOwnProperty(field)){\r\n        this.onewaySearchFormErrors[field] = '';\r\n        const control = form.get(field);\r\n        if (control && !control.valid) {\r\n          const messages = this.onewaySearchFormValidationMessages[field];\r\n          for (const key in control.errors){\r\n            if (control.errors.hasOwnProperty(key)){\r\n              this.onewaySearchFormErrors[field] += messages[key] + ' ';\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  createOnewaySearchForm() {\r\n    this.onewaySearchForm = this.fb.group({\r\n      'origin': ['', Validators.required],\r\n      'destination': ['', Validators.required],\r\n      'takeoffDate': ['', Validators.required]\r\n    });\r\n\r\n    this.onewaySearchForm.valueChanges\r\n      .subscribe(data => this.onValueChangedOnewaySearch(data));\r\n    this.onValueChangedOnewaySearch();\r\n  }\r\n\r\n  setValueOnewaySearchForm() {\r\n    this.onewaySearchForm.setValue({\r\n      'origin': this.selectedFlight.origin,\r\n      'destination': this.selectedFlight.destination,\r\n      'takeoffDate': this.selectedFlight.takeoffDate\r\n    });\r\n  }\r\n\r\n  getFlights(searchObject: any) {\r\n    this.flightservice.find({\r\n      'where': {\r\n        'origin': searchObject.origin,\r\n        'destination': searchObject.destination\r\n      }\r\n    })\r\n      .subscribe(\r\n        (result) => {\r\n          let fullFlightList: Flight[] = result as Flight[];\r\n          this.onewayFlightList = [];\r\n          if (fullFlightList.length == 0) {\r\n            this.openSnackBar('No flights match search parameters', 'Dismiss');\r\n          }\r\n          else {\r\n            let compareDateStart: Date = searchObject.takeoffDate as Date;\r\n            /*if (compareDateStart.getTimezoneOffset() < 0) {\r\n              compareDateStart.setUTCDate(compareDateStart.getUTCDate() + 1);\r\n            }\r\n            compareDateStart.setUTCHours(0, 0, 0, 0);*/\r\n\r\n            console.log(\"Date to check for > \" + compareDateStart.toLocaleDateString());\r\n\r\n            fullFlightList.forEach((flight) => {\r\n              let fDate: Date = new Date(flight.takeoffDate)\r\n              console.log(\"Flight date > \" + fDate.toLocaleDateString());\r\n              if (compareDateStart.toLocaleDateString() == fDate.toLocaleDateString()) {\r\n                this.onewayFlightList.push(flight);\r\n                console.log(flight)\r\n              }\r\n            });\r\n            this.onewayFlightTable.renderRows();\r\n          }\r\n        },\r\n        (err) => {\r\n          this.openSnackBar('Error during flights search', 'Dismiss');\r\n        }\r\n      );\r\n  }\r\n\r\n  onOnewaySearchSubmit() {\r\n    this.getFlights(this.onewaySearchForm.value);\r\n  }\r\n\r\n\r\n\r\n  \r\n\r\n  setToSearch() {\r\n    this.isSearch = true;\r\n    this.isReserve = false;\r\n  }\r\n\r\n  ReserveButton() {\r\n    if (this.selectedFlight != null) {\r\n      console.log(this.selectedFlight);\r\n      this.isSearch = false;\r\n      this.isReserve = true;\r\n    }\r\n  }\r\n}\r\n","module.exports = \"<div fxLayout=\\\"rows\\\">\\r\\n  <div class=\\\"container\\\"\\r\\n    fxFlex=\\\"60\\\"\\r\\n    fxLayout=\\\"column\\\"\\r\\n    fxLayoutGap=\\\"20px\\\">\\r\\n\\r\\n    <div class=\\\"column-title\\\">\\r\\n      <h3>Friend list</h3>\\r\\n      <hr>\\r\\n    </div>\\r\\n\\r\\n    <div *ngIf=\\\"friendList.length > 0\\\">\\r\\n      <table mat-table #friendTable [dataSource]=\\\"friendList\\\"\\r\\n        class=\\\"friendTable\\\">\\r\\n\\r\\n        <ng-container matColumnDef=\\\"fullName\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef> Full name </th>\\r\\n          <td mat-cell *matCellDef=\\\"let friend\\\"> {{friend.fullName}} </td>\\r\\n        </ng-container>\\r\\n      \\r\\n        <ng-container matColumnDef=\\\"username\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef> Username </th>\\r\\n          <td mat-cell *matCellDef=\\\"let friend\\\"> {{friend.username}} </td>\\r\\n        </ng-container>\\r\\n      \\r\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumnsF\\\"></tr>\\r\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumnsF;\\\" (click)=\\\"setClickedRowF(row)\\\" [class.active]=\\\"row == selectedFriend\\\"></tr>\\r\\n      </table>  \\r\\n    </div>\\r\\n\\r\\n    <div fxLayout=\\\"rows\\\" *ngIf=\\\"friendList.length > 0\\\">\\r\\n      <div>\\r\\n        <button mat-button class=\\\"background-primary text-floral-white\\\" (click) = \\\"deleteFriendButton()\\\">Delete</button>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-size\\\">\\r\\n      <form novalidate [formGroup]=\\\"addFriendForm\\\" #fformAddFriend=\\\"ngForm\\\" (ngSubmit)=\\\"onAddFriendSubmit()\\\">\\r\\n        <p>\\r\\n          <mat-form-field class=\\\"half-width\\\">\\r\\n            <input matInput formControlName=\\\"username\\\" placeholder=\\\"Username\\\" type=\\\"text\\\">\\r\\n            <mat-error *ngIf=\\\"addFriendFormErrors.username\\\">\\r\\n              {{ addFriendFormErrors.username }}\\r\\n            </mat-error>\\r\\n          </mat-form-field>\\r\\n        </p>\\r\\n        <button type=\\\"submit\\\" mat-button class=\\\"background-primary text-floral-white\\\" [disabled]=\\\"addFriendForm.invalid\\\">\\r\\n          Send request\\r\\n        </button>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"container\\\"\\r\\n    fxFlex=\\\"40\\\"\\r\\n    fxLayout=\\\"column\\\"\\r\\n    fxLayoutGap=\\\"20px\\\">\\r\\n\\r\\n    <div class=\\\"column-title\\\">\\r\\n      <h3>Pending requests</h3>\\r\\n      <hr>\\r\\n    </div>\\r\\n\\r\\n    <div *ngIf=\\\"requestList.length > 0\\\">\\r\\n      <table mat-table #requestTable [dataSource]=\\\"requestList\\\"\\r\\n        class=\\\"requestTable\\\">\\r\\n      \\r\\n        <ng-container matColumnDef=\\\"username\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef> Username </th>\\r\\n          <td mat-cell *matCellDef=\\\"let request\\\"> {{request.username}} </td>\\r\\n        </ng-container>\\r\\n      \\r\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumnsR\\\"></tr>\\r\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumnsR;\\\" (click)=\\\"setClickedRowR(row)\\\" [class.active]=\\\"row == selectedRequest\\\"></tr>\\r\\n      </table>  \\r\\n    </div>\\r\\n\\r\\n    <div fxLayout=\\\"rows\\\" *ngIf=\\\"requestList.length > 0\\\">\\r\\n      <div>\\r\\n        <button mat-button class=\\\"background-primary text-floral-white\\\" (click) = \\\"acceptButton()\\\">Accept</button>\\r\\n      </div>\\r\\n      <div>\\r\\n        <button mat-button class=\\\"background-primary text-floral-white\\\" (click) = \\\"declineButton()\\\">Decline</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div> \"","module.exports = \".friendTable tr th,\\n.friendTable tr td,\\n.requestTable tr th,\\n.requestTable tr td {\\n  padding: 15px; }\\n\\n.friendTable tr.active td {\\n  background-color: #123456 !important;\\n  color: white; }\\n\\n.requestTable tr.active td {\\n  background-color: #123456 !important;\\n  color: white; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZnJpZW5kcy9EOlxcRHVzYW5cXDFGYWtzXFxNUlNfSVNBXFxNUlNfSVNBX1RpbTEyXFxEYXNUcmF2ZWxTaXRlL3NyY1xcYXBwXFxmcmllbmRzXFxmcmllbmRzLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7O0VBSUksYUFBYSxFQUFBOztBQUdqQjtFQUNJLG9DQUFtQztFQUNuQyxZQUFZLEVBQUE7O0FBR2hCO0VBQ0ksb0NBQW1DO0VBQ25DLFlBQVksRUFBQSIsImZpbGUiOiJzcmMvYXBwL2ZyaWVuZHMvZnJpZW5kcy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5mcmllbmRUYWJsZSB0ciB0aCxcclxuLmZyaWVuZFRhYmxlIHRyIHRkLFxyXG4ucmVxdWVzdFRhYmxlIHRyIHRoLFxyXG4ucmVxdWVzdFRhYmxlIHRyIHRkIHtcclxuICAgIHBhZGRpbmc6IDE1cHg7XHJcbn1cclxuXHJcbi5mcmllbmRUYWJsZSB0ci5hY3RpdmUgdGQge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjojMTIzNDU2ICFpbXBvcnRhbnQ7XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbn1cclxuXHJcbi5yZXF1ZXN0VGFibGUgdHIuYWN0aXZlIHRkIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IzEyMzQ1NiAhaW1wb3J0YW50O1xyXG4gICAgY29sb3I6IHdoaXRlO1xyXG59Il19 */\"","import { Component, OnInit, Inject, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { LoopBackConfig, Myuser, UserInfo, Friendship } from '../shared/sdk';\r\nimport { API_VERSION } from '../shared/baseUrl';\r\nimport { MyuserApi, UserInfoApi, FriendshipApi } from '../shared/sdk/services';\r\nimport { MatSnackBar, MatTable } from '@angular/material';\r\nimport { LoginServiceService } from '../login-service.service';\r\n\r\n@Component({\r\n  selector: 'app-friends',\r\n  templateUrl: './friends.component.html',\r\n  styleUrls: ['./friends.component.scss']\r\n})\r\nexport class FriendsComponent implements OnInit {\r\n\r\n  userType: string;\r\n  userId: string;\r\n\r\n  selectedFriend: any = null;\r\n  friendList: any[] = [];\r\n  setClickedRowF : Function;\r\n  displayedColumnsF: string[] = ['fullName', 'username'];\r\n  @ViewChild('friendTable') friendTable: MatTable<any>;\r\n\r\n  selectedRequest: any = null;\r\n  requestList: any[] = [];\r\n  setClickedRowR : Function;\r\n  displayedColumnsR: string[] = ['username'];\r\n  @ViewChild('requestTable') requestTable: MatTable<any>;\r\n\r\n  addFriendForm: FormGroup;\r\n  @ViewChild('fformAddFriend') addFriendFormDirective;\r\n\r\n  addFriendFormErrors = {\r\n    'username': ''\r\n  };\r\n\r\n  addFriendFormValidationMessages = {\r\n    'username': {\r\n      'required' : 'Username is required'\r\n    }\r\n  };\r\n\r\n  /****** BASIC FUNCTIONS ******/\r\n\r\n  constructor(@Inject('baseURL') private baseURL,\r\n  private fb: FormBuilder,\r\n  private myuserService: MyuserApi,\r\n  private userInfoService: UserInfoApi,\r\n  private friendshipService: FriendshipApi,\r\n  private loginService: LoginServiceService,\r\n  public snackBar: MatSnackBar) {\r\n    LoopBackConfig.setBaseURL(baseURL);\r\n    LoopBackConfig.setApiVersion(API_VERSION);\r\n    this.loginService.user.subscribe(data => {\r\n      if (data) {\r\n        this.userType = data.user.type;\r\n        this.userId = data.user.id;\r\n      }\r\n    });\r\n    this.setClickedRowF = function(index){\r\n      this.selectedFriend = index;\r\n    }\r\n    this.setClickedRowR = function(index){\r\n      this.selectedRequest = index;\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.createAddFriendForm();\r\n    this.refreshFriends();\r\n    this.refreshRequests();\r\n  }\r\n\r\n  openSnackBar(message: string, action: string) {\r\n    this.snackBar.open(message, action, {\r\n      duration: 2000,\r\n    });\r\n  }\r\n\r\n  refreshFriends() {\r\n    this.friendList = [];\r\n    this.friendshipService.find().subscribe(\r\n      result => {\r\n        let gottenFriends: Friendship[] = result as Friendship[];\r\n        console.log(gottenFriends);\r\n        for (const friendship of gottenFriends) {\r\n          if (friendship.firstUserId == this.userId || friendship.secondUserId == this.userId && friendship.accepted) {\r\n            console.log(friendship);\r\n            let friendId: string = (friendship.firstUserId == this.userId) ? friendship.secondUserId : friendship.firstUserId;\r\n            let friend: any = {\r\n              friendship: friendship\r\n            };\r\n\r\n            this.myuserService.findById(friendId).subscribe(\r\n              result => {\r\n                let friendUser: Myuser = result as Myuser;\r\n                friend['username'] = friendUser.username;\r\n                this.userInfoService.find().subscribe(\r\n                  result => {\r\n                    let infos: UserInfo[] = result as UserInfo[];\r\n                    for(const info of infos) {\r\n                      if (info.userIdId == friendId) {\r\n                        console.log(JSON.stringify(info));\r\n                        let friendInfo: UserInfo = info as UserInfo;\r\n                        friend['fullName'] = (friendInfo.firstName == \"\" && friendInfo.lastName == \"\") ?\r\n                          \"-\" : friendInfo.firstName + \" \" + friendInfo.lastName;\r\n                        \r\n                      }\r\n                    }\r\n                  },\r\n                  err => {\r\n                    console.log(err);\r\n                  }\r\n                );\r\n                this.friendList.push(friend);\r\n                this.friendTable.renderRows();\r\n              },\r\n              err => {\r\n                console.log(err);\r\n              }\r\n            );\r\n          }\r\n        }\r\n      },\r\n      err => {\r\n        console.log(err);\r\n      }\r\n    );\r\n  }\r\n\r\n  refreshRequests() {\r\n    this.requestList = [];\r\n    this.friendshipService.find().subscribe(\r\n      result => {\r\n        let gottenFriends: Friendship[] = result as Friendship[];\r\n        console.log(gottenFriends);\r\n        for (const friendship of gottenFriends) {\r\n          if (friendship.secondUserId == this.userId && !friendship.accepted) {\r\n            let friendId: string = friendship.firstUserId;\r\n            let request: any = {\r\n              friendship: friendship\r\n            };\r\n\r\n            this.myuserService.findById(friendId).subscribe(\r\n              result => {\r\n                let friendUser: Myuser = result as Myuser;\r\n                request['username'] = friendUser.username;\r\n                this.requestList.push(request);\r\n                this.requestTable.renderRows();\r\n              },\r\n              err => {\r\n                console.log(err);\r\n              }\r\n            );\r\n          }\r\n        }\r\n      },\r\n      err => {\r\n        console.log(err);\r\n      }\r\n    );\r\n  }\r\n\r\n  /****** ADD FRIEND FORM ******/\r\n\r\n  onValueChangedAddFriend(data?: any) {\r\n    if (!this.addFriendForm) {return; }\r\n    const form = this.addFriendForm;\r\n    for (const field in this.addFriendFormErrors){\r\n      if (this.addFriendFormErrors.hasOwnProperty(field)){\r\n        this.addFriendFormErrors[field] = '';\r\n        const control = form.get(field);\r\n        if (control && !control.valid) {\r\n          const messages = this.addFriendFormValidationMessages[field];\r\n          for (const key in control.errors){\r\n            if (control.errors.hasOwnProperty(key)){\r\n              this.addFriendFormErrors[field] += messages[key] + ' ';\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  createAddFriendForm() {\r\n    this.addFriendForm = this.fb.group({\r\n      'username': ['', Validators.required]\r\n    });\r\n\r\n    this.addFriendForm.valueChanges\r\n      .subscribe(data => this.onValueChangedAddFriend(data));\r\n    this.onValueChangedAddFriend();\r\n  }\r\n\r\n  onAddFriendSubmit() {\r\n    let inputUsername = this.addFriendForm.value.username;\r\n    this.myuserService.findOne({where: {username: inputUsername}}).subscribe(\r\n      result => {\r\n        if (result != null && result != {}) {\r\n          let toAddUser: Myuser = result as Myuser;\r\n          this.friendshipService.create({\r\n            firstUserId: this.userId,\r\n            secondUserId: toAddUser.id,\r\n            accepted: false\r\n          }).subscribe(\r\n            result => {\r\n              this.openSnackBar(\"Sent request to \" + toAddUser.username, \"Dismiss\");\r\n            },\r\n            err => {\r\n              console.log(err);\r\n            }\r\n          );\r\n        }\r\n        else {\r\n          this.openSnackBar(\"No user with given username\", \"Dismiss\");\r\n        }\r\n      },\r\n      err => {\r\n        this.openSnackBar(\"No user with given username\", \"Dismiss\");\r\n        console.log(err);\r\n      }\r\n    );\r\n  }\r\n\r\n  /****** BUTTON PRESSES ******/\r\n\r\n  deleteFriendButton() {\r\n    if (this.selectedFriend != null) {\r\n      let friendship: Friendship = this.selectedFriend.friendship as Friendship;\r\n      this.friendshipService.deleteById(friendship.id).subscribe(\r\n        result => {\r\n          this.openSnackBar(\"Friend deleted from list\", \"Dismiss\");\r\n          this.refreshFriends();\r\n          this.refreshRequests();\r\n        },\r\n        err => {\r\n          console.log(err);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  acceptButton() {\r\n    if (this.selectedRequest != null) {\r\n      let friendship: Friendship = this.selectedRequest.friendship as Friendship;\r\n      this.friendshipService.updateAttributes(friendship.id, {\r\n        firstUserId: friendship.firstUserId,\r\n        secondUserId: friendship.secondUserId,\r\n        accepted: true \r\n      }).subscribe(\r\n        result => {\r\n          this.openSnackBar(\"Accepted friend request\", \"Dismiss\");\r\n          this.refreshFriends();\r\n          this.refreshRequests();\r\n        },\r\n        err => {\r\n          console.log(err);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  declineButton() {\r\n    if (this.selectedRequest != null) {\r\n      let friendship: Friendship = this.selectedRequest.friendship as Friendship;\r\n      this.friendshipService.deleteById(friendship.id).subscribe(\r\n        result => {\r\n          this.openSnackBar(\"Declined friend request\", \"Dismiss\");\r\n          this.refreshFriends();\r\n          this.refreshRequests();\r\n        },\r\n        err => {\r\n          console.log(err);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"container jumbotron\\\"\\r\\n    fxLayout=\\\"row\\\"\\r\\n    fxLayout.sm=\\\"column\\\" \\r\\n    fxLayout.xs=\\\"column\\\" \\r\\n    fxLayoutAlign.xs=\\\"start center\\\"\\r\\n    fxLayoutAlign.sm=\\\"start center\\\" \\r\\n    fxLayoutAlign.gt-sm=\\\"center center\\\" \\r\\n    fxLayoutGap=\\\"10px\\\">\\r\\n\\r\\n  <div fxFlex fxFlex=\\\"50%\\\">\\r\\n    <h1>Das Travel Site</h1>\\r\\n  </div>\\r\\n\\r\\n  <div fxFlex></div>\\r\\n</div>\\r\\n<mat-toolbar color=\\\"primary\\\">\\r\\n  <div *ngIf=\\\"!userType\\\">\\r\\n    <a mat-button routerLink='/home' routerLinkActive='active'> Home</a>\\r\\n    <a mat-button routerLink='/flights'> Flights </a>\\r\\n    <a mat-button routerLink='/hotels'> Hotels </a>\\r\\n    <a mat-button routerLink='/rentalServices'> Rental Services </a>\\r\\n    <a mat-button routerLink='/cars'> Cars </a>\\r\\n    <span class=\\\"flex-spacer\\\"></span>\\r\\n\\r\\n\\r\\n  </div>\\r\\n  <div *ngIf=\\\"userType==='registeredUser'\\\">\\r\\n    <a mat-button routerLink='/home' routerLinkActive='active'> Home</a>\\r\\n    <a mat-button routerLink='/flights'> Flights </a>\\r\\n    <a mat-button routerLink='/hotels'> Hotels </a>\\r\\n    <a mat-button routerLink='/rentalServices'> Rental Services </a>\\r\\n    <a mat-button routerLink='/cars'> Cars </a>\\r\\n    <a mat-button routerLink='/listCarDiscounts'> Car special offers </a>\\r\\n    <a mat-button routerLink=\\\"/roomReservations\\\"> Room Reservations </a>\\r\\n    <a mat-button routerLink=\\\"/carReservations\\\"> Car Reservations </a>\\r\\n    <a mat-button routerLink=\\\"/reservationFlow\\\">Reservation flow</a>\\r\\n  </div>\\r\\n  <div *ngIf=\\\"userType==='airportAdmin'\\\">\\r\\n    <a mat-button routerLink='/home' routerLinkActive='active'> Home</a>\\r\\n    <a mat-button routerLink='/flights'> Flights </a>\\r\\n    <a mat-button routerLink='/airline'> Airline </a>\\r\\n  </div>\\r\\n  <div *ngIf=\\\"userType==='hotelAdmin'\\\">\\r\\n    <a mat-button routerLink='/home' routerLinkActive='active'> Home</a>\\r\\n    <a mat-button routerLink='/hotel'> Hotel </a>\\r\\n    <a mat-button routerLink='/rooms'> Rooms </a>\\r\\n    <a mat-button routerLink='/roomBusinessReports'> Business reports </a>\\r\\n  </div>\\r\\n  <div *ngIf=\\\"userType==='rentalServiceAdmin'\\\">\\r\\n    <a mat-button routerLink='/home' routerLinkActive='active'> Home</a>\\r\\n    <a mat-button routerLink='/rentalServices'> Rental Services </a>\\r\\n    <a mat-button routerLink='/carPrices'>Car prices</a>\\r\\n    <a mat-button routerLink='/branches'> Branches </a>\\r\\n    <a mat-button routerLink='/cars'> Cars </a>\\r\\n    <a mat-button routerLink ='/carDiscounts' > Discounts </a>\\r\\n    <a mat-button routerLink ='/carBusinessReports'> Business reports </a>\\r\\n  </div>\\r\\n  <div *ngIf=\\\"userType==='admin'\\\">\\r\\n    <a mat-button routerLink='/home' routerLinkActive='active'> Home</a>\\r\\n    <a mat-button routerLink=\\\"/addAirline\\\" > Airports </a>\\r\\n    <a mat-button routerLink='/hotels'> Hotels </a>\\r\\n    <a mat-button routerLink='/rentalServices'> Rental Services </a>\\r\\n    <a mat-button routerLink=\\\"/admins\\\"> Admins </a>\\r\\n    <a mat-button routerLink='/locations'> Locations </a>\\r\\n  </div>\\r\\n\\r\\n  <span class=\\\"flex-spacer\\\"></span>\\r\\n  <span *ngIf=\\\"userType==='registeredUser'\\\">Bonus points: {{bonusPoints}}</span>\\r\\n  <a mat-button routerLink='/user' *ngIf=\\\"userType\\\">User</a>\\r\\n  <a mat-button (click)=\\\"logout()\\\" *ngIf=\\\"userType\\\">Logout</a>\\r\\n  <a mat-button (click)=\\\"openLoginForm()\\\" *ngIf=\\\"!userType\\\">Login</a>\\r\\n  <a mat-button (click)=\\\"openRegisterForm()\\\" *ngIf=\\\"!userType\\\">Register</a>\\r\\n    <!--<a mat-button (click)=\\\"openLoginForm()\\\"><span class=\\\"fa fa-sign-in fa-lg\\\">Login</span></a>-->\\r\\n</mat-toolbar>\\r\\n\\r\\n\"","module.exports = \".jumbotron {\\n  margin: 0px auto;\\n  padding: 10px 10px;\\n  background: #9575CD;\\n  color: floralwhite; }\\n\\n.active {\\n  background: #4257A0; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaGVhZGVyL0Q6XFxEdXNhblxcMUZha3NcXE1SU19JU0FcXE1SU19JU0FfVGltMTJcXERhc1RyYXZlbFNpdGUvc3JjXFxhcHBcXGhlYWRlclxcaGVhZGVyLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQVdBO0VBSkksZ0JBQWdCO0VBQ2hCLGtCQUk4QjtFQUM5QixtQkFYc0I7RUFZdEIsa0JBQWlCLEVBQUE7O0FBR3JCO0VBQ0EsbUJBZDZCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9oZWFkZXIvaGVhZGVyLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiJGx0LWdyYXk6ICNkZGQ7XHJcbiRiYWNrZ3JvdW5kLWRhcms6ICM1MTJEQTg7XHJcbiRiYWNrZ3JvdW5kLWxpZ2h0OiAjOTU3NUNEO1xyXG4kYmFja2dyb3VuZC1wYWxlOiAjRDFDNEU5O1xyXG4kYmFja2dyb3VuZC1tb3JlZGFyazogIzQyNTdBMDtcclxuXHJcbkBtaXhpbiB6ZXJvLW1hcmdpbigkcGFkLXVwLWRvd24sICRwYWQtbGVmdC1yaWdodCkge1xyXG4gICAgbWFyZ2luOiAwcHggYXV0bztcclxuICAgIHBhZGRpbmc6ICRwYWQtdXAtZG93biAkcGFkLWxlZnQtcmlnaHQ7XHJcbn1cclxuXHJcbi5qdW1ib3Ryb24ge1xyXG4gICAgQGluY2x1ZGUgemVyby1tYXJnaW4oMTBweCwxMHB4KTtcclxuICAgIGJhY2tncm91bmQ6ICRiYWNrZ3JvdW5kLWxpZ2h0IDtcclxuICAgIGNvbG9yOmZsb3JhbHdoaXRlO1xyXG59XHJcblxyXG4uYWN0aXZlIHtcclxuYmFja2dyb3VuZDogJGJhY2tncm91bmQtbW9yZWRhcms7XHJcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialog, MatSnackBar } from '@angular/material';\r\nimport { RegisterComponent } from '../register/register.component';\r\nimport { LoginComponent } from '../login/login.component';\r\nimport { MyuserApi } from '../shared/sdk/services/custom';\r\nimport { BehaviorSubject} from 'rxjs';\r\nimport { Myuser } from '../shared/sdk/models';\r\nimport {LoginServiceService} from '../login-service.service';\r\nimport {Location} from '@angular/common';\r\nimport {Router} from '@angular/router';\r\nimport { ItemService } from '../services/item.service';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.scss']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n  userType: string;\r\n  bonusPoints = 0;\r\n  constructor(public dialog: MatDialog,\r\n    private myUserService: MyuserApi,\r\n    private location: Location,\r\n    private loginService: LoginServiceService,\r\n    private itemservice: ItemService,\r\n    private _router: Router,\r\n    public snackBar: MatSnackBar) {\r\n      loginService.user.subscribe(data => {\r\n        if (data) {\r\n          this.userType = data.user.type;\r\n\r\n        }\r\n      });\r\n      this.loginService.user.subscribe(data => {\r\n        if (data) {\r\n          this.bonusPoints = data.user.bonusPoints;\r\n        }\r\n      });\r\n      itemservice.setHeader(this);\r\n    }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  removeBonusPoints() {\r\n    this.bonusPoints -= 100;\r\n  }\r\n\r\n  getBonusPoints() {\r\n    return this.bonusPoints;\r\n  }\r\n\r\n  openSnackBar(message: string, action: string) {\r\n    this.snackBar.open(message, action, {\r\n       duration: 2000,\r\n    });\r\n  }\r\n\r\n  openRegisterForm() {\r\n    this.dialog.open(RegisterComponent, {width: '500px', height: '450 px'});\r\n  }\r\n\r\n  openLoginForm() {\r\n    this.dialog.open(LoginComponent, {width: '500px', height: '450 px'});\r\n  }\r\n\r\n  logout() {\r\n    this.myUserService.logout()\r\n    .subscribe(\r\n      (result) => {\r\n        this.openSnackBar(\"Logged out successfuly \",\"Dismiss\");\r\n        this.userType = null;\r\n        this.loginService.observableUser.next(null);\r\n        this._router.navigate(['/home']);\r\n      },\r\n      (err) => {\r\n        this.openSnackBar(\"Logging out failed\",\"Dismiss\");\r\n      });\r\n  }\r\n\r\n}\r\n","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\r\\n  <!--<div *ngIf=\\\"userType==='registeredUser'\\\">-->\\r\\n  <div>\\r\\n    <a mat-button (click) = \\\"airlinesButton()\\\"> Airlines </a>\\r\\n  </div>\\r\\n  <span class=\\\"flex-spacer\\\"></span>\\r\\n</mat-toolbar>\\r\\n\\r\\n<div *ngIf=\\\"airlinesActive\\\">\\r\\n  <app-airlines></app-airlines>\\r\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvaG9tZS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { MyuserApi } from '../shared/sdk';\r\nimport { MatSnackBar } from '@angular/material';\r\nimport { LoginServiceService } from '../login-service.service';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  airlinesActive = false;\r\n  userType: string = null;\r\n\r\n  constructor(private loginService: LoginServiceService,\r\n    public snackBar: MatSnackBar) {\r\n    loginService.user.subscribe(data => {\r\n      if (data) {\r\n        this.userType = data.user.type;\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  openSnackBar(message: string, action: string) {\r\n    this.snackBar.open(message, action, {\r\n       duration: 2000,\r\n    });\r\n  }\r\n\r\n  airlinesButton() {\r\n    this.airlinesActive = true;\r\n  }\r\n\r\n}\r\n","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\r\\n  <a mat-button (click) = \\\"modifyButton()\\\"> Change</a>\\r\\n  <a mat-button (click) = \\\"addRoomButton()\\\"> Add a room</a>\\r\\n  <a mat-button (click) = \\\"removeRoomButton()\\\"> Remove a room</a>\\r\\n  <a mat-button (click) = \\\"modifyRoomButton()\\\"> Modify a room</a>\\r\\n  <a mat-button (click) = \\\"addSpecialOfferButton()\\\"> Add a special offer</a>\\r\\n  <span class=\\\"flex-spacer\\\"></span>\\r\\n</mat-toolbar>\\r\\n\\r\\n<div *ngIf = \\\"modifyActive\\\">\\r\\n  <div class=\\\"container\\\"\\r\\n    fxLayout=\\\"column\\\"\\r\\n    fxLayoutGap=\\\"10px\\\">\\r\\n\\r\\n    <div fxFlex>\\r\\n      <div>\\r\\n          <h3>Modify your hotel</h3>\\r\\n          <hr>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div fxFlex class=\\\"form-size\\\">\\r\\n        <form novalidate [formGroup]=\\\"modifyHotelForm\\\" #fformModifyHotel=\\\"ngForm\\\" (ngSubmit)=\\\"onModifyHotelSubmit()\\\">\\r\\n          <p>\\r\\n            <mat-form-field class=\\\"half-width\\\">\\r\\n              <input matInput formControlName=\\\"name\\\" placeholder=\\\"Hotel Name\\\" type=\\\"text\\\">\\r\\n              <mat-error *ngIf=\\\"modifyHotelFormErrors.name\\\">\\r\\n                {{ modifyHotelFormErrors.name }}\\r\\n              </mat-error>\\r\\n            </mat-form-field>\\r\\n          </p>\\r\\n          <p>\\r\\n            <mat-form-field class=\\\"half-width\\\">\\r\\n              <input matInput formControlName=\\\"address\\\" placeholder=\\\"Address\\\" type=\\\"text\\\">\\r\\n              <mat-error *ngIf=\\\"modifyHotelFormErrors.address\\\">\\r\\n                {{ modifyHotelFormErrors.address}}\\r\\n              </mat-error>\\r\\n            </mat-form-field>\\r\\n          </p>         \\r\\n          <p>\\r\\n            <mat-form-field class=\\\"full-width\\\">\\r\\n              <textarea matInput formControlName=\\\"description\\\" placeholder=\\\"Hotel description\\\" rows=10></textarea>\\r\\n            </mat-form-field>\\r\\n          </p>\\r\\n          <input hidden formControlName=\\\"id\\\">\\r\\n          <button type=\\\"submit\\\" mat-button class=\\\"background-primary text-floral-white\\\"\\r\\n          [disabled]=\\\"modifyHotelForm.invalid\\\">Submit</button>\\r\\n        </form>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div *ngIf = \\\"addRoomActive\\\">\\r\\n  <div class=\\\"container\\\"\\r\\n    fxLayout=\\\"column\\\"\\r\\n    fxLayoutGap=\\\"10px\\\">\\r\\n\\r\\n    <div fxFlex>\\r\\n      <div>\\r\\n          <h3>Add a room to your hotel</h3>\\r\\n          <hr>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div fxFlex class=\\\"form-size\\\">\\r\\n      <form novalidate [formGroup]=\\\"addRoomForm\\\" #fformAddRoom=\\\"ngForm\\\" (ngSubmit)=\\\"onAddRoomSubmit()\\\">\\r\\n        <p>\\r\\n          <mat-form-field class=\\\"half-width\\\">\\r\\n            <input matInput formControlName=\\\"number\\\" placeholder=\\\"Room number\\\" type=\\\"number\\\">\\r\\n            <mat-error *ngIf=\\\"addRoomFormErrors.number\\\">\\r\\n              {{ addRoomFormErrors.number }}\\r\\n            </mat-error>\\r\\n          </mat-form-field>\\r\\n          <mat-form-field class=\\\"half-width\\\">\\r\\n            <input matInput formControlName=\\\"beds\\\" placeholder=\\\"Number of beds\\\" type=\\\"number\\\">\\r\\n            <mat-error *ngIf=\\\"addRoomFormErrors.beds\\\">\\r\\n                {{ addRoomFormErrors.beds }}\\r\\n              </mat-error>\\r\\n          </mat-form-field>\\r\\n        </p>\\r\\n        <p>\\r\\n          <mat-form-field class=\\\"full-width\\\">\\r\\n            <textarea matInput formControlName=\\\"description\\\" placeholder=\\\"Description\\\" type=\\\"text\\\" rows=3>\\r\\n            <mat-error *ngIf=\\\"addRoomFormErrors.description\\\">\\r\\n              {{ modifyHotelFormErrors.address}}\\r\\n            </mat-error></textarea>\\r\\n          </mat-form-field>\\r\\n        </p>\\r\\n        <input hidden formControlName=\\\"hotelId\\\">\\r\\n        <button type=\\\"submit\\\" mat-button class=\\\"background-primary text-floral-white\\\"\\r\\n        [disabled]=\\\"addRoomForm.invalid\\\">Submit</button>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div *ngIf = \\\"removeRoomActive\\\">\\r\\n    <div class=\\\"container\\\"\\r\\n    fxLayout=\\\"column\\\"\\r\\n    fxLayoutGap=\\\"10px\\\">\\r\\n\\r\\n    <div fxFlex>\\r\\n      <div>\\r\\n          <h3>Remove a room from your hotel</h3>\\r\\n          <hr>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div fxFlex class=\\\"form-size\\\">\\r\\n      <form novalidate [formGroup]=\\\"removeRoomForm\\\" #fformRemoveRoom=\\\"ngForm\\\" (ngSubmit)=\\\"onRemoveRoomSubmit()\\\">\\r\\n        <p>\\r\\n          <mat-form-field class=\\\"half-width\\\">\\r\\n            <input matInput formControlName=\\\"number\\\" placeholder=\\\"Room number\\\" type=\\\"number\\\">\\r\\n            <mat-error *ngIf=\\\"addRoomFormErrors.number\\\">\\r\\n              {{ addRoomFormErrors.number }}\\r\\n            </mat-error>\\r\\n          </mat-form-field>\\r\\n        </p>\\r\\n        <button type=\\\"submit\\\" mat-button class=\\\"background-primary text-floral-white\\\"\\r\\n        [disabled]=\\\"removeRoomForm.invalid\\\">Submit</button>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div *ngIf = \\\"modifyRoomActive\\\">\\r\\n    <div class=\\\"container\\\"\\r\\n    fxLayout=\\\"column\\\"\\r\\n    fxLayoutGap=\\\"10px\\\">\\r\\n\\r\\n    <div fxFlex>\\r\\n      <div>\\r\\n          <h3>Modify a room from your hotel</h3>\\r\\n          <hr>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div fxFlex class=\\\"form-size\\\">\\r\\n      <form novalidate [formGroup]=\\\"getRoomForm\\\" #fformGetRoom=\\\"ngForm\\\" (ngSubmit)=\\\"onGetRoomSubmit()\\\">\\r\\n        <p>\\r\\n          <mat-form-field class=\\\"half-width\\\">\\r\\n            <input matInput formControlName=\\\"number\\\" placeholder=\\\"Room number\\\" type=\\\"number\\\">\\r\\n            <mat-error *ngIf=\\\"getRoomFormErrors.number\\\">\\r\\n              {{ getRoomFormErrors.number }}\\r\\n            </mat-error>\\r\\n          </mat-form-field>\\r\\n        </p>\\r\\n        <button type=\\\"submit\\\" mat-button class=\\\"background-primary text-floral-white\\\"\\r\\n        [disabled]=\\\"getRoomForm.invalid\\\">Find room</button>\\r\\n      </form>\\r\\n    </div>\\r\\n    <div fxFex calss=\\\"form-size\\\">\\r\\n      <form novalidate [formGroup]=\\\"modifyRoomForm\\\" #fformModifyRoom=\\\"ngForm\\\" (ngSubmit)=\\\"onModifyRoomSubmit()\\\">\\r\\n          <p>\\r\\n            <mat-form-field class=\\\"half-width\\\">\\r\\n              <input matInput formControlName=\\\"number\\\" placeholder=\\\"Room number\\\" type=\\\"number\\\">\\r\\n              <mat-error *ngIf=\\\"modifyRoomFormErrors.number\\\">\\r\\n                {{ modifyRoomFormErrors.number }}\\r\\n              </mat-error>\\r\\n            </mat-form-field>\\r\\n            <mat-form-field class=\\\"half-width\\\">\\r\\n              <input matInput formControlName=\\\"beds\\\" placeholder=\\\"Number of beds\\\" type=\\\"number\\\">\\r\\n              <mat-error *ngIf=\\\"modifyRoomFormErrors.beds\\\">\\r\\n                  {{ modifyRoomFormErrors.beds }}\\r\\n              </mat-error>\\r\\n            </mat-form-field>\\r\\n          </p>\\r\\n          <p>\\r\\n            <mat-form-field class=\\\"full-width\\\">\\r\\n              <textarea matInput formControlName=\\\"description\\\" placeholder=\\\"Description\\\" type=\\\"text\\\" rows=3></textarea>\\r\\n            </mat-form-field>\\r\\n          </p>\\r\\n          <input hidden formControlName=\\\"hotelId\\\">\\r\\n          <input hidden formControlName=\\\"id\\\">\\r\\n          <button type=\\\"submit\\\" mat-button class=\\\"background-primary text-floral-white\\\"\\r\\n          [disabled]=\\\"modifyRoomForm.invalid\\\">Submit</button>\\r\\n        </form>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<div *ngIf=\\\"addSpecialOfferActive\\\">\\r\\n  <div class=\\\"container\\\"\\r\\n       fxLayout=\\\"column\\\"\\r\\n       fxLayoutGap=\\\"10px\\\">\\r\\n\\r\\n    <div fxFlex>\\r\\n      <div>\\r\\n        <h3>Add a special offer</h3>\\r\\n        <hr>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div fxFlex fxLayout=\\\"row\\\">\\r\\n      <div fxFlex class=\\\"form-size\\\">\\r\\n        <form novalidate [formGroup]=\\\"addSpecialOfferForm\\\" #fformAddSpecialOffer=\\\"ngForm\\\" (ngSubmit)=\\\"onAddSpecialOfferSubmit()\\\">\\r\\n          <p>\\r\\n            <mat-form-field class=\\\"half-width\\\">\\r\\n              <input matInput formControlName=\\\"name\\\" placeholder=\\\"Special Offer Name\\\" type=\\\"text\\\">\\r\\n              <mat-error *ngIf=\\\"addSpecialOfferFormErrors.name\\\">\\r\\n                {{ addSpecialOfferFormErrors.name }}\\r\\n              </mat-error>\\r\\n            </mat-form-field>\\r\\n          </p>\\r\\n          <p>\\r\\n            <mat-form-field class=\\\"half-width\\\">\\r\\n              <input matInput formControlName=\\\"price\\\" placeholder=\\\"Price\\\" type=\\\"number\\\">\\r\\n              <mat-error *ngIf=\\\"addSpecialOfferFormErrors.price\\\">\\r\\n                {{ addSpecialOfferFormErrors.price }}\\r\\n              </mat-error>\\r\\n            </mat-form-field>\\r\\n          </p>\\r\\n          <button type=\\\"submit\\\" mat-button class=\\\"background-primary text-floral-white\\\"\\r\\n          [disabled]=\\\"addSpecialOfferForm.invalid\\\">Submit</button>\\r\\n        </form>\\r\\n      </div>\\r\\n      <div fxFlex>\\r\\n        <table mat-table #tablespecialoffers [dataSource] = \\\"myHotel.hotelSpecialOffers\\\">\\r\\n          <ng-container matColumnDef=\\\"name\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef>Name</th>\\r\\n            <td mat-cell *matCellDef=\\\"let specialOffer\\\">{{specialOffer.name}}</td>\\r\\n          </ng-container>\\r\\n          <ng-container matColumnDef=\\\"price\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef>Price</th>\\r\\n            <td mat-cell *matCellDef=\\\"let specialOffer\\\">{{specialOffer.price}}</td>\\r\\n          </ng-container>\\r\\n          <tr mat-header-row *matHeaderRowDef=\\\"columnsToDisplaySpecialOffers\\\"></tr>\\r\\n          <tr mat-row *matRowDef=\\\"let myRowData; columns: columnsToDisplaySpecialOffers\\\"></tr>        \\r\\n        </table>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \"td.mat-cell {\\n  padding: 15px; }\\n\\nth.mat-header-cell {\\n  padding: 15px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaG90ZWwvRDpcXER1c2FuXFwxRmFrc1xcTVJTX0lTQVxcTVJTX0lTQV9UaW0xMlxcRGFzVHJhdmVsU2l0ZS9zcmNcXGFwcFxcaG90ZWxcXGhvdGVsLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksYUFBYSxFQUFBOztBQUdmO0VBQ0UsYUFBYSxFQUFBIiwiZmlsZSI6InNyYy9hcHAvaG90ZWwvaG90ZWwuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0ZC5tYXQtY2VsbCB7XHJcbiAgICBwYWRkaW5nOiAxNXB4O1xyXG4gIH1cclxuICBcclxuICB0aC5tYXQtaGVhZGVyLWNlbGwge1xyXG4gICAgcGFkZGluZzogMTVweDtcclxuICB9Il19 */\"","import { Component, OnInit, Inject, ViewChild } from '@angular/core';\r\nimport {HotelSpecialOfferApi, LoopBackConfig} from '../shared/sdk';\r\nimport { API_VERSION } from '../shared/baseUrl';\r\nimport { HotelApi, RoomApi } from '../shared/sdk/services';\r\nimport { Hotel, Room, HotelSpecialOffer } from '../shared/sdk/models/';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport {MatSnackBar, MatTable} from '@angular/material';\r\nimport {LoginServiceService} from '../login-service.service';\r\nimport {ItemService} from '../services/item.service';\r\n\r\n@Component({\r\n  selector: 'app-hotel',\r\n  templateUrl: './hotel.component.html',\r\n  styleUrls: ['./hotel.component.scss']\r\n})\r\nexport class HotelComponent implements OnInit {\r\n\r\n  modifyActive = true;\r\n  addRoomActive = false;\r\n  removeRoomActive = false;\r\n  modifyRoomActive = false;\r\n  addSpecialOfferActive = false;\r\n  userType: string;\r\n  columnsToDisplaySpecialOffers = ['name', 'price'];\r\n  // form related objects\r\n  modifyHotelForm: FormGroup;\r\n  myHotel: Hotel;\r\n  @ViewChild('fformModifyHotel') modifyHotelFormDirective;\r\n\r\n  addRoomForm: FormGroup;\r\n  newRoom: Room;\r\n  @ViewChild('fformAddRoom') addRoomFormDirective;\r\n\r\n  removeRoomForm: FormGroup;\r\n  toRemoveRoomNumber: number;\r\n  @ViewChild('fformRemoveRoom') removeRoomFormDirective;\r\n\r\n  getRoomForm: FormGroup;\r\n  toGetRoomNumber: number;\r\n  @ViewChild('fformGetRoom') getRoomFormDirective;\r\n\r\n  modifyRoomForm: FormGroup;\r\n  modifiedRoom: Room;\r\n  @ViewChild('fformModifyRoom') modifyRoomFormDirective;\r\n\r\n  addSpecialOfferForm: FormGroup;\r\n  @ViewChild('fformAddSpecialOffer') addSpecialOfferFormDirective;\r\n\r\n  @ViewChild('tablespecialoffers') tableSpecialOffers: MatTable<any>;\r\n\r\n  modifyHotelFormErrors = {\r\n    'name': '',\r\n    'address': ''\r\n  };\r\n\r\n  modifyHotelFormValidationMessages = {\r\n    'name': {\r\n      'required' : 'Hotel name is required'\r\n    },\r\n    'address': {\r\n      'required' : 'Hotel address is required'\r\n    }\r\n  };\r\n\r\n  addRoomFormErrors = {\r\n    'number': '',\r\n    'beds': '',\r\n    'description': ''\r\n  };\r\n\r\n  addRoomFormValidationMessages = {\r\n    'number': {\r\n      'required': 'Number of room is required',\r\n      'min': 'Number of room must be higher than 0'\r\n    },\r\n    'beds': {\r\n      'required': 'Number of beds is required',\r\n      'min': 'Number of beds must be higher than 0'\r\n    },\r\n    'description':\r\n      {\r\n        'required': 'Description is required'\r\n      }\r\n  };\r\n\r\n  removeRoomFormErrors = {\r\n    'number': ''\r\n  };\r\n\r\n  removeRoomFormValidationMessages = {\r\n    'number': {\r\n      'required': 'Number of room is required',\r\n      'min': 'Number of room must be higher than 0'\r\n    }\r\n  };\r\n\r\n  getRoomFormErrors = {\r\n    'number': ''\r\n  };\r\n\r\n  getRoomFormValidationMessages = {\r\n    'number': {\r\n      'required': 'Number of room is required',\r\n      'min': 'Number of room must be higher than 0'\r\n    }\r\n  };\r\n\r\n  modifyRoomFormErrors = {\r\n    'number': '',\r\n    'beds': ''\r\n  };\r\n\r\n  modifyRoomFormValidationMessages = {\r\n    'number': {\r\n      'required': 'Number of room is required',\r\n      'min': 'Number of room must be higher than 0'\r\n    },\r\n    'beds': {\r\n      'required': 'Number of beds is required',\r\n      'min': 'Number of beds must be higher than 0'\r\n    }\r\n  };\r\n\r\n  addSpecialOfferFormErrors = {\r\n    'name': '',\r\n    'price': ''\r\n  };\r\n\r\n  addSpecialOfferFormValidationMessages = {\r\n    'name': {\r\n      'required': 'Name is required'\r\n    },\r\n    'price': {\r\n      'required': 'Price is required',\r\n      'min': 'Price must be higher than 0'\r\n    }\r\n  };\r\n\r\n  constructor(@Inject('baseURL') private baseURL,\r\n    private hotelservice: HotelApi,\r\n    private roomservice: RoomApi,\r\n    private specialofferservice: HotelSpecialOfferApi,\r\n    public snackBar: MatSnackBar,\r\n    private loginService: LoginServiceService,\r\n    private itemservice: ItemService,\r\n    private fb: FormBuilder\r\n    ) {\r\n      LoopBackConfig.setBaseURL(baseURL);\r\n      LoopBackConfig.setApiVersion(API_VERSION);\r\n      this.createModifyHotelForm();\r\n      this.createAddRoomForm();\r\n      this.createRemoveRoomForm();\r\n      this.createGetRoomForm();\r\n      this.createModifyRoomForm();\r\n      this.createAddSpecialOfferForm();\r\n      loginService.user.subscribe(data => {\r\n        if (data) {\r\n          this.userType = data.user.type;\r\n        }\r\n      });\r\n   }\r\n\r\n  ngOnInit() {\r\n    this.hotelservice.findOne({'where': {'id' : this.itemservice.getHotelId()}, 'include': 'hotelSpecialOffers'})\r\n    .subscribe((hotel: Hotel) => {\r\n      this.myHotel = hotel;\r\n      this.setValueModifyHotelForm();\r\n    });\r\n  }\r\n\r\n  openSnackBar(message: string, action: string) {\r\n    this.snackBar.open(message, action, {\r\n      duration: 2000,\r\n    });\r\n  }\r\n\r\n  onValueChangedModifyHotel(data?: any) {\r\n    if (!this.modifyHotelForm) {return; }\r\n    const form = this.modifyHotelForm;\r\n    for (const field in this.modifyHotelFormErrors){\r\n      if (this.modifyHotelFormErrors.hasOwnProperty(field)){\r\n        this.modifyHotelFormErrors[field] = '';\r\n        const control = form.get(field);\r\n        if (control && !control.valid) {\r\n          const messages = this.modifyHotelFormValidationMessages[field];\r\n          for (const key in control.errors){\r\n            if (control.errors.hasOwnProperty(key)){\r\n              this.modifyHotelFormErrors[field] += messages[key] + ' ';\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  createModifyHotelForm() {\r\n    this.modifyHotelForm = this.fb.group({\r\n      'name': ['', Validators.required],\r\n      'address': ['', Validators.required],\r\n      'description': '',\r\n      'id' : ''\r\n    });\r\n\r\n    this.modifyHotelForm.valueChanges\r\n      .subscribe(data => this.onValueChangedModifyHotel(data));\r\n    this.onValueChangedModifyHotel();\r\n  }\r\n\r\n  setValueModifyHotelForm() {\r\n    this.modifyHotelForm.setValue({\r\n      'name': this.myHotel.name,\r\n      'address' : this.myHotel.address,\r\n      'description' : this.myHotel.description,\r\n      'id' : this.myHotel.id\r\n    });\r\n  }\r\n\r\n  onModifyHotelSubmit() {\r\n    this.myHotel.address = this.modifyHotelForm.value.address;\r\n    this.myHotel.name = this.modifyHotelForm.value.name;\r\n    this.myHotel.description = this.modifyHotelForm.value.description;\r\n    this.hotelservice.updateAttributes(this.myHotel.id, this.myHotel)\r\n    .subscribe(result => {\r\n      this.openSnackBar('Modified hotel succesfully', 'Dismiss');\r\n    }, err => {\r\n      this.openSnackBar('Can not modify the hotel. Check if the new name is already taken', 'Dismiss');\r\n    });\r\n  }\r\n\r\n  onValueChangedAddRoom(data?: any) {\r\n    if (!this.addRoomForm) {return; }\r\n    const form = this.addRoomForm;\r\n    for (const field in this.addRoomFormErrors){\r\n      if (this.addRoomFormErrors.hasOwnProperty(field)){\r\n        this.addRoomFormErrors[field] = '';\r\n        const control = form.get(field);\r\n        if (control && !control.valid) {\r\n          const messages = this.addRoomFormValidationMessages[field];\r\n          for (const key in control.errors){\r\n            if (control.errors.hasOwnProperty(key)){\r\n              this.addRoomFormErrors[field] += messages[key] + ' ';\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  createAddRoomForm() {\r\n    this.addRoomForm = this.fb.group({\r\n      'number': [0, [Validators.required, Validators.min(1)]],\r\n      'beds': [0, [Validators.required, Validators.min(1)]],\r\n      'description': ['', [Validators.required]],\r\n      'hotelId': ''\r\n    });\r\n    this.addRoomForm.valueChanges\r\n    .subscribe(data => this.onValueChangedAddRoom(data));\r\n    this.onValueChangedAddRoom();\r\n  }\r\n\r\n  onAddRoomSubmit() {\r\n    this.newRoom = this.addRoomForm.value;\r\n    this.newRoom.hotelId = this.myHotel.id;\r\n    this.roomservice.create(this.newRoom)\r\n    .subscribe(result => {\r\n      this.openSnackBar('Added a room succesfully', 'Dismiss');\r\n    }, err => {\r\n      this.openSnackBar('Can not add that room. Check if the room number is already taken.', 'Dismiss');\r\n    });\r\n  }\r\n\r\n  onValueChangedRemoveRoom(data?: any) {\r\n    if (!this.removeRoomForm) {return; }\r\n    const form = this.removeRoomForm;\r\n    for (const field in this.removeRoomFormErrors){\r\n      if (this.removeRoomFormErrors.hasOwnProperty(field)){\r\n        this.removeRoomFormErrors[field] = '';\r\n        const control = form.get(field);\r\n        if (control && !control.valid) {\r\n          const messages = this.removeRoomFormValidationMessages[field];\r\n          for (const key in control.errors){\r\n            if (control.errors.hasOwnProperty(key)){\r\n              this.removeRoomFormErrors[field] += messages[key] + ' ';\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  createRemoveRoomForm() {\r\n    this.removeRoomForm = this.fb.group({\r\n      'number': [0, [Validators.required, Validators.min(1)]],\r\n    });\r\n    this.removeRoomForm.valueChanges\r\n    .subscribe(data => this.onValueChangedRemoveRoom(data));\r\n    this.onValueChangedRemoveRoom();\r\n  }\r\n\r\n  onRemoveRoomSubmit() {\r\n    this.toRemoveRoomNumber = this.removeRoomForm.value.number;\r\n    this.hotelservice.getRooms(this.myHotel.id, {where : {number: this.toRemoveRoomNumber}})\r\n    .subscribe(result => {\r\n      if (result.length !== 0)  {\r\n        this.roomservice.deleteById(result[0].id)\r\n          .subscribe(result1 => {\r\n            this.openSnackBar('Removed succesfully', 'Dismiss');\r\n          }, err => {\r\n            this.openSnackBar('Can not remove the room. It either does not exist or has a reservation in the future', 'Dismiss');\r\n          });\r\n      } else  {\r\n        this.openSnackBar('Can not remove the room. It either does not exist or has a reservation in the future', 'Dismiss');\r\n      }\r\n    }, err => {\r\n      this.openSnackBar('Can not remove the room. It either does not exist or has a reservation in the future', 'Dismiss');\r\n    });\r\n  }\r\n\r\n  onValueChangedGetRoom(data?: any) {\r\n    if (!this.getRoomForm) {return; }\r\n    const form = this.getRoomForm;\r\n    for (const field in this.getRoomFormErrors){\r\n      if (this.getRoomFormErrors.hasOwnProperty(field)){\r\n        this.getRoomFormErrors[field] = '';\r\n        const control = form.get(field);\r\n        if (control && !control.valid) {\r\n          const messages = this.getRoomFormValidationMessages[field];\r\n          for (const key in control.errors){\r\n            if (control.errors.hasOwnProperty(key)){\r\n              this.getRoomFormErrors[field] += messages[key] + ' ';\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  createGetRoomForm() {\r\n    this.getRoomForm = this.fb.group({\r\n      'number': [0, [Validators.required, Validators.min(1)]],\r\n    });\r\n    this.getRoomForm.valueChanges\r\n    .subscribe(data => this.onValueChangedGetRoom(data));\r\n    this.onValueChangedGetRoom();\r\n  }\r\n\r\n  onGetRoomSubmit() {\r\n    this.toGetRoomNumber = this.getRoomForm.value.number;\r\n    this.hotelservice.getRooms(this.myHotel.id, {where : {number: this.toGetRoomNumber}})\r\n    .subscribe(result => {\r\n      if (result.length !== 0) {\r\n        this.modifiedRoom = result[0];\r\n        this.setValueModifyRoomForm();\r\n      }\r\n    });\r\n  }\r\n\r\n  onValueChangedModifyRoom(data?: any) {\r\n    if (!this.modifyRoomForm) {return; }\r\n    const form = this.modifyRoomForm;\r\n    for (const field in this.modifyRoomFormErrors)  {\r\n      if (this.modifyRoomFormErrors.hasOwnProperty(field))  {\r\n        this.modifyRoomFormErrors[field] = '';\r\n        const control = form.get(field);\r\n        if (control && !control.valid) {\r\n          const messages = this.modifyRoomFormValidationMessages[field];\r\n          for (const key in control.errors)  {\r\n            if (control.errors.hasOwnProperty(key))  {\r\n              this.modifyRoomFormErrors[field] += messages[key] + ' ';\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  createModifyRoomForm() {\r\n    this.modifyRoomForm = this.fb.group({\r\n      'number': [0, [Validators.required, Validators.min(1)]],\r\n      'beds': [0, [Validators.required, Validators.min(1)]],\r\n      'description': '',\r\n      'hotelId': '',\r\n      'id': ''\r\n    });\r\n    this.modifyRoomForm.valueChanges\r\n    .subscribe(data => this.onValueChangedModifyRoom(data));\r\n    this.onValueChangedModifyRoom();\r\n  }\r\n\r\n  setValueModifyRoomForm() {\r\n    this.modifyRoomForm.setValue({\r\n      'number': this.modifiedRoom.number,\r\n      'beds' : this.modifiedRoom.beds,\r\n      'description' : this.modifiedRoom.description,\r\n      'hotelId': this.modifiedRoom.hotelId,\r\n      'id': this.modifiedRoom.id\r\n    });\r\n  }\r\n\r\n  onModifyRoomSubmit() {\r\n    this.modifiedRoom = this.modifyRoomForm.value;\r\n    this.roomservice.updateAttributes(this.modifiedRoom.id, this.modifiedRoom)\r\n    .subscribe(result => {\r\n      this.openSnackBar('Modified room succesfully', 'Dismiss');\r\n    }, err => {\r\n      this.openSnackBar('Can not modify the room. Check if the new room number is taken', 'Dismiss');\r\n    });\r\n  }\r\n\r\n  onValueChangedAddSpecialOffer(data?: any) {\r\n    if (!this.addSpecialOfferForm) {return; }\r\n    const form = this.addSpecialOfferForm;\r\n    //  const errors = this.addSpecialOfferFormErrors;\r\n    for (const field in this.addSpecialOfferFormErrors)  {\r\n      if (this.addSpecialOfferFormErrors.hasOwnProperty(field))  {\r\n        this.addSpecialOfferFormErrors[field] = '';\r\n        const control = form.get(field);\r\n        if (control && !control.valid) {\r\n          const messages = this.addSpecialOfferFormValidationMessages[field];\r\n          for (const key in control.errors)  {\r\n            if (control.errors.hasOwnProperty(key))  {\r\n              this.addSpecialOfferFormErrors[field] += messages[key] + ' ';\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  createAddSpecialOfferForm() {\r\n    this.addSpecialOfferForm = this.fb.group({\r\n      'name': ['', [Validators.required]],\r\n      'price': [0, [Validators.required, Validators.min(1)]]\r\n    });\r\n    this.addSpecialOfferForm.valueChanges\r\n      .subscribe(data => this.onValueChangedAddSpecialOffer(data));\r\n    this.onValueChangedAddSpecialOffer();\r\n  }\r\n\r\n  onAddSpecialOfferSubmit()  {\r\n    const specialOffer = this.addSpecialOfferForm.value;\r\n    this.specialofferservice.create({\r\n      'name': specialOffer.name,\r\n      'price' : specialOffer.price,\r\n      'hotelId' : this.myHotel.id\r\n    }).subscribe((result: HotelSpecialOffer) => {\r\n      this.myHotel.hotelSpecialOffers.push(result);\r\n      this.tableSpecialOffers.renderRows();\r\n      this.openSnackBar('Created a special offer succesfully', 'Dismiss');;\r\n    }, err => {\r\n      this.openSnackBar('Can not add this special offer. Check if an offer with that name already exists', 'Dismiss');\r\n    });\r\n  }\r\n\r\n  modifyButton() {\r\n    this.modifyActive = true;\r\n    this.addRoomActive = false;\r\n    this.removeRoomActive = false;\r\n    this.modifyRoomActive = false;\r\n    this.addSpecialOfferActive = false;\r\n  }\r\n\r\n  addRoomButton() {\r\n    this.modifyActive = false;\r\n    this.addRoomActive = true;\r\n    this.removeRoomActive = false;\r\n    this.modifyRoomActive = false;\r\n    this.addSpecialOfferActive = false;\r\n  }\r\n\r\n  removeRoomButton() {\r\n    this.modifyActive = false;\r\n    this.addRoomActive = false;\r\n    this.removeRoomActive = true;\r\n    this.modifyRoomActive = false;\r\n    this.addSpecialOfferActive = false;\r\n  }\r\n\r\n  modifyRoomButton() {\r\n    this.modifyActive = false;\r\n    this.addRoomActive = false;\r\n    this.removeRoomActive = false;\r\n    this.modifyRoomActive = true;\r\n    this.addSpecialOfferActive = false;\r\n  }\r\n\r\n  addSpecialOfferButton() {\r\n    this.modifyActive = false;\r\n    this.addRoomActive = false;\r\n    this.removeRoomActive = false;\r\n    this.modifyRoomActive = false;\r\n    this.addSpecialOfferActive = true;\r\n  }\r\n}\r\n","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\r\\n  <a mat-button (click) = \\\"addButton()\\\" *ngIf=\\\"userType==='admin'\\\"> Add</a>\\r\\n  <a mat-button (click) = \\\"searchButton()\\\" *ngIf=\\\"userType!='admin'\\\"> Search </a>\\r\\n  <a mat-button (click) = \\\"searchRoomsButton()\\\" *ngIf=\\\"userType!='admin'\\\"> Rooms </a>\\r\\n  <a mat-button (click) = \\\"quickReservationButton()\\\" *ngIf=\\\"userType!='admin'\\\"> Quick reservation </a>\\r\\n  <span class=\\\"flex-spacer\\\"></span>\\r\\n</mat-toolbar>\\r\\n<mat-autocomplete #auto=\\\"matAutocomplete\\\">\\r\\n  <mat-option *ngFor=\\\"let location of filteredLocationsStrings\\\" [value]=\\\"location\\\">{{location}}</mat-option>\\r\\n</mat-autocomplete>\\r\\n<div *ngIf = \\\"addActive&&userType==='admin'\\\">\\r\\n  <div class=\\\"container\\\"\\r\\n    fxLayout=\\\"column\\\"\\r\\n    fxLayoutGap=\\\"10px\\\">\\r\\n\\r\\n    <div fxFlex>\\r\\n      <div>\\r\\n          <h3>Add a hotel</h3>\\r\\n          <hr>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div fxFlex class=\\\"form-size\\\">\\r\\n      <form novalidate [formGroup]=\\\"hotelForm\\\" #fformAdd=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n        <p>\\r\\n          <mat-form-field class=\\\"half-width\\\">\\r\\n            <input matInput formControlName=\\\"name\\\" placeholder=\\\"Hotel Name\\\" type=\\\"text\\\">\\r\\n            <mat-error *ngIf=\\\"formErrors.name\\\">\\r\\n              {{ formErrors.name }}\\r\\n            </mat-error>\\r\\n          </mat-form-field>\\r\\n        </p>\\r\\n        <p>\\r\\n          <mat-form-field>\\r\\n            <input matInput formControlName=\\\"countryCity\\\" placeholder=\\\"Location\\\" type=\\\"text\\\" [matAutocomplete]=\\\"auto\\\">\\r\\n            <mat-error *ngIf=\\\"formErrors.countryCity\\\">\\r\\n              {{ formErrors.countryCity }}\\r\\n            </mat-error>\\r\\n          </mat-form-field>\\r\\n\\r\\n        </p>\\r\\n        <p>\\r\\n          <mat-form-field class=\\\"half-width\\\">\\r\\n            <input matInput formControlName=\\\"address\\\" placeholder=\\\"Address\\\" type=\\\"text\\\">\\r\\n            <mat-error *ngIf=\\\"formErrors.address\\\">\\r\\n              {{ formErrors.address}}\\r\\n            </mat-error>\\r\\n          </mat-form-field>\\r\\n        </p>         \\r\\n        <p>\\r\\n          <mat-form-field class=\\\"full-width\\\">\\r\\n            <textarea matInput formControlName=\\\"description\\\" placeholder=\\\"Hotel description\\\" rows=5></textarea>\\r\\n          </mat-form-field>\\r\\n        </p>\\r\\n        <button type=\\\"submit\\\" mat-button class=\\\"background-primary text-floral-white\\\"\\r\\n        [disabled]=\\\"hotelForm.invalid\\\">Submit</button>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div *ngIf = \\\"removeActive\\\">\\r\\n\\r\\n</div>\\r\\n\\r\\n<div *ngIf = \\\"searchActive\\\">\\r\\n  <div class=\\\"container\\\"\\r\\n  fxLayout=\\\"column\\\"\\r\\n  fxLayoutGap=\\\"10px\\\">\\r\\n    <div fxFlex>\\r\\n      <div>\\r\\n        <form novalidate [formGroup]=\\\"searchHotelForm\\\" #fformSearchHotels=\\\"ngForm\\\" (ngSubmit)=\\\"onSearchHotelsSubmit()\\\">\\r\\n          <mat-form-field class=\\\"half-width\\\">\\r\\n            <input matInput formControlName=\\\"name\\\" placeholder=\\\"Hotel Name\\\" type=\\\"text\\\">\\r\\n          </mat-form-field>\\r\\n          <mat-form-field>\\r\\n            <input matInput formControlName=\\\"countryCity\\\" placeholder=\\\"Location\\\" type=\\\"text\\\" [matAutocomplete]=\\\"auto\\\">\\r\\n            <mat-error *ngIf=\\\"formErrors.countryCity\\\">\\r\\n              {{ formErrors.countryCity }}\\r\\n            </mat-error>\\r\\n          </mat-form-field>\\r\\n          <p>\\r\\n            <button type=\\\"submit\\\" mat-button class=\\\"background-primary text-floral-white\\\">Submit</button>\\r\\n          </p>\\r\\n          <hr>\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div fxFlex>\\r\\n      <mat-grid-list cols=\\\"3\\\" rowHeight=\\\"200px\\\">\\r\\n        <mat-grid-tile *ngFor=\\\"let hotel of hotelsFound\\\">\\r\\n          <mat-card (click)=\\\"openMap(hotel)\\\" class=\\\"pointer\\\">\\r\\n            <mat-card-content>\\r\\n              {{hotel.name}} | {{hotel.address}} | {{hotel.description}}\\r\\n            </mat-card-content>\\r\\n          </mat-card>\\r\\n        </mat-grid-tile>\\r\\n      </mat-grid-list>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"searchRoomsActive\\\">\\r\\n  <div class=\\\"container\\\"\\r\\n       fxLayout=\\\"column\\\"\\r\\n       fxLayoutGap=\\\"10px\\\">\\r\\n    <div fxFlex>\\r\\n      <div>\\r\\n        <form novalidate [formGroup]=\\\"searchRoomsForm\\\" #fformSearchRooms=\\\"ngForm\\\" (ngSubmit)=\\\"onSearchRoomsSubmit()\\\">\\r\\n          <p>\\r\\n            <mat-form-field class=\\\"half-width\\\">\\r\\n              <input matInput formControlName=\\\"startDate\\\" [matDatepicker]=\\\"myDatepicker1\\\" readonly placeholder=\\\"Start date\\\">\\r\\n              <mat-datepicker-toggle [for]=\\\"myDatepicker1\\\"></mat-datepicker-toggle>\\r\\n              <mat-datepicker #myDatepicker1></mat-datepicker>\\r\\n              <mat-error *ngIf=\\\"searchRoomsFormErrors.startDate\\\">\\r\\n                {{ searchRoomsFormErrors.startDate}}\\r\\n              </mat-error>\\r\\n            </mat-form-field>\\r\\n            <mat-form-field class=\\\"half-width\\\">\\r\\n              <input matInput formControlName=\\\"endDate\\\" [matDatepicker]=\\\"myDatepicker2\\\" readonly placeholder=\\\"End date\\\">\\r\\n              <mat-datepicker-toggle [for]=\\\"myDatepicker2\\\"></mat-datepicker-toggle>\\r\\n              <mat-datepicker #myDatepicker2></mat-datepicker>\\r\\n              <mat-error *ngIf=\\\"searchRoomsFormErrors.endDate\\\">\\r\\n                {{ searchRoomsFormErrors.endDate}}\\r\\n              </mat-error>\\r\\n            </mat-form-field>\\r\\n          </p>\\r\\n          <p>\\r\\n            <mat-form-field class=\\\"half-width\\\" style=\\\"height:50%\\\">\\r\\n              <input matInput formControlName=\\\"beds\\\" placeholder=\\\"Number of beds\\\" type=\\\"number\\\">\\r\\n              <mat-error *ngIf=\\\"searchRoomsFormErrors.beds\\\">\\r\\n                {{ searchRoomsFormErrors.beds}}\\r\\n              </mat-error>\\r\\n            </mat-form-field>\\r\\n            <mat-form-field class=\\\"half-width\\\">\\r\\n              <input matInput formControlName=\\\"price\\\" placeholder=\\\"Max price\\\" type=\\\"number\\\">\\r\\n              <mat-error *ngIf=\\\"searchRoomsFormErrors.price\\\">\\r\\n                {{ searchRoomsFormErrors.price}}\\r\\n              </mat-error>\\r\\n            </mat-form-field>\\r\\n          </p>\\r\\n          <p>\\r\\n            <mat-form-field class=\\\"half-width\\\">\\r\\n              <input matInput formControlName=\\\"name\\\" placeholder=\\\"Hotel Name\\\" type=\\\"text\\\">\\r\\n            </mat-form-field>\\r\\n            <mat-form-field>\\r\\n              <input matInput formControlName=\\\"countryCity\\\" placeholder=\\\"Location\\\" type=\\\"text\\\" [matAutocomplete]=\\\"auto\\\">\\r\\n              <mat-error *ngIf=\\\"formErrors.countryCity\\\">\\r\\n                {{ formErrors.countryCity }}\\r\\n              </mat-error>\\r\\n            </mat-form-field>\\r\\n          <p>\\r\\n            <button type=\\\"submit\\\" mat-button class=\\\"background-primary text-floral-white\\\"\\r\\n            [disabled]=\\\"searchRoomsForm.invalid\\\">Submit</button>\\r\\n          </p>\\r\\n          <hr>\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"searchDone\\\">\\r\\n  <mat-grid-list cols=\\\"3\\\" rowHeight=\\\"200px\\\">\\r\\n    <mat-grid-tile *ngFor=\\\"let room of foundRooms\\\">\\r\\n      <mat-card class=\\\"pointer\\\" (click) =\\\"clickRoom(foundRooms.indexOf(room))\\\">\\r\\n        <mat-card-content>\\r\\n          <h3>{{foundRooms.indexOf(room) + 1}}</h3>\\r\\n          Hotel: {{room.hotel}} <br>\\r\\n          Room number: {{room.room.number}} <br>\\r\\n          Room description: {{room.room.description}} <br>\\r\\n          Price/night: {{room.price}}\\r\\n        </mat-card-content>\\r\\n      </mat-card>\\r\\n    </mat-grid-tile>\\r\\n  </mat-grid-list>\\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"quickReservationActive\\\">\\r\\n  <app-room-quick-reservation></app-room-quick-reservation>\\r\\n</div>\\r\\n\"","module.exports = \".half-width {\\n  width: 25%;\\n  margin-right: 5%; }\\n\\n.full-width {\\n  width: 100%; }\\n\\n.container {\\n  width: 100%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaG90ZWxzL0Q6XFxEdXNhblxcMUZha3NcXE1SU19JU0FcXE1SU19JU0FfVGltMTJcXERhc1RyYXZlbFNpdGUvc3JjXFxhcHBcXGhvdGVsc1xcaG90ZWxzLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksVUFBVztFQUNYLGdCQUFnQixFQUFBOztBQUdwQjtFQUNJLFdBQVcsRUFBQTs7QUFHZjtFQUNJLFdBQVksRUFBQSIsImZpbGUiOiJzcmMvYXBwL2hvdGVscy9ob3RlbHMuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuaGFsZi13aWR0aHtcclxuICAgIHdpZHRoIDogMjUlO1xyXG4gICAgbWFyZ2luLXJpZ2h0OiA1JTtcclxufVxyXG5cclxuLmZ1bGwtd2lkdGh7XHJcbiAgICB3aWR0aDogMTAwJTtcclxufVxyXG5cclxuLmNvbnRhaW5lcntcclxuICAgIHdpZHRoIDogMTAwJTtcclxufVxyXG4iXX0= */\"","import { Component, OnInit, Inject, ViewChild } from '@angular/core';\r\nimport {LocationApi, LoopBackConfig, Room, RoomApi, Location} from '../shared/sdk';\r\nimport { API_VERSION } from '../shared/baseUrl';\r\nimport { HotelApi } from '../shared/sdk/services';\r\nimport { Hotel } from '../shared/sdk/models/';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport {MatDialog, MatSnackBar} from '@angular/material';\r\nimport {LoginServiceService} from '../login-service.service';\r\nimport {ItemService} from '../services/item.service';\r\nimport {Router} from '@angular/router';\r\nimport {MapComponent} from '../map/map.component';\r\nimport {count} from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-hotels',\r\n  templateUrl: './hotels.component.html',\r\n  styleUrls: ['./hotels.component.scss']\r\n})\r\nexport class HotelsComponent implements OnInit {\r\n\r\n  foundHotels: Hotel[];\r\n  foundRooms: any[];\r\n  locations = [];\r\n  filteredLocations: Location[] = [];\r\n  filteredLocationsStrings = [];\r\n  addActive = true;\r\n  removeActive = false;\r\n  searchActive = false;\r\n  searchRoomsActive = false;\r\n  quickReservationActive = false;\r\n  added = false;\r\n  searchDone = false;\r\n  userType: string;\r\n  minDate = new Date();\r\n\r\n  // form related objects\r\n  hotelForm: FormGroup;\r\n  newHotel: Hotel;\r\n  params = {};\r\n  @ViewChild('fformAdd') hotelFormDirective;\r\n\r\n  searchHotelForm: FormGroup;\r\n  searchHotelParameters;\r\n  hotelsFound: Hotel[];\r\n  @ViewChild('fformSearchHotels') searchHotelFormDirective;\r\n\r\n  searchRoomsForm: FormGroup;\r\n  @ViewChild('fformSearchRooms') searchRoomsFormDirective;\r\n\r\n  formErrors = {\r\n    'name': '',\r\n    'address': '',\r\n    'countryCity': ''\r\n  };\r\n\r\n  validationMessages = {\r\n    'name': {\r\n      'required' : 'Hotel name is required'\r\n    },\r\n    'address': {\r\n      'required' : 'Hotel address is required'\r\n    },\r\n    'countryCity': {\r\n      'required': 'Location is required',\r\n      'min': 'Location must exist'\r\n    }\r\n  };\r\n\r\n  searchHotelFormErrors = {};\r\n  searchHotelFormValidationMessages = {};\r\n\r\n  searchRoomsFormErrors = {\r\n    'startDate': '',\r\n    'endDate': '',\r\n    'beds': '',\r\n    'price': ''\r\n  };\r\n  searchRoomsFormValidationMessages = {\r\n    'startDate': {\r\n      'required': 'Start date is required',\r\n      'min': 'Start date has to be after today'\r\n    },\r\n    'endDate': {\r\n      'required': 'End date is required',\r\n      'min': 'End date has to be after today',\r\n      'max': 'End date has to be after start date'\r\n    },\r\n    'beds': {\r\n      'required': 'Number of beds is required',\r\n      'min': 'Number of beds has to be higher than 0'\r\n    },\r\n    'price': {\r\n      'min': 'Price has to be higher than 0'\r\n    }\r\n  };\r\n\r\n  constructor(@Inject('baseURL') private baseURL,\r\n    private hotelservice: HotelApi,\r\n    private roomservice: RoomApi,\r\n    private itemservice: ItemService,\r\n    private locationsservice: LocationApi,\r\n    private _router: Router,\r\n    private fb: FormBuilder,\r\n    private loginService: LoginServiceService,\r\n    public dialog: MatDialog,\r\n    public snackBar: MatSnackBar\r\n    ) {\r\n      LoopBackConfig.setBaseURL(baseURL);\r\n      LoopBackConfig.setApiVersion(API_VERSION);\r\n      this.minDate.setHours(0, 0, 0, 0);\r\n      this.createForm();\r\n      this.createSearchHotelForm();\r\n      this.createSearchRoomsForm();\r\n    this.hotelservice.find().subscribe((hotels: Hotel[]) => this.foundHotels = hotels);\r\n    this.locationsservice.find().subscribe((locations: Location[]) => {\r\n        this.locations = locations;\r\n        this.filteredLocations = this.locations;\r\n        this.fillLocationsList();\r\n      }\r\n    );\r\n    this.loginService.user.subscribe(data => {\r\n      if (data) {\r\n        this.userType = data.user.type;\r\n      }\r\n    });\r\n   }\r\n\r\n  ngOnInit() { }\r\n\r\n\r\n  private _filter(value: string): Location[] {\r\n    if (value != null) {\r\n      const filterValue = value.toLowerCase();\r\n      return this.locations.filter(location => (location.city.toLowerCase() + ', ' + location.country.toLowerCase()).includes(filterValue));\r\n    } else {\r\n      return this.locations;\r\n    }\r\n  }\r\n\r\n  openSnackBar(message: string, action: string) {\r\n    this.snackBar.open(message, action, {\r\n      duration: 2000,\r\n    });\r\n  }\r\n\r\n  fillLocationsList() {\r\n    this.filteredLocationsStrings = [];\r\n    for (const location of this.filteredLocations) {\r\n      this.filteredLocationsStrings.push(location.city + ', ' + location.country);\r\n    }\r\n  }\r\n\r\n  locationExists() {\r\n    if (this.hotelForm.value.countryCity == null) return false;\r\n    const loc = this.hotelForm.value.countryCity.split(', ');\r\n    if (loc.length !== 2) return false;\r\n    const city = loc[0];\r\n    const country = loc[1];\r\n    for (const location of this.locations){\r\n      if (location.city === city && location.country === country) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  getCityCountry(countryCity) {\r\n    countryCity = countryCity.split(', ');\r\n    if (countryCity.length !== 2) return ['', ''];\r\n    return [countryCity[0], countryCity[1]];\r\n  }\r\n\r\n  onValueChanged(data?: any)  {\r\n    if (!this.hotelForm) {return; }\r\n    const form = this.hotelForm;\r\n    this.filteredLocations = this._filter(form.value.countryCity);\r\n    this.fillLocationsList();\r\n    if (!this.locationExists()) {\r\n      this.formErrors['countryCity'] += this.validationMessages['countryCity']['min'];\r\n      this.hotelForm.controls['countryCity'].setErrors({'min' : true});\r\n    }\r\n    for (const field in this.formErrors)  {\r\n      if (this.formErrors.hasOwnProperty(field))  {\r\n        this.formErrors[field] = '';\r\n        const control = form.get(field);\r\n        if (control && !control.valid) {\r\n          const messages = this.validationMessages[field];\r\n          for (const key in control.errors)  {\r\n            if (control.errors.hasOwnProperty(key))  {\r\n              this.formErrors[field] += messages[key] + ' ';\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  createForm() {\r\n    this.hotelForm = this.fb.group({\r\n      'name': ['', Validators.required],\r\n      'address': ['', Validators.required],\r\n      'countryCity': ['', Validators.required],\r\n      'description': ''\r\n    });\r\n\r\n    this.hotelForm.valueChanges\r\n      .subscribe(data => this.onValueChanged(data));\r\n    this.onValueChanged();\r\n  }\r\n\r\n  onSubmit() {\r\n    const hotel = this.hotelForm.value;\r\n    const countryCity = hotel.countryCity.split(', ');\r\n    let country = '';\r\n    let city = '';\r\n    if (countryCity.length === 2) {\r\n      country = countryCity[1];\r\n      city = countryCity[0];\r\n    }\r\n    this.newHotel = this.hotelForm.value;\r\n    this.locationsservice.find({where: {city: city, country: country}})\r\n      .subscribe((locations: Location[]) => {\r\n        if (locations.length > 0) {\r\n          const location = locations[0];\r\n          this.newHotel.locationId = location.id;\r\n        }\r\n        delete this.newHotel['countryCity'];\r\n        this.newHotel.myuserId = '';\r\n        this.hotelservice.create(this.newHotel)\r\n          .subscribe(result =>  {\r\n            this.hotelForm.reset({\r\n              name: '',\r\n              address: '',\r\n              description: '',\r\n              countryCity: ''\r\n            });\r\n            this.hotelFormDirective.resetForm();\r\n            this.openSnackBar('Added a hotel succesfully', 'Dismiss');\r\n          }, err =>  {\r\n            this.openSnackBar('Can not add this hotel. Check if the name is already taken', 'Dismiss');\r\n          });\r\n      }, err => {\r\n        this.openSnackBar('Can not add this hotel. Check if the name is already taken', 'Dismiss');\r\n      });\r\n  }\r\n\r\n\r\n  onValueChangedSearchHotels(data?: any)  {\r\n    if (!this.searchHotelForm) {return; }\r\n    const form = this.searchHotelForm;\r\n    this.filteredLocations = this._filter(form.value.countryCity);\r\n    this.fillLocationsList();\r\n    for (const field in this.searchHotelFormErrors)  {\r\n      if (this.searchHotelFormErrors.hasOwnProperty(field))  {\r\n        this.searchHotelFormErrors[field] = '';\r\n        const control = form.get(field);\r\n        if (control && !control.valid) {\r\n          const messages = this.searchHotelFormValidationMessages[field];\r\n          for (const key in control.errors)  {\r\n            if (control.errors.hasOwnProperty(key))  {\r\n              this.searchHotelFormErrors[field] += messages[key] + ' ';\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  createSearchHotelForm() {\r\n    this.searchHotelForm = this.fb.group({\r\n      'name': '',\r\n      'countryCity': ''\r\n    });\r\n\r\n    this.searchHotelForm.valueChanges\r\n      .subscribe(data => this.onValueChangedSearchHotels(data));\r\n    this.onValueChangedSearchHotels();\r\n  }\r\n\r\n  onSearchHotelsSubmit() {\r\n    this.searchHotelParameters = this.searchHotelForm.value;\r\n    this.params = {};\r\n    if (this.searchHotelParameters.name != '' && this.searchHotelParameters.name != undefined){\r\n      this.params['name'] = this.searchHotelParameters.name;\r\n    }\r\n    let city = '';\r\n    let country = '';\r\n    if (this.searchHotelParameters.countryCity != '' && this.searchHotelParameters.countryCity != undefined) {\r\n      const countryCity = this.getCityCountry(this.searchHotelParameters.countryCity);\r\n      city = countryCity[0];\r\n      country = countryCity[1];\r\n    }\r\n    if (this.params !== {})  {\r\n      this.hotelservice.find({where : this.params, include: {relation: 'location', scope: {where: {city: {like: '/*' + city + '/*', country: {like: '.*' + country + '.*'}}}}}})\r\n      .subscribe((result: Hotel[]) =>  {\r\n        if (city === '') {\r\n          this.hotelsFound = result;\r\n        } else {\r\n          this.hotelsFound = [];\r\n          for (const hotel of result) {\r\n            if (hotel.hasOwnProperty('location')) {\r\n              this.hotelsFound.push(hotel);\r\n            }\r\n          }\r\n        }\r\n      }, err => {\r\n        this.openSnackBar('Something went wrong. Please try again', 'Dismiss');\r\n      });\r\n    } else{\r\n      this.hotelservice.find({include: {relation: 'location', scope: {where: {city: {like: '/*' + city + '/*', country: {like: '.*' + country + '.*'}}}}}})\r\n      .subscribe((result: Hotel[]) =>  {\r\n        if (city === '') {\r\n          this.hotelsFound = result;\r\n        } else {\r\n          this.hotelsFound = [];\r\n          for (const hotel of result) {\r\n            if (hotel.hasOwnProperty('location')) {\r\n              this.hotelsFound.push(hotel);\r\n            }\r\n          }\r\n        }\r\n      }, err => {\r\n        this.openSnackBar('Something went wrong. Please try again', 'Dismiss');\r\n      });\r\n    }\r\n  }\r\n\r\n  onValueChangedSearchRooms(data?: any)  {\r\n    if (!this.searchRoomsForm) {return; }\r\n    const form = this.searchRoomsForm;\r\n    this.filteredLocations = this._filter(form.value.countryCity);\r\n    this.fillLocationsList();\r\n    for (const field in this.searchRoomsFormErrors) {\r\n      if (this.searchRoomsFormErrors.hasOwnProperty(field)) {\r\n        this.searchRoomsFormErrors[field] = '';\r\n        const control = form.get(field);\r\n        if (control && !control.valid) {\r\n          const messages = this.searchRoomsFormValidationMessages[field];\r\n          for (const key in control.errors) {\r\n            if (control.errors.hasOwnProperty(key)) {\r\n              this.searchRoomsFormErrors[field] += messages[key] + ' ';\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    const startDate = form.get('startDate').value;\r\n    const endDate = form.get('endDate').value;\r\n    if (startDate < this.minDate) {\r\n      this.searchRoomsFormErrors['startDate'] += this.searchRoomsFormValidationMessages['startDate']['min'] + ' ';\r\n      this.searchRoomsForm.controls['startDate'].setErrors({'min' : true});\r\n    }\r\n    if (endDate < this.minDate) {\r\n      this.searchRoomsFormErrors['endDate'] += this.searchRoomsFormValidationMessages['endDate']['min'] + ' ';\r\n      this.searchRoomsForm.controls['endDate'].setErrors({'min' : true});\r\n    }\r\n    if (endDate <= startDate)  {\r\n      this.searchRoomsFormErrors['endDate'] += this.searchRoomsFormValidationMessages['endDate']['max'] + ' ';\r\n      this.searchRoomsForm.controls['endDate'].setErrors({'max' : true});\r\n    }\r\n  }\r\n\r\n  createSearchRoomsForm() {\r\n    this.searchRoomsForm = this.fb.group({\r\n      startDate: [this.minDate, [Validators.required]],\r\n      endDate: [this.minDate, [Validators.required]],\r\n      beds : [0, [Validators.required, Validators.min(1)]],\r\n      price: [0, Validators.min(1)],\r\n      countryCity: '',\r\n      name: ''\r\n    });\r\n\r\n    this.searchRoomsForm.valueChanges\r\n      .subscribe(data => this.onValueChangedSearchRooms(data));\r\n    this.onValueChangedSearchRooms();\r\n  }\r\n\r\n  onSearchRoomsSubmit() {\r\n    const data = this.searchRoomsForm.value;\r\n    const countryCity = this.getCityCountry(data.countryCity);\r\n    const city = countryCity[0];\r\n    const country = countryCity[1];\r\n    this.itemservice.findAvailableRooms1(new Date(data.startDate), new Date(data.endDate),\r\n      '', data.price, data.beds)\r\n      .subscribe(result => {\r\n        if (city === '') {\r\n          this.foundRooms = result.retval;\r\n        } else {\r\n          this.foundRooms = [];\r\n          for (const room of result.retval) {\r\n            this.hotelservice.findById(room.hotelId, {include: 'location'})\r\n              .subscribe(hotel => {\r\n                if (hotel.hasOwnProperty('location')) {\r\n                  // @ts-ignore\r\n                  if (hotel.location.city === city && hotel.location.country === country) {\r\n                    this.foundRooms.push(room);\r\n                  }\r\n                }\r\n              }, err => this.openSnackBar('Something went wrong. Please try again', 'Dismiss'));\r\n          }\r\n        }\r\n        this.searchDone = true;\r\n        this.searchRoomsActive = false;\r\n      }, err => {\r\n        this.openSnackBar('Something went wrong. Please try again', 'Dismiss');\r\n      });\r\n  }\r\n\r\n  clickRoom(index: number) {\r\n    this.itemservice.setReservableRoom({'room': this.foundRooms[index],\r\n    'startDate': this.searchRoomsForm.value.startDate,\r\n    'endDate': this.searchRoomsForm.value.endDate});\r\n\r\n    this._router.navigate(['/roomreservation']);\r\n  }\r\n\r\n  addButton()  {\r\n    this.addActive = true;\r\n    this.removeActive = false;\r\n    this.searchActive = false;\r\n    this.searchRoomsActive = false;\r\n    this.searchDone = false;\r\n    this.quickReservationActive = false;\r\n  }\r\n\r\n  removeButton()  {\r\n    this.addActive = false;\r\n    this.removeActive = true;\r\n    this.searchActive = false;\r\n    this.searchRoomsActive = false;\r\n    this.searchDone = false;\r\n    this.quickReservationActive = false;\r\n  }\r\n\r\n  searchButton()  {\r\n    this.addActive = false;\r\n    this.removeActive = false;\r\n    this.searchActive = true;\r\n    this.searchRoomsActive = false;\r\n    this.searchDone = false;\r\n    this.quickReservationActive = false;\r\n  }\r\n\r\n  searchRoomsButton()  {\r\n    this.addActive = false;\r\n    this.removeActive = false;\r\n    this.searchActive = false;\r\n    this.searchRoomsActive = true;\r\n    this.searchDone = false;\r\n    this.quickReservationActive = false;\r\n  }\r\n\r\n  quickReservationButton() {\r\n    this.addActive = false;\r\n    this.removeActive = false;\r\n    this.searchActive = false;\r\n    this.searchRoomsActive = false;\r\n    this.searchDone = false;\r\n    this.quickReservationActive = true;\r\n  }\r\n\r\n  openMap(hotel: Hotel) {\r\n    this.dialog.open(MapComponent, {width: '80%', height: '80%', data: {lat: hotel.latitude, lng: hotel.longitude}});\r\n  }\r\n}\r\n","module.exports = \"<div fxFlex>\\r\\n  <mat-grid-list cols=\\\"3\\\" rowHeight=\\\"200px\\\">\\r\\n    <mat-grid-tile *ngFor=\\\"let branch of foundBranches\\\">\\r\\n      <mat-card class=\\\"pointer\\\">\\r\\n        Name: {{branch.name}} <br>\\r\\n        Address: {{branch.address}} <br>\\r\\n      </mat-card>\\r\\n    </mat-grid-tile>\\r\\n  </mat-grid-list>\\r\\n</div>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xpc3QtYnJhbmNoZXMvbGlzdC1icmFuY2hlcy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { BranchApi } from '../shared/sdk';\r\nimport { ItemService } from '../services/item.service';\r\n\r\n@Component({\r\n  selector: 'app-list-branches',\r\n  templateUrl: './list-branches.component.html',\r\n  styleUrls: ['./list-branches.component.scss']\r\n})\r\nexport class ListBranchesComponent implements OnInit {\r\n\r\n  foundBranches;\r\n\r\n  constructor(private branchService: BranchApi,\r\n    private itemService: ItemService) {\r\n    this.branchService.find({where: {rentalServiceId: this.itemService.getServiceId()}})\r\n    .subscribe(\r\n      (result) => {\r\n        this.foundBranches = result;\r\n      },\r\n      (err) => {\r\n        console.log(\"Failed to retrieve branches\");\r\n      }\r\n    )\r\n   }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"<div fxFlex>\\r\\n  <mat-grid-list cols=\\\"3\\\" rowHeight=\\\"200px\\\">\\r\\n    <mat-grid-tile *ngFor=\\\"let discount of foundDiscounts\\\">\\r\\n      <mat-card id={{discount.nmbr}} (click)=\\\"inspect($event)\\\" class=\\\"pointer\\\">\\r\\n        Registration: {{discount.registration}} <br>\\r\\n        Start date: {{discount.startDate}} <br>\\r\\n        End date: {{discount.endDate}} <br>\\r\\n        Total days: {{discount.days}} <br>\\r\\n        Total price without discount: {{discount.total}} <br>\\r\\n        Discount: {{discount.discount}} <br>\\r\\n        Total price with discount: {{discount.totalDiscounted}} <br>\\r\\n      </mat-card>\\r\\n    </mat-grid-tile>\\r\\n  </mat-grid-list>\\r\\n</div>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xpc3QtY2FyLWRpc2NvdW50cy9saXN0LWNhci1kaXNjb3VudHMuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { CarSpecialOfferApi, LoopBackConfig, CarSpecialOffer, CarApi } from '../shared/sdk';\r\nimport { baseURL, API_VERSION } from '../shared/baseUrl';\r\nimport { MatSnackBar } from '@angular/material';\r\nimport { ItemService } from '../services/item.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-list-car-discounts',\r\n  templateUrl: './list-car-discounts.component.html',\r\n  styleUrls: ['./list-car-discounts.component.scss']\r\n})\r\nexport class ListCarDiscountsComponent implements OnInit {\r\n\r\n\r\n  foundDiscounts;\r\n\r\n  constructor(@Inject('baseURL') private baseURL,\r\n  private carDiscountService: CarSpecialOfferApi,\r\n  public snackBar: MatSnackBar,\r\n  private carService: CarApi,\r\n  private itemService:ItemService,\r\n  private _router: Router) { \r\n    LoopBackConfig.setBaseURL(baseURL);\r\n    LoopBackConfig.setApiVersion(API_VERSION);\r\n    this.carDiscountService.find({})\r\n    .subscribe(\r\n      (result) => {\r\n        var i = 0;\r\n        for (let mini_result of result) {\r\n          var temp = mini_result as any;\r\n          temp.nmbr = i;\r\n          i++;\r\n          var oneDay = 24*60*60*1000; // hours*minutes*seconds*milliseconds\r\n          temp.startDate = new Date(temp.startDate);\r\n          temp.endDate = new Date(temp.endDate);\r\n          temp.days = 1 + Math.round(Math.abs((temp.startDate.getTime() - temp.endDate.getTime())/(oneDay)));\r\n          temp.startDate = temp.startDate.toLocaleDateString(\"en-US\");\r\n          temp.endDate = temp.endDate.toLocaleDateString(\"en-US\");\r\n          temp.total = temp.basePrice;\r\n          temp.totalDiscounted = Math.round((100 - temp.discount) / 100 * temp.total);\r\n        }\r\n        this.foundDiscounts = result;\r\n      },\r\n      (err) => {\r\n        this.openSnackBar(\"Could not retrieve discounts\", \"Dismiss\");\r\n      }\r\n    )\r\n    \r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  openSnackBar(message: string, action: string) {\r\n    this.snackBar.open(message, action, {\r\n       duration: 2000,\r\n    });\r\n  }\r\n\r\n  inspect(clicked_card: any) {\r\n    var discount_index = clicked_card.path[0].id;\r\n    this.itemService.setCarSpecialOffer(this.foundDiscounts[discount_index]);\r\n    this._router.navigate(['/reserveCarSpecial']);\r\n\r\n  }\r\n\r\n}\r\n","module.exports = \"<div fxFlex>\\r\\n  <mat-grid-list cols=\\\"3\\\" rowHeight=\\\"200px\\\">\\r\\n    <mat-grid-tile *ngFor=\\\"let car of foundCars\\\">\\r\\n      <mat-card class=\\\"pointer\\\">\\r\\n        Registration: {{car.registration}} <br>\\r\\n        Make:  {{car.make}} <br>\\r\\n        Seats:  {{car.seats}} <br>\\r\\n        Category:  {{car.category}}\\r\\n      </mat-card>\\r\\n    </mat-grid-tile>\\r\\n  </mat-grid-list>\\r\\n</div>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xpc3QtY2Fycy1hZG1pbi9saXN0LWNhcnMtYWRtaW4uY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { ItemService } from '../services/item.service';\r\nimport { CarApi } from '../shared/sdk';\r\n\r\n@Component({\r\n  selector: 'app-list-cars-admin',\r\n  templateUrl: './list-cars-admin.component.html',\r\n  styleUrls: ['./list-cars-admin.component.scss']\r\n})\r\nexport class ListCarsAdminComponent implements OnInit {\r\n\r\n\r\n  foundCars;\r\n\r\n  constructor(private itemService: ItemService,\r\n    private carService: CarApi) {\r\n      this.carService.find({where: {rentalServiceId: this.itemService.getServiceId()}})\r\n      .subscribe(\r\n        (result) => {\r\n          this.foundCars = result;\r\n        },\r\n        (err) => {\r\n          console.log(err);\r\n        }\r\n      )\r\n     }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\\r\\n  <div fxFlex>\\r\\n    <mat-grid-list cols=\\\"3\\\" rowHeight=\\\"200px\\\">\\r\\n      <mat-grid-tile *ngFor=\\\"let service of foundServices\\\">\\r\\n        <mat-card class=\\\"pointer\\\" (click)=\\\"openMap(service)\\\">\\r\\n          {{service.name}} <br>\\r\\n          {{service.address}} <br>\\r\\n          {{service.description}} <br>\\r\\n          {{service.rating}}\\r\\n        </mat-card>\\r\\n      </mat-grid-tile>\\r\\n    </mat-grid-list>\\r\\n  </div>\\r\\n\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xpc3RhbGxzZXJ2aWNlcy9saXN0YWxsc2VydmljZXMuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { RentalServiceApi, RentalService, LoopBackConfig } from '../shared/sdk';\r\nimport {MatDialog, MatSnackBar} from '@angular/material';\r\nimport { API_VERSION } from '../shared/baseUrl';\r\nimport {MapComponent} from '../map/map.component';\r\n\r\n@Component({\r\n  selector: 'app-listallservices',\r\n  templateUrl: './listallservices.component.html',\r\n  styleUrls: ['./listallservices.component.scss']\r\n})\r\nexport class ListallservicesComponent implements OnInit {\r\n\r\n  constructor(@Inject('baseURL') private baseURL,\r\n  private rentalServiceService: RentalServiceApi,\r\n  public dialog: MatDialog,\r\n  public snackBar: MatSnackBar) { \r\n    LoopBackConfig.setBaseURL(baseURL);\r\n    LoopBackConfig.setApiVersion(API_VERSION);\r\n    this.rentalServiceService.find()\r\n    .subscribe(\r\n      (result) => {\r\n        this.foundServices = result as RentalService[];\r\n      },\r\n      (err) => {\r\n        this.openSnackBar(\"Failed to retrieve rental services\", \"Dismiss\");\r\n      }\r\n    )\r\n  }\r\n\r\n  foundServices: RentalService[];\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  openSnackBar(message: string, action: string) {\r\n    this.snackBar.open(message, action, {\r\n       duration: 2000,\r\n    });\r\n  }\r\n\r\n  openMap(service) {\r\n    this.dialog.open(MapComponent, {width: '80%', height: '80%', data: {lat: service.latitude, lng: service.longitude}});\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"container\\\"\\r\\n     fxLayout=\\\"column\\\"\\r\\n     fxLayoutGap=\\\"10px\\\">\\r\\n\\r\\n  <div fxFlex>\\r\\n    <div>\\r\\n      <h3>Add a location</h3>\\r\\n      <hr>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div fxFlex class=\\\"form-size\\\">\\r\\n    <form novalidate [formGroup]=\\\"addLocationForm\\\" #fformAddLocation=\\\"ngForm\\\" (ngSubmit)=\\\"onAddLocationSubmit()\\\">\\r\\n      <p>\\r\\n        <mat-form-field class=\\\"half-width\\\">\\r\\n          <input matInput formControlName=\\\"country\\\" placeholder=\\\"Country\\\" type=\\\"text\\\">\\r\\n          <mat-error *ngIf=\\\"addLocationFormErrors.country\\\">\\r\\n            {{ addLocationFormErrors.country }}\\r\\n          </mat-error>\\r\\n        </mat-form-field>\\r\\n      </p>\\r\\n      <p>\\r\\n        <mat-form-field class=\\\"half-width\\\">\\r\\n          <input matInput formControlName=\\\"city\\\" placeholder=\\\"City\\\" type=\\\"text\\\">\\r\\n          <mat-error *ngIf=\\\"addLocationFormErrors.city\\\">\\r\\n            {{ addLocationFormErrors.city}}\\r\\n          </mat-error>\\r\\n        </mat-form-field>\\r\\n      </p>\\r\\n      <button type=\\\"submit\\\" mat-button class=\\\"background-primary text-floral-white\\\"\\r\\n              [disabled]=\\\"addLocationForm.invalid\\\">Submit</button>\\r\\n    </form>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvY2F0aW9ucy9sb2NhdGlvbnMuY29tcG9uZW50LnNjc3MifQ== */\"","import {Component, Inject, OnInit, ViewChild} from '@angular/core';\r\nimport {LocationApi} from '../shared/sdk/services/custom';\r\nimport {MatSnackBar} from '@angular/material';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-locations',\r\n  templateUrl: './locations.component.html',\r\n  styleUrls: ['./locations.component.scss']\r\n})\r\nexport class LocationsComponent implements OnInit {\r\n\r\n  addLocationForm: FormGroup;\r\n  @ViewChild('fformAddLocation') addLocationFormDirective;\r\n\r\n  addLocationFormErrors = {\r\n    'country': '',\r\n    'city': ''\r\n  };\r\n\r\n  addLocationValidationMessages = {\r\n    'country': {\r\n      'required' : 'Country is required'\r\n    },\r\n    'city': {\r\n      'required' : 'City is required'\r\n    }\r\n  };\r\n\r\n  constructor(@Inject('baseURL') private baseURL,\r\n              private locationsservice: LocationApi,\r\n              private fb: FormBuilder,\r\n              public snackBar: MatSnackBar) {\r\n    this.createAddLocationForm();\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  openSnackBar(message: string, action: string) {\r\n    this.snackBar.open(message, action, {\r\n      duration: 2000,\r\n    });\r\n  }\r\n\r\n  onAddLocationValueChanged(data?: any)  {\r\n    if (!this.addLocationForm) {return; }\r\n    const form = this.addLocationForm;\r\n    for (const field in this.addLocationFormErrors)  {\r\n      if (this.addLocationFormErrors.hasOwnProperty(field))  {\r\n        this.addLocationFormErrors[field] = '';\r\n        const control = form.get(field);\r\n        if (control && !control.valid) {\r\n          const messages = this.addLocationValidationMessages[field];\r\n          for (const key in control.errors)  {\r\n            if (control.errors.hasOwnProperty(key))  {\r\n              this.addLocationFormErrors[field] += messages[key] + ' ';\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  createAddLocationForm() {\r\n    this.addLocationForm = this.fb.group({\r\n      'country': ['', Validators.required],\r\n      'city': ['', Validators.required],\r\n    });\r\n\r\n    this.addLocationForm.valueChanges\r\n      .subscribe(data => this.onAddLocationValueChanged(data));\r\n    this.onAddLocationValueChanged();\r\n  }\r\n\r\n  onAddLocationSubmit() {\r\n    const country = this.addLocationForm.value.country;\r\n    const city = this.addLocationForm.value.city;\r\n    this.locationsservice.create({'country': country, 'city': city})\r\n      .subscribe(result =>  {\r\n        this.addLocationForm.reset({\r\n          country: '',\r\n          city: ''\r\n        });\r\n        this.addLocationFormDirective.resetForm();\r\n        this.openSnackBar('Added a location succesfully', 'Dismiss');\r\n      }, err =>  {\r\n        this.openSnackBar('Can not add this location. Maybe it already exists', 'Dismiss');\r\n      });\r\n\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {BehaviorSubject, Observable} from 'rxjs';\r\nimport {Hotel, Myuser} from './shared/sdk/models';\r\nimport {RentalService} from './shared/sdk/models';\r\nimport {HotelApi, RentalServiceApi} from './shared/sdk';\r\nimport { ItemService } from './services/item.service';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoginServiceService {\r\n  observableUser = new BehaviorSubject<any>(null);\r\n  public user: Observable<any>;\r\n  constructor(private rentalServiceService: RentalServiceApi,\r\n    private hotelservice: HotelApi,\r\n    private itemService: ItemService) {\r\n    this.user = this.observableUser.asObservable();\r\n    this.user.subscribe((result) => {\r\n      if (result == null) return;\r\n      if (result.user.type === \"rentalServiceAdmin\") {\r\n        this.rentalServiceService.findOne({where: {myuserId: result.user.id}})\r\n        .subscribe(\r\n          (result)=> {\r\n            this.itemService.setServiceId((result as RentalService).id);\r\n          },\r\n          (err) => {\r\n            console.log(err);\r\n          })\r\n      }\r\n      if (result.user.type === \"hotelAdmin\") {\r\n        this.hotelservice.findOne({where: {myuserId: result.user.id}})\r\n          .subscribe((resultHotel: Hotel) => {\r\n            this.itemService.setHotelId(resultHotel.id);\r\n          }, (err) => console.log());\r\n      }\r\n    });\r\n  }\r\n}\r\n","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\r\\n  Log in\\r\\n  <span class=\\\"flex-spacer\\\"></span>\\r\\n  <button mat-button mat-dialog-close>&times;</button>\\r\\n</mat-toolbar>\\r\\n<form novalidate [formGroup]=\\\"loginForm\\\" #loginform=\\\"ngForm\\\" (ngSubmit)=\\\"onLoginSubmit()\\\" >\\r\\n  <p>\\r\\n  <mat-form-field class=\\\"form-size\\\">\\r\\n      <input matInput formControlName=\\\"username\\\" placeholder=\\\"Username\\\" type=\\\"text\\\">\\r\\n      <mat-error *ngIf=\\\"loginFormErrors.username\\\">\\r\\n        {{ loginFormErrors.username}}\\r\\n      </mat-error>\\r\\n  </mat-form-field>\\r\\n  </p>\\r\\n  <p>\\r\\n    <mat-form-field class=\\\"form-size\\\">\\r\\n        <input matInput formControlName=\\\"password\\\" placeholder=\\\"Password\\\" type=\\\"password\\\">\\r\\n        <mat-error *ngIf=\\\"loginFormErrors.password\\\">\\r\\n          {{ loginFormErrors.password}}\\r\\n        </mat-error>\\r\\n    </mat-form-field>\\r\\n  </p>\\r\\n  <button type=\\\"submit\\\" mat-button class=\\\"background-primary text-floral-white\\\" [disabled]=\\\"loginForm.invalid\\\">\\r\\n    Submit\\r\\n  </button>\\r\\n</form>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5zY3NzIn0= */\"","import {Component, OnInit, Inject, ViewChild} from '@angular/core';\r\nimport {LoopBackConfig} from '../shared/sdk';\r\nimport {API_VERSION} from '../shared/baseUrl';\r\nimport {MyuserApi} from '../shared/sdk/services';\r\n\r\nimport {MatDialog, MatDialogRef, MatSnackBar} from '@angular/material';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {LoginServiceService} from '../login-service.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  loginForm: FormGroup;\r\n  @ViewChild('loginform') loginFormDirective;\r\n  \r\n  constructor(@Inject('baseURL') private baseURL,\r\n              private myUserService: MyuserApi,\r\n              private loginService: LoginServiceService,\r\n              private fb: FormBuilder,\r\n              public dialogRef: MatDialogRef<LoginComponent>,\r\n              public snackBar: MatSnackBar) {\r\n    LoopBackConfig.setBaseURL(baseURL);\r\n    LoopBackConfig.setApiVersion(API_VERSION);\r\n    this.createLoginForm();\r\n  }\r\n\r\n  createLoginForm() {\r\n    this.loginForm = this.fb.group({\r\n      'username': ['', Validators.required],\r\n      'password': ['', Validators.required]\r\n    });\r\n    this.loginForm.valueChanges\r\n      .subscribe((data) => this.onLoginValueChanged(data));\r\n    this.onLoginValueChanged();\r\n  }\r\n\r\n  loginFormErrors = {\r\n    'username': '',\r\n    'password': ''\r\n  };\r\n\r\n  loginFormValidationMessages = {\r\n    'username': {\r\n      'required': 'Username is required'\r\n    },\r\n    'password': {\r\n      'required': 'Password is required'\r\n    }\r\n  };\r\n\r\n  onLoginValueChanged(data?: any) {\r\n    if (!this.loginForm) {\r\n      return;\r\n    }\r\n    const form = this.loginForm;\r\n    for (const field in this.loginFormErrors) {\r\n      if (this.loginFormErrors.hasOwnProperty(field)) {\r\n        //clear previous error message\r\n        this.loginFormErrors[field] = '';\r\n        const control = form.get(field);\r\n        if (control && !control.valid) {\r\n          const messages = this.loginFormValidationMessages[field];\r\n          for (const key in control.errors) {\r\n            if (control.errors.hasOwnProperty(key)) {\r\n              this.loginFormErrors[field] += messages[key] + ' ';\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  openSnackBar(message: string, action: string) {\r\n    this.snackBar.open(message, action, {\r\n      duration: 2000,\r\n    });\r\n  }\r\n\r\n  onLoginSubmit() {\r\n    this.myUserService.login({\r\n      'username': this.loginForm.value.username,\r\n      'password': this.loginForm.value.password\r\n    })\r\n      .subscribe((result) => {\r\n          this.dialogRef.close();\r\n          this.openSnackBar('Successfully loged in, welcome', 'Dismiss');\r\n          this.loginService.observableUser.next(result);\r\n        },\r\n        (err) => {\r\n          this.openSnackBar('Wrong credentials, try again', 'Dismiss');\r\n        });\r\n  }\r\n\r\n}\r\n","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\r\\n  Location\\r\\n  <span class=\\\"flex-spacer\\\"></span>\\r\\n  <button mat-button mat-dialog-close>&times;</button>\\r\\n</mat-toolbar>\\r\\n<agm-map [latitude]=\\\"lat\\\" [longitude]=\\\"lng\\\">\\r\\n  <agm-marker [latitude]=\\\"lat\\\" [longitude]=\\\"lng\\\"></agm-marker>\\r\\n</agm-map>\\r\\n\"","module.exports = \"agm-map {\\n  height: 80%;\\n  width: 100%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWFwL0Q6XFxEdXNhblxcMUZha3NcXE1SU19JU0FcXE1SU19JU0FfVGltMTJcXERhc1RyYXZlbFNpdGUvc3JjXFxhcHBcXG1hcFxcbWFwLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsV0FBVztFQUNYLFdBQVcsRUFBQSIsImZpbGUiOiJzcmMvYXBwL21hcC9tYXAuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJhZ20tbWFwIHtcclxuICBoZWlnaHQ6IDgwJTtcclxuICB3aWR0aDogMTAwJTtcclxufVxyXG4iXX0= */\"","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {MAT_DIALOG_DATA} from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-map',\r\n  templateUrl: './map.component.html',\r\n  styleUrls: ['./map.component.scss']\r\n})\r\nexport class MapComponent implements OnInit {\r\n  lat = 0;\r\n  lng = 0;\r\n  constructor(  @Inject(MAT_DIALOG_DATA) public data: any) { }\r\n\r\n  ngOnInit() {\r\n    this.lat = this.data.lat;\r\n    this.lng = this.data.lng;\r\n  }\r\n}\r\n","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\r\\n    Rate\\r\\n    <span class=\\\"flex-spacer\\\"></span>\\r\\n    <button mat-button mat-dialog-close>&times;</button>\\r\\n</mat-toolbar>\\r\\n<form novalidate [formGroup]=\\\"rateForm\\\" #registerform=\\\"ngForm\\\" (ngSubmit)=\\\"onRateSubmit()\\\">\\r\\n    <p>\\r\\n    <mat-form-field class=\\\"form-size\\\">\\r\\n      <mat-select formControlName=\\\"carRate\\\" placeholder=\\\"Car rating\\\">\\r\\n        <mat-option value=\\\"1\\\">\\r\\n          1\\r\\n        </mat-option>\\r\\n        <mat-option value=\\\"2\\\">\\r\\n          2\\r\\n        </mat-option>\\r\\n        <mat-option value=\\\"3\\\">\\r\\n          3\\r\\n        </mat-option>\\r\\n        <mat-option value=\\\"4\\\">\\r\\n          4\\r\\n        </mat-option>\\r\\n        <mat-option value=\\\"5\\\">\\r\\n          5\\r\\n        </mat-option>\\r\\n      </mat-select>\\r\\n      <mat-error *ngIf=\\\"rateFormErrors.carRate\\\">\\r\\n        {{ rateFormErrors.carRate }}\\r\\n      </mat-error>\\r\\n    </mat-form-field>\\r\\n    </p>\\r\\n    <p>\\r\\n      <mat-form-field class=\\\"form-size\\\">\\r\\n        <mat-select formControlName=\\\"rentalRate\\\" placeholder=\\\"Rental service rating\\\">\\r\\n          <mat-option value=\\\"1\\\">\\r\\n            1\\r\\n          </mat-option>\\r\\n          <mat-option value=\\\"2\\\">\\r\\n            2\\r\\n          </mat-option>\\r\\n          <mat-option value=\\\"3\\\">\\r\\n            3\\r\\n          </mat-option>\\r\\n          <mat-option value=\\\"4\\\">\\r\\n            4\\r\\n          </mat-option>\\r\\n          <mat-option value=\\\"5\\\">\\r\\n            5\\r\\n          </mat-option>\\r\\n        </mat-select>\\r\\n        <mat-error *ngIf=\\\"rateFormErrors.rentalRate\\\">\\r\\n          {{ rateFormErrors.rentalRate }}\\r\\n        </mat-error>\\r\\n      </mat-form-field>\\r\\n    </p>\\r\\n    <button type=\\\"submit\\\" mat-button class=\\\"background-primary text-floral-white\\\" [disabled]=\\\"rateForm.invalid\\\">\\r\\n      Submit\\r\\n    </button>\\r\\n  </form>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JhdGUtY2FyLWFuZC1zZXJ2aWNlL3JhdGUtY2FyLWFuZC1zZXJ2aWNlLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, Inject, ViewChild } from '@angular/core';\r\nimport { MyuserApi, LoopBackConfig, CarReservationApi } from '../shared/sdk';\r\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\r\nimport { MatDialogRef, MatSnackBar } from '@angular/material';\r\nimport { RegisterComponent } from '../register/register.component';\r\nimport { API_VERSION } from '../shared/baseUrl';\r\nimport { ItemService } from '../services/item.service';\r\n\r\n@Component({\r\n  selector: 'app-rate-car-and-service',\r\n  templateUrl: './rate-car-and-service.component.html',\r\n  styleUrls: ['./rate-car-and-service.component.scss']\r\n})\r\nexport class RateCarAndServiceComponent implements OnInit {\r\n\r\n\r\n  rateForm: FormGroup;\r\n  @ViewChild('rateform') rateFormDirective;\r\n\r\n  constructor(@Inject('baseURL') private baseURL,\r\n    private myUserService: MyuserApi,\r\n    private fb: FormBuilder,\r\n    public dialogRef: MatDialogRef<RateCarAndServiceComponent>,\r\n    public snackBar: MatSnackBar,\r\n    public carReservationService: CarReservationApi,\r\n    private itemService: ItemService) {\r\n      LoopBackConfig.setBaseURL(baseURL);\r\n      LoopBackConfig.setApiVersion(API_VERSION);\r\n      this.createRateForm();\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  createRateForm() {\r\n    this.rateForm = this.fb.group({\r\n      'carRate': ['', Validators.required],\r\n      'rentalRate': ['', Validators.required]\r\n    });\r\n    this.rateForm.valueChanges\r\n    .subscribe((data) => this.onRateValueChanged(data));\r\n    this.onRateValueChanged();\r\n  }\r\n\r\n  onRateValueChanged(data?:any) {\r\n    if (!this.rateForm) { return; }\r\n    const form = this.rateForm;\r\n    for (const field in this.rateFormErrors) {\r\n      if (this.rateFormErrors.hasOwnProperty(field)) {\r\n        //clear previous error message\r\n        this.rateFormErrors[field] = '';\r\n        const control = form.get(field);\r\n        if (control && !control.valid) {\r\n          const messages = this.rateFormValidationMessages[field];\r\n          for (const key in control.errors) {\r\n            if (control.errors.hasOwnProperty(key)) {\r\n              this.rateFormErrors[field] += messages[key] + ' ';\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  rateFormErrors = {\r\n    'carRate': '',\r\n    'rentalRate': ''\r\n  }\r\n\r\n  rateFormValidationMessages = {\r\n    'carRate': {\r\n      'required': 'Car rating is required'\r\n    },\r\n    'rentalRate': {\r\n      'required': 'Rental rating is required'\r\n    }\r\n  }\r\n\r\n  openSnackBar(message: string, action: string) {\r\n    this.snackBar.open(message, action, {\r\n       duration: 2000,\r\n    });\r\n  }\r\n\r\n  onRateSubmit() {\r\n    var rId = this.itemService.getCarReservationIdForRate();\r\n    this.carReservationService.rateServiceAndCar(rId, this.rateForm.value.carRate,\r\n       this.rateForm.value.rentalRate)\r\n    .subscribe(\r\n      (result) => {\r\n        this.openSnackBar(\"Thank you for your input!\", \"Dismiss\");\r\n        this.dialogRef.close();\r\n      },\r\n      (err) => {\r\n        this.openSnackBar(\"Failed to add rating\", \"Dismiss\");\r\n      }\r\n    )\r\n  }\r\n\r\n}\r\n","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\r\\n  Rate\\r\\n  <span class=\\\"flex-spacer\\\"></span>\\r\\n  <button mat-button mat-dialog-close>&times;</button>\\r\\n</mat-toolbar>\\r\\n<form novalidate [formGroup]=\\\"rateForm\\\" #registerform=\\\"ngForm\\\" (ngSubmit)=\\\"onRateSubmit()\\\">\\r\\n  <p>\\r\\n  <mat-form-field class=\\\"form-size\\\">\\r\\n      <mat-select formControlName=\\\"roomRate\\\" placeholder=\\\"Room rating\\\">\\r\\n        <mat-option value=\\\"1\\\">\\r\\n          1\\r\\n        </mat-option>\\r\\n        <mat-option value=\\\"2\\\">\\r\\n          2\\r\\n        </mat-option>\\r\\n        <mat-option value=\\\"3\\\">\\r\\n          3\\r\\n        </mat-option>\\r\\n        <mat-option value=\\\"4\\\">\\r\\n          4\\r\\n        </mat-option>\\r\\n        <mat-option value=\\\"5\\\">\\r\\n          5\\r\\n        </mat-option>\\r\\n      </mat-select>\\r\\n      <mat-error *ngIf=\\\"rateFormErrors.roomRate\\\">\\r\\n            {{ rateFormErrors.roomRate }}\\r\\n        </mat-error>\\r\\n  </mat-form-field>\\r\\n  </p>\\r\\n  <p>\\r\\n    <mat-form-field class=\\\"form-size\\\">\\r\\n      <mat-select formControlName=\\\"hotelRate\\\" placeholder=\\\"Hotel rating\\\">\\r\\n        <mat-option value=\\\"1\\\">\\r\\n          1\\r\\n        </mat-option>\\r\\n        <mat-option value=\\\"2\\\">\\r\\n          2\\r\\n        </mat-option>\\r\\n        <mat-option value=\\\"3\\\">\\r\\n          3\\r\\n        </mat-option>\\r\\n        <mat-option value=\\\"4\\\">\\r\\n          4\\r\\n        </mat-option>\\r\\n        <mat-option value=\\\"5\\\">\\r\\n          5\\r\\n        </mat-option>\\r\\n      </mat-select>\\r\\n      <mat-error *ngIf=\\\"rateFormErrors.hotelRate\\\">\\r\\n        {{ rateFormErrors.hotelRate }}\\r\\n      </mat-error>\\r\\n    </mat-form-field>\\r\\n  </p>\\r\\n  <button type=\\\"submit\\\" mat-button class=\\\"background-primary text-floral-white\\\" [disabled]=\\\"rateForm.invalid\\\">\\r\\n    Submit\\r\\n  </button>\\r\\n</form>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JhdGUtcm9vbS1hbmQtaG90ZWwvcmF0ZS1yb29tLWFuZC1ob3RlbC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, Inject, ViewChild } from '@angular/core';\r\nimport { RoomReservationApi, MyuserApi } from '../shared/sdk';\r\nimport { baseURL } from '../shared/baseUrl';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MatSnackBar } from '@angular/material';\r\nimport { RateCarAndServiceComponent } from '../rate-car-and-service/rate-car-and-service.component';\r\nimport { ItemService } from '../services/item.service';\r\n\r\n@Component({\r\n  selector: 'app-rate-room-and-hotel',\r\n  templateUrl: './rate-room-and-hotel.component.html',\r\n  styleUrls: ['./rate-room-and-hotel.component.scss']\r\n})\r\nexport class RateRoomAndHotelComponent implements OnInit {\r\n\r\n  rateForm: FormGroup;\r\n  @ViewChild('rateform') rateFormDirective;\r\n\r\n  constructor(@Inject('baseURL') private baseURL,\r\n  private myUserService: MyuserApi,\r\n  private fb: FormBuilder,\r\n  public dialogRef: MatDialogRef<RateRoomAndHotelComponent>,\r\n  public snackBar: MatSnackBar,\r\n  public roomReservationService: RoomReservationApi,\r\n  private itemService: ItemService) {\r\n    this.createRateForm();\r\n   }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  createRateForm() {\r\n    this.rateForm = this.fb.group({\r\n      'roomRate': ['', Validators.required],\r\n      'hotelRate': ['', Validators.required]\r\n    });\r\n    this.rateForm.valueChanges\r\n    .subscribe((data) => this.onRateValueChanged(data));\r\n    this.onRateValueChanged();\r\n  }\r\n\r\n  onRateValueChanged(data?:any) {\r\n    if (!this.rateForm) { return; }\r\n    const form = this.rateForm;\r\n    for (const field in this.rateFormErrors) {\r\n      if (this.rateFormErrors.hasOwnProperty(field)) {\r\n        //clear previous error message\r\n        this.rateFormErrors[field] = '';\r\n        const control = form.get(field);\r\n        if (control && !control.valid) {\r\n          const messages = this.rateFormValidationMessages[field];\r\n          for (const key in control.errors) {\r\n            if (control.errors.hasOwnProperty(key)) {\r\n              this.rateFormErrors[field] += messages[key] + ' ';\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  rateFormErrors = {\r\n    'roomRate': '',\r\n    'hotelRate': ''\r\n  }\r\n\r\n  rateFormValidationMessages = {\r\n    'roomRate': {\r\n      'required': 'Room rating is required'\r\n    },\r\n    'hotelRate': {\r\n      'required': 'Hotel rating is required'\r\n    }\r\n  }\r\n\r\n  openSnackBar(message: string, action: string) {\r\n    this.snackBar.open(message, action, {\r\n       duration: 2000,\r\n    });\r\n  }\r\n\r\n  onRateSubmit() {\r\n    var rId = this.itemService.getRoomReservationIdForRate();\r\n    this.roomReservationService.rateHotelAndRoom(rId, this.rateForm.value.roomRate,\r\n       this.rateForm.value.hotelRate)\r\n    .subscribe(\r\n      (result) => {\r\n        this.openSnackBar(\"Thank you for your input!\", \"Dismiss\");\r\n        this.dialogRef.close();\r\n      },\r\n      (err) => {\r\n        this.openSnackBar(\"Failed to add rating\", \"Dismiss\");\r\n      }\r\n    )\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n}\r\n","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\r\\n  Register\\r\\n  <span class=\\\"flex-spacer\\\"></span>\\r\\n  <button mat-button mat-dialog-close>&times;</button>\\r\\n</mat-toolbar>\\r\\n<form novalidate [formGroup]=\\\"registerForm\\\" #registerform=\\\"ngForm\\\" (ngSubmit)=\\\"onRegisterSubmit()\\\">\\r\\n  <p>\\r\\n  <mat-form-field class=\\\"form-size\\\">\\r\\n      <input matInput formControlName=\\\"email\\\" placeholder=\\\"E-mail\\\" type=\\\"text\\\">\\r\\n      <mat-error *ngIf=\\\"registerFormErrors.email\\\">\\r\\n        {{ registerFormErrors.email }}\\r\\n      </mat-error>\\r\\n  </mat-form-field>\\r\\n  </p>\\r\\n  <p>\\r\\n  <mat-form-field class=\\\"form-size\\\">\\r\\n      <input matInput formControlName=\\\"username\\\" placeholder=\\\"Username\\\" type=\\\"text\\\">\\r\\n      <mat-error *ngIf=\\\"registerFormErrors.username\\\">\\r\\n        {{ registerFormErrors.username }}\\r\\n      </mat-error>\\r\\n  </mat-form-field>\\r\\n  </p>\\r\\n  <p>\\r\\n    <mat-form-field class=\\\"form-size\\\">\\r\\n        <input matInput formControlName=\\\"password\\\" placeholder=\\\"Password\\\" type=\\\"password\\\">\\r\\n        <mat-error *ngIf=\\\"registerFormErrors.password\\\">\\r\\n          {{ registerFormErrors.password }}\\r\\n        </mat-error>\\r\\n    </mat-form-field>\\r\\n  </p>\\r\\n  <button type=\\\"submit\\\" mat-button class=\\\"background-primary text-floral-white\\\" [disabled]=\\\"registerForm.invalid\\\">\\r\\n    Submit\\r\\n  </button>\\r\\n</form>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlZ2lzdGVyL3JlZ2lzdGVyLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, ViewChild, Inject } from '@angular/core';\r\n\r\nimport { MatDialog, MatDialogRef, MatSnackBar } from '@angular/material';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { MyuserApi, LoopBackConfig } from '../shared/sdk';\r\nimport { LoginComponent } from '../login/login.component';\r\nimport { API_VERSION } from '../shared/baseUrl';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.scss']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n\r\n  registerForm: FormGroup;\r\n  @ViewChild('registerform') registerFormDirective;\r\n\r\n  constructor(@Inject('baseURL') private baseURL,\r\n    private myUserService: MyuserApi,\r\n    private fb: FormBuilder,\r\n    public dialogRef: MatDialogRef<RegisterComponent>,\r\n    public snackBar: MatSnackBar) {\r\n      LoopBackConfig.setBaseURL(baseURL);\r\n      LoopBackConfig.setApiVersion(API_VERSION);\r\n      this.createRegisterForm();\r\n  }\r\n\r\n  createRegisterForm() {\r\n    this.registerForm = this.fb.group({\r\n      'username': ['', Validators.required],\r\n      'password': ['', Validators.required],\r\n      'email': ['', [Validators.required, Validators.email]]\r\n    })\r\n    this.registerForm.valueChanges\r\n    .subscribe((data) => this.onRegisterValueChanged(data));\r\n    this.onRegisterValueChanged();\r\n  }\r\n\r\n  onRegisterValueChanged(data?:any) {\r\n    if (!this.registerForm) { return; }\r\n    const form = this.registerForm;\r\n    for (const field in this.registerFormErrors) {\r\n      if (this.registerFormErrors.hasOwnProperty(field)) {\r\n        //clear previous error message\r\n        this.registerFormErrors[field] = '';\r\n        const control = form.get(field);\r\n        if (control && !control.valid) {\r\n          const messages = this.registerFormValidationMessages[field];\r\n          for (const key in control.errors) {\r\n            if (control.errors.hasOwnProperty(key)) {\r\n              this.registerFormErrors[field] += messages[key] + ' ';\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  registerFormErrors = {\r\n    'username': '',\r\n    'password': '',\r\n    'email': ''\r\n  }\r\n\r\n  registerFormValidationMessages = {\r\n    'username': {\r\n      'required': 'Username is required'\r\n    },\r\n    'password': {\r\n      'required': 'Password is required'\r\n    },\r\n    'email': {\r\n      'required': 'Email is required',\r\n      'email': 'This has to be a valid email address'\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  openSnackBar(message: string, action: string) {\r\n    this.snackBar.open(message, action, {\r\n       duration: 2000,\r\n    });\r\n  }\r\n\r\n  onRegisterSubmit() {\r\n    this.myUserService.create({\r\n      'username': this.registerForm.value.username,\r\n      'password': this.registerForm.value.password,\r\n      'email': this.registerForm.value.email\r\n    })\r\n    .subscribe(\r\n      (result) => {\r\n        this.openSnackBar(\"Registration successfull\", \"Dismiss\");\r\n        this.dialogRef.close();\r\n      },\r\n      (err) => {\r\n        this.openSnackBar(\"Registration failed\", \"Dismiss\");\r\n      });\r\n  }\r\n\r\n  \r\n\r\n}\r\n","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\r\\n  <a mat-button (click)=\\\"setToAdd()\\\" *ngIf=\\\"userType==='admin'\\\"> Add</a>\\r\\n  <a mat-button (click)=\\\"setToRemove()\\\" *ngIf=\\\"userType==='admin'\\\"> Remove </a>\\r\\n  <a mat-button (click)=\\\"setToChange()\\\" *ngIf=\\\"userType==='rentalServiceAdmin'\\\"> Change </a>\\r\\n  <a mat-button (click)=\\\"setToSearch()\\\"> Search </a>\\r\\n  <a mat-button (click)=\\\"setToList()\\\"> List all </a>\\r\\n  <span class=\\\"flex-spacer\\\"></span>\\r\\n  <!--<a mat-button (click)=\\\"openLoginForm()\\\"><span class=\\\"fa fa-sign-in fa-lg\\\">Login</span></a>-->\\r\\n</mat-toolbar>\\r\\n\\r\\n<mat-autocomplete #auto=\\\"matAutocomplete\\\">\\r\\n  <mat-option *ngFor=\\\"let location of filteredLocationsStrings\\\" [value]=\\\"location\\\">{{location}}</mat-option>\\r\\n</mat-autocomplete>\\r\\n\\r\\n<div *ngIf=\\\"isAdd&&userType==='admin'\\\">\\r\\n  \\r\\n  <div fxFlex fxFlexOffset=\\\"20px\\\" class=\\\"form-size\\\">\\r\\n    <form novalidate [formGroup]=\\\"addForm\\\" #addform=\\\"ngForm\\\" (ngSubmit)=\\\"onAddSubmit()\\\">\\r\\n      <p>\\r\\n      <mat-form-field class=\\\"form-size\\\">\\r\\n          <input matInput formControlName=\\\"name\\\" placeholder=\\\"Name\\\" type=\\\"text\\\">\\r\\n          <mat-error *ngIf=\\\"addFormErrors.name\\\">\\r\\n            {{ addFormErrors.name }}\\r\\n          </mat-error>\\r\\n      </mat-form-field>\\r\\n      </p>\\r\\n      <p>\\r\\n        <mat-form-field>\\r\\n          <input matInput formControlName=\\\"countryCity\\\" placeholder=\\\"Location\\\" type=\\\"text\\\" [matAutocomplete]=\\\"auto\\\">\\r\\n          <mat-error *ngIf=\\\"addFormErrors.countryCity\\\">\\r\\n            {{ addFormErrors.countryCity }}\\r\\n          </mat-error>\\r\\n        </mat-form-field>\\r\\n      </p>\\r\\n      <p>\\r\\n      <mat-form-field class=\\\"form-size\\\">\\r\\n          <input matInput formControlName=\\\"address\\\" placeholder=\\\"Address\\\" type=\\\"text\\\">\\r\\n          <mat-error *ngIf=\\\"addFormErrors.address\\\">\\r\\n              {{ addFormErrors.address }}\\r\\n          </mat-error>\\r\\n      </mat-form-field>\\r\\n      </p>\\r\\n      <p>\\r\\n        <mat-form-field class=\\\"form-size\\\">\\r\\n          <textarea matInput formControlName=\\\"description\\\" placeholder=\\\"Description\\\" type=\\\"text\\\" rows=5></textarea>\\r\\n            <mat-error *ngIf=\\\"addFormErrors.description\\\">\\r\\n                {{ addFormErrors.description }}\\r\\n            </mat-error>\\r\\n        </mat-form-field>\\r\\n      </p>\\r\\n      <button type=\\\"submit\\\" mat-button class=\\\"background-primary text-floral-white\\\" [disabled]=\\\"addForm.invalid\\\">\\r\\n        Submit\\r\\n      </button>\\r\\n    </form>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"isRemove&&userType==='admin'\\\">\\r\\n  <div fxFlex fxFlexOffset=\\\"20px\\\" class=\\\"form-size\\\">\\r\\n    <form novalidate [formGroup]=\\\"removeForm\\\" #removeform=\\\"ngForm\\\" (ngSubmit)=\\\"onRemoveSubmit()\\\">\\r\\n      <p>\\r\\n        <mat-form-field class=\\\"form-size\\\">\\r\\n          <input matInput formControlName=\\\"name\\\" placeholder=\\\"Name\\\" type=\\\"text\\\">\\r\\n          <mat-error *ngIf=\\\"removeFormErrors.name\\\">\\r\\n            {{ removeFormErrors.name }}\\r\\n          </mat-error>\\r\\n        </mat-form-field>\\r\\n      </p>\\r\\n      <button type=\\\"submit\\\" mat-button class=\\\"background-primary text-floral-white\\\" [disabled]=\\\"removeForm.invalid\\\" (ngSubmit)=\\\"onRemoveSubmit()\\\">\\r\\n          Submit\\r\\n      </button>\\r\\n    </form>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"isChange&&userType==='rentalServiceAdmin'\\\">\\r\\n  <app-change-rental-service></app-change-rental-service>\\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"isSearch\\\">\\r\\n  <div fxFlex fxFlexOffset=\\\"20px\\\" class=\\\"form-size\\\" >\\r\\n    <form novalidate [formGroup]=\\\"searchForm\\\" #searchform=\\\"ngForm\\\" (ngSubmit)=\\\"onSearchSubmit()\\\">\\r\\n      <p>\\r\\n          <mat-form-field class=\\\"half-width\\\">\\r\\n            <input matInput formControlName=\\\"startDate\\\" [matDatepicker]=\\\"myDatepicker\\\" placeholder=\\\"Start time\\\">\\r\\n            <mat-datepicker-toggle [for]=\\\"myDatepicker\\\"></mat-datepicker-toggle>\\r\\n            <mat-datepicker #myDatepicker></mat-datepicker>\\r\\n            <mat-error *ngIf=\\\"searchFormErrors.startDate\\\">\\r\\n              {{ searchFormErrors.startDate }}\\r\\n            </mat-error>\\r\\n          </mat-form-field>\\r\\n        </p>\\r\\n        <p>\\r\\n          <mat-form-field class=\\\"half-width\\\">\\r\\n            <input matInput formControlName=\\\"endDate\\\" [matDatepicker]=\\\"myDatepicker2\\\" placeholder=\\\"End time\\\">\\r\\n            <mat-datepicker-toggle [for]=\\\"myDatepicker2\\\"></mat-datepicker-toggle>\\r\\n            <mat-datepicker #myDatepicker2></mat-datepicker>\\r\\n            <mat-error *ngIf=\\\"searchFormErrors.startDate\\\">\\r\\n              {{ searchFormErrors.endDate }}\\r\\n            </mat-error>\\r\\n          </mat-form-field>\\r\\n        </p>\\r\\n      <p>\\r\\n        <mat-form-field class=\\\"half-width\\\">\\r\\n          <input matInput formControlName=\\\"name\\\" placeholder=\\\"Name\\\" type=\\\"text\\\">\\r\\n        </mat-form-field>\\r\\n      </p>\\r\\n      <p>\\r\\n        <mat-form-field>\\r\\n          <input matInput formControlName=\\\"countryCity\\\" placeholder=\\\"Location\\\" type=\\\"text\\\" [matAutocomplete]=\\\"auto\\\">\\r\\n          <mat-error *ngIf=\\\"searchFormErrors.countryCity\\\">\\r\\n            {{ searchFormErrors.countryCity }}\\r\\n          </mat-error>\\r\\n        </mat-form-field>\\r\\n      </p>\\r\\n      <button type=\\\"submit\\\" mat-button class=\\\"background-primary text-floral-white\\\" (ngSubmit)=\\\"onSearchSubmit()\\\" [disabled]=\\\"searchForm.invalid\\\">\\r\\n          Submit\\r\\n      </button>\\r\\n    </form>\\r\\n  </div>\\r\\n  <div fxFlex>\\r\\n    <mat-grid-list cols=\\\"3\\\" rowHeight=\\\"200px\\\">\\r\\n      <mat-grid-tile *ngFor=\\\"let service of foundServices\\\">\\r\\n        <mat-card (click)=\\\"openMap(service)\\\" class=\\\"pointer\\\">\\r\\n          {{service.name}} | {{service.address}} | {{service.description}}\\r\\n        </mat-card>\\r\\n      </mat-grid-tile>\\r\\n    </mat-grid-list>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"islist\\\">\\r\\n  <app-listallservices></app-listallservices>\\r\\n</div>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlbnRhbHNlcnZpY2VzL3JlbnRhbHNlcnZpY2VzLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, Inject, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport {Location, LocationApi, LoopBackConfig} from '../shared/sdk';\r\nimport { API_VERSION } from '../shared/baseUrl';\r\nimport { RentalServiceApi } from '../shared/sdk/services';\r\nimport { RentalService } from '../shared/sdk/models/RentalService';\r\nimport {MatDialog, MatSnackBar} from '@angular/material';\r\nimport {LoginServiceService} from '../login-service.service';\r\nimport { ItemService } from '../services/item.service';\r\nimport {count} from 'rxjs/operators';\r\nimport {RegisterComponent} from '../register/register.component';\r\nimport {MapComponent} from '../map/map.component';\r\n\r\n@Component({\r\n  selector: 'app-rentalservices',\r\n  templateUrl: './rentalservices.component.html',\r\n  styleUrls: ['./rentalservices.component.scss']\r\n})\r\nexport class RentalservicesComponent implements OnInit {\r\n  userType: string;\r\n  addForm: FormGroup;\r\n  toAddService: RentalService;\r\n  @ViewChild('addform') addFormDirective;\r\n\r\n  removeForm: FormGroup;\r\n  @ViewChild('removeform') removeFormDirective;\r\n\r\n  changeForm: FormGroup;\r\n  @ViewChild('changeform') changeFormDirective;\r\n  toChangeService: RentalService;\r\n\r\n  searchForm: FormGroup;\r\n  @ViewChild('searchform') searchFormDirective;\r\n\r\n  isAdd: boolean;\r\n\r\n  isRemove: boolean;\r\n\r\n  isChange: boolean;\r\n\r\n  isSearch: boolean;\r\n  foundServices: RentalService[];\r\n\r\n  islist: boolean;\r\n\r\n  locations = [];\r\n  filteredLocations: Location[] = [];\r\n  filteredLocationsStrings = [];\r\n\r\n  constructor(@Inject('baseURL') private baseURL,\r\n    private rentalServiceService: RentalServiceApi,\r\n    private loginService: LoginServiceService,\r\n    private locationsservice: LocationApi,\r\n    private fb: FormBuilder,\r\n    public dialog: MatDialog,\r\n    public snackBar: MatSnackBar,\r\n    private itemService: ItemService) { \r\n      /*\r\n        Force initialization\r\n      */\r\n      this.itemService.getServiceId();\r\n\r\n      LoopBackConfig.setBaseURL(baseURL);\r\n      LoopBackConfig.setApiVersion(API_VERSION);\r\n      this.createAddForm();\r\n      this.createRemoveForm();\r\n      this.createSearchForm();\r\n      this.locationsservice.find().subscribe((locations: Location[]) => {\r\n          this.locations = locations;\r\n          this.filteredLocations = this.locations;\r\n          this.fillLocationsList();\r\n        }\r\n      );\r\n      this.loginService.user.subscribe(data => {\r\n        if (data) {\r\n          this.userType = data.user.type;\r\n        }\r\n      });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  private _filter(value: string): Location[] {\r\n    if (value != null) {\r\n      const filterValue = value.toLowerCase();\r\n      return this.locations.filter(location => (location.city.toLowerCase() + ', ' + location.country.toLowerCase()).includes(filterValue));\r\n    } else {\r\n      return this.locations;\r\n    }\r\n  }\r\n\r\n  openSnackBar(message: string, action: string) {\r\n    this.snackBar.open(message, action, {\r\n       duration: 2000,\r\n    });\r\n  }\r\n\r\n  fillLocationsList() {\r\n    this.filteredLocationsStrings = [];\r\n    for (const location of this.filteredLocations) {\r\n      this.filteredLocationsStrings.push(location.city + ', ' + location.country);\r\n    }\r\n  }\r\n\r\n  locationExists() {\r\n    if (this.addForm.value.countryCity == null) return false;\r\n    const loc = this.addForm.value.countryCity.split(', ');\r\n    const city = loc[0];\r\n    const country = loc[1];\r\n    for (const location of this.locations) {\r\n      if (location.city === city && location.country === country) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  getCityCountry(countryCity) {\r\n    countryCity = countryCity.split(', ');\r\n    if (countryCity.length !== 2) return ['', ''];\r\n    return [countryCity[0], countryCity[1]];\r\n  }\r\n\r\n  setToAdd() {\r\n    this.isAdd = true;\r\n    this.isRemove = null;\r\n    this.isChange = null;\r\n    this.isSearch = null;\r\n    this.islist = null;\r\n  }\r\n\r\n  setToRemove() {\r\n    this.isAdd = null;\r\n    this.isRemove = true;\r\n    this.isChange = null;\r\n    this.isSearch = null;\r\n    this.islist = null;\r\n  }\r\n\r\n  setToChange() {\r\n    this.isAdd = null;\r\n    this.isRemove = null;\r\n    this.isChange = true;\r\n    this.isSearch = null;\r\n    this.islist = null;\r\n  }\r\n\r\n  setToSearch() {\r\n    this.isAdd = null;\r\n    this.isRemove = null;\r\n    this.isChange = null;\r\n    this.isSearch = true;\r\n    this.islist = null;\r\n  }\r\n\r\n  setToList() {\r\n    this.isAdd = null;\r\n    this.isRemove = null;\r\n    this.isChange = null;\r\n    this.isSearch = null;\r\n    this.islist = true;\r\n  }\r\n\r\n  addFormErrors = {\r\n    'name': '',\r\n    'address': '',\r\n    'description': '',\r\n    'countryCity': ''\r\n  };\r\n\r\n  addFormValidationMessages = {\r\n    'name': {\r\n      'required': 'Name is required'\r\n    },\r\n    'address': {\r\n      'required': 'Address is required'\r\n    },\r\n    'description': {\r\n      'required': 'Description is required'\r\n    },\r\n    'countryCity': {\r\n      'required': 'Location is required',\r\n      'min': 'Location must exist'\r\n    }\r\n  };\r\n\r\n  onAddValueChanged(data?:any) {\r\n    if (!this.addForm) { return; }\r\n    const form = this.addForm;\r\n    this.filteredLocations = this._filter(form.value.countryCity);\r\n    this.fillLocationsList();\r\n    if (!this.locationExists()) {\r\n      this.addFormErrors['countryCity'] += this.addFormValidationMessages['countryCity']['min'];\r\n      this.addForm.controls['countryCity'].setErrors({'min' : true});\r\n    }\r\n    for (const field in this.addFormErrors) {\r\n      if (this.addFormErrors.hasOwnProperty(field)) {\r\n        // clear previous error message\r\n        this.addFormErrors[field] = '';\r\n        const control = form.get(field);\r\n        if (control && !control.valid) {\r\n          const messages = this.addFormValidationMessages[field];\r\n          for (const key in control.errors) {\r\n            if (control.errors.hasOwnProperty(key)) {\r\n              this.addFormErrors[field] += messages[key] + ' ';\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  createAddForm() {\r\n    this.addForm = this.fb.group({\r\n      name: ['', Validators.required],\r\n      address: ['', Validators.required],\r\n      countryCity: ['', Validators.required],\r\n      description: ['', Validators.required]\r\n    });\r\n    this.addForm.valueChanges\r\n      .subscribe(data => this.onAddValueChanged(data));\r\n    this.onAddValueChanged();\r\n  }\r\n\r\n  onAddSubmit() {\r\n    const loc = this.addForm.value.countryCity.split(', ');\r\n    this.toAddService = this.addForm.value;\r\n    let country = '';\r\n    let city = '';\r\n    if (loc.length === 2) {\r\n      country = loc[1];\r\n      city = loc[0];\r\n    }\r\n    this.locationsservice.find({where: {city: city, country: country}})\r\n      .subscribe((locations: Location[]) => {\r\n        if (locations.length > 0) {\r\n          const location = locations[0];\r\n          this.toAddService.locationId = location.id;\r\n        }\r\n        delete this.toAddService['countryCity'];\r\n        this.toAddService.myuserId = '';\r\n        this.rentalServiceService.create(this.toAddService)\r\n          .subscribe(\r\n            (result) => {\r\n              this.openSnackBar(\"Adding succeded\", \"Dismiss\");\r\n            },\r\n            (err) => {\r\n              this.openSnackBar(\"Adding failed\", \"Dimsiss\");\r\n            });\r\n        this.addForm.reset({\r\n          name: '',\r\n          address: '',\r\n          description: '',\r\n          countryCity: ''\r\n        });\r\n        this.addFormDirective.resetForm();\r\n      }, (err) => {\r\n       this.openSnackBar('Adding failed', 'Dismiss');\r\n    });\r\n  }\r\n\r\n  removeFormErrors = {\r\n    'name': ''\r\n  }\r\n\r\n  removeFormValidationMessages = {\r\n    'name': {\r\n      'required': 'Name is required in order to remove a rental service'\r\n    }\r\n  }\r\n\r\n\r\n  onRemoveValueChanged(data?:any) {\r\n    if (!this.removeForm) { return; }\r\n    const form = this.removeForm;\r\n    for (const field in this.removeFormErrors) {\r\n      if (this.removeFormErrors.hasOwnProperty(field)) {\r\n        //clear previous error message\r\n        this.removeFormErrors[field] = '';\r\n        const control = form.get(field);\r\n        if (control && !control.valid) {\r\n          const messages = this.removeFormValidationMessages[field];\r\n          for (const key in control.errors) {\r\n            if (control.errors.hasOwnProperty(key)) {\r\n              this.removeFormErrors[field] += messages[key] + ' ';\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  createRemoveForm() {\r\n    this.removeForm = this.fb.group({\r\n      name: ['', Validators.required]\r\n    });\r\n    this.removeForm.valueChanges\r\n    .subscribe((data) => this.onRemoveValueChanged(data));\r\n    this.onRemoveValueChanged();\r\n  }\r\n\r\n  onRemoveSubmit() {\r\n    //{\"where\":{\"name\": \"string\"}}\r\n    this.rentalServiceService.findOne({'where': {'name': this.removeForm.value.name}})\r\n    .subscribe((rentalService) => {\r\n      var myRentalService = rentalService as RentalService\r\n      if (rentalService != null) {\r\n        this.rentalServiceService.deleteById(myRentalService.id)\r\n        .subscribe(\r\n        (deletedRentalService) => {\r\n          this.openSnackBar(\"Deletion successfull\", \"Dismiss\");\r\n          this.removeForm.reset({\r\n            name: ''\r\n          });\r\n          this.removeFormDirective.resetForm();\r\n        },\r\n        (err) => {\r\n          this.openSnackBar(\"Deletion failed\", \"Dismiss\");\r\n        });\r\n      }\r\n    },\r\n    (err) => {\r\n      this.openSnackBar(\"Deletion failed\", \"Dismiss\");\r\n    });\r\n  }\r\n\r\n  createSearchForm() {\r\n    this.searchForm = this.fb.group({\r\n      startDate: ['', Validators.required],\r\n      endDate: ['', Validators.required],\r\n      name: [''],\r\n      countryCity: ['']\r\n    })\r\n    this.searchForm.valueChanges\r\n    .subscribe(data => this.onSearchValueChanged(data));\r\n    this.onSearchValueChanged();\r\n  }\r\n\r\n  searchFormErrors = {\r\n    'startDate': '',\r\n    'endDate': '',\r\n    'countryCity': ''\r\n  };\r\n\r\n  searchFormValidationMessages = {\r\n    'startDate': {\r\n      'required': 'Start date is required for search'\r\n    },\r\n    'endDate': {\r\n      'required': 'End date is required for search'\r\n    },\r\n    'countryCity': {}\r\n  };\r\n\r\n  onSearchValueChanged(data?:any) {\r\n    if (!this.searchForm) { return; }\r\n    const form = this.searchForm;\r\n    this.filteredLocations = this._filter(form.value.countryCity);\r\n    this.fillLocationsList();\r\n    for (const field in this.searchFormErrors) {\r\n      if (this.searchFormErrors.hasOwnProperty(field)) {\r\n        //clear previous error message\r\n        this.searchFormErrors[field] = '';\r\n        const control = form.get(field);\r\n        if (control && !control.valid) {\r\n          const messages = this.searchFormValidationMessages[field];\r\n          for (const key in control.errors) {\r\n            if (control.errors.hasOwnProperty(key)) {\r\n              this.searchFormErrors[field] += messages[key] + ' ';\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  onSearchSubmit() {\r\n    var name = null;\r\n    var address = null;\r\n    if (this.searchForm.value.name != '') {\r\n      name = this.searchForm.value.name\r\n    }\r\n    if (this.searchForm.value.address != '') {\r\n      address = this.searchForm.value.address\r\n    }\r\n\r\n    var startDate = new Date(this.searchForm.value.startDate).toJSON();\r\n    var endDate = new Date(this.searchForm.value.endDate).toJSON();\r\n    const cityCountry = this.getCityCountry(this.searchForm.value.countryCity);\r\n    const city = cityCountry[0];\r\n    const country = cityCountry[1];\r\n\r\n    // these two values will change once we actually have resrvations\r\n    this.rentalServiceService.getAvailableServices(startDate,\r\n      endDate, name, null)\r\n    .subscribe((result) => {\r\n      this.foundServices = [];\r\n      if (city === '') {\r\n        this.foundServices = result.retval as RentalService[];\r\n      } else {\r\n        for (const rac of result.retval) {\r\n          this.locationsservice.findById(rac.locationId)\r\n            .subscribe((res: Location) => {\r\n              if (res.city === city && res.country === country) {\r\n                this.foundServices.push(rac);\r\n              }\r\n            }, err => {\r\n              this.openSnackBar('Something went wrong. Please try again', 'Dismiss')\r\n            });\r\n\r\n        }\r\n        this.openSnackBar('Search done', 'Dismiss');\r\n      }\r\n    },\r\n    (err) => {\r\n      this.openSnackBar(\"Search failed\", \"Dismiss\");\r\n    });\r\n  }\r\n\r\n  openMap(service) {\r\n    this.dialog.open(MapComponent, {width: '80%', height: '80%', data: {lat: service.latitude, lng: service.longitude}});\r\n  }\r\n}\r\n","module.exports = \"\\r\\n  <p>\\r\\n    A flight has been reserved for you from July 5th 2019 to July 15th 2019 From Torronto to Vrbas <br>\\r\\n    Please finish the reservation process by selecting wether you want a car and or hotel\\r\\n  </p>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<div *ngIf=\\\"!roomIsReserved\\\">\\r\\n    Click here to find a room for your trip <br>\\r\\n  <button mat-button class=\\\"background-primary text-floral-white\\\" (click)=\\\"switchToRoomSearch()\\\" [disabled]=\\\"roomIsReserved\\\">\\r\\n    Find rooms\\r\\n  </button> \\r\\n  <br>\\r\\n  <br>\\r\\n</div>\\r\\n<p *ngIf=\\\"roomIsReserved\\\">Room reserved</p>\\r\\n<div *ngIf=\\\"!carIsReserved\\\">\\r\\n    Click here to find a vehicle for your trip <br>\\r\\n  <button mat-button class=\\\"background-primary text-floral-white\\\" (click)=\\\"switchToCarSearch()\\\" [disabled]=\\\"carIsReserved\\\">\\r\\n    Find cars\\r\\n  </button>\\r\\n  <br>\\r\\n  <br>\\r\\n</div>\\r\\n<p *ngIf=\\\"carIsReserved\\\">Car reserved</p>\\r\\n<div>\\r\\n    Return to home <br>\\r\\n    <button mat-button class=\\\"background-primary text-floral-white\\\" (click)=\\\"homeClick()\\\">\\r\\n      Home\\r\\n    </button>\\r\\n    <br>\\r\\n    <br>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<!--Rooms search form html-->\\r\\n<div *ngIf=\\\"searchRoomsActive\\\">\\r\\n     <!-- *ngIf=\\\"qSearchDone\\\"-->\\r\\n    <button mat-button class=\\\"background-primary text-floral-white\\\" (click)=\\\"toggleQuicks()\\\">\\r\\n     Show/Hide quick reservation\\r\\n    </button>\\r\\n    <div *ngIf=\\\"displayQuicks\\\">\\r\\n        <div fxLayout=\\\"flex\\\">\\r\\n          <div fxFlex>\\r\\n            <table #tablereservations mat-table [dataSource]=\\\"reservationsInfo\\\">\\r\\n              <ng-container matColumnDef=\\\"hotel\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef>Hotel</th>\\r\\n                <td mat-cell *matCellDef=\\\"let reservationInfo\\\">{{reservationInfo.hotel.name}} </td>\\r\\n              </ng-container>\\r\\n              <ng-container matColumnDef=\\\"roomNumber\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef>Room Number</th>\\r\\n                <td mat-cell *matCellDef=\\\"let reservationInfo\\\">{{reservationInfo.room.number}}</td>\\r\\n              </ng-container>\\r\\n              <ng-container matColumnDef=\\\"beds\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef>Beds</th>\\r\\n                <td mat-cell *matCellDef=\\\"let reservationInfo\\\">{{reservationInfo.room.beds}}</td>\\r\\n              </ng-container>\\r\\n              <ng-container matColumnDef=\\\"startDate\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef>Start Date</th>\\r\\n                <td mat-cell *matCellDef=\\\"let reservationInfo\\\">{{reservationInfo.reservation.startDate | date:'dd/MM/yyyy'}}</td>\\r\\n              </ng-container>\\r\\n              <ng-container matColumnDef=\\\"endDate\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef>End Date</th>\\r\\n                <td mat-cell *matCellDef=\\\"let reservationInfo\\\">{{reservationInfo.reservation.endDate | date:'dd/MM/yyyy'}}</td>\\r\\n              </ng-container>\\r\\n              <ng-container matColumnDef=\\\"price\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef>Price</th>\\r\\n                <td mat-cell *matCellDef=\\\"let reservationInfo\\\">{{reservationInfo.reservation.price}}</td>\\r\\n              </ng-container>\\r\\n              <tr mat-header-row *matHeaderRowDef=\\\"columnsToDisplayReservations\\\"></tr>\\r\\n              <tr mat-row *matRowDef=\\\"let reservationInfo; columns: columnsToDisplayReservations\\\"\\r\\n              (click)=\\\"selectRow(reservationInfo.reservation.id)\\\" class=\\\"pointer\\\"\\r\\n              [ngClass]=\\\"{selectedRow: selectedReservationId === reservationInfo.reservation.id}\\\"></tr>\\r\\n            </table>\\r\\n            <button type=\\\"submit\\\" mat-button class=\\\"background-primary text-floral-white\\\"\\r\\n                    (click)=\\\"reserve()\\\" style=\\\"margin: 10px\\\">Reserve</button>\\r\\n          </div>\\r\\n          <div fxFlex>\\r\\n            <table #tablespecialoffers mat-table [dataSource]=\\\"specialOffers\\\">\\r\\n              <ng-container matColumnDef=\\\"name\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef>Special offers</th>\\r\\n                <td mat-cell *matCellDef=\\\"let specialOffer\\\">{{specialOffer.name}} </td>\\r\\n              </ng-container>\\r\\n              <tr mat-header-row *matHeaderRowDef=\\\"columnsToDisplaySpecialOffers\\\"></tr>\\r\\n              <tr mat-row *matRowDef=\\\"let specialOffer; columns: columnsToDisplaySpecialOffers\\\"></tr>\\r\\n            </table>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n  <div class=\\\"container\\\"\\r\\n       fxLayout=\\\"column\\\"\\r\\n       fxLayoutGap=\\\"10px\\\">\\r\\n    <div fxFlex>\\r\\n      <div>\\r\\n        <form novalidate [formGroup]=\\\"searchRoomsForm\\\" #fformSearchRooms=\\\"ngForm\\\" (ngSubmit)=\\\"onSearchRoomsSubmit()\\\">\\r\\n          <p>\\r\\n            <mat-form-field class=\\\"half-width\\\">\\r\\n              <input matInput formControlName=\\\"startDate\\\" [matDatepicker]=\\\"myDatepicker1\\\" placeholder=\\\"Start date\\\" readonly=\\\"true\\\">\\r\\n            </mat-form-field>\\r\\n            <mat-form-field class=\\\"half-width\\\">\\r\\n              <input matInput formControlName=\\\"endDate\\\" [matDatepicker]=\\\"myDatepicker2\\\" readonly placeholder=\\\"End date\\\" readonly=\\\"true\\\">\\r\\n            </mat-form-field>\\r\\n          </p>\\r\\n          <p>\\r\\n            <mat-form-field class=\\\"half-width\\\" style=\\\"height:50%\\\">\\r\\n              <input matInput formControlName=\\\"beds\\\" placeholder=\\\"Number of beds\\\" type=\\\"number\\\">\\r\\n              <mat-error *ngIf=\\\"searchRoomsFormErrors.beds\\\">\\r\\n                {{ searchRoomsFormErrors.beds}}\\r\\n              </mat-error>\\r\\n            </mat-form-field>\\r\\n            <mat-form-field class=\\\"half-width\\\">\\r\\n              <input matInput formControlName=\\\"price\\\" placeholder=\\\"Max price\\\" type=\\\"number\\\">\\r\\n              <mat-error *ngIf=\\\"searchRoomsFormErrors.price\\\">\\r\\n                {{ searchRoomsFormErrors.price}}\\r\\n              </mat-error>\\r\\n            </mat-form-field>\\r\\n          </p>\\r\\n          <p>\\r\\n            <mat-form-field class=\\\"half-width\\\">\\r\\n              <input matInput formControlName=\\\"name\\\" placeholder=\\\"Hotel Name\\\" type=\\\"text\\\">\\r\\n            </mat-form-field>\\r\\n            <mat-form-field class=\\\"half-width\\\">\\r\\n              <input matInput formControlName=\\\"address\\\" placeholder=\\\"Address\\\" type=\\\"text\\\">\\r\\n            </mat-form-field>\\r\\n          <p>\\r\\n            <button type=\\\"submit\\\" mat-button class=\\\"background-primary text-floral-white\\\"\\r\\n            [disabled]=\\\"searchRoomsForm.invalid\\\">Submit</button>\\r\\n          </p>\\r\\n          <hr>\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<!--Car search form html-->\\r\\n<div fxLayout=\\\"flex\\\" *ngIf=\\\"isCarSearch\\\">\\r\\n    <button mat-button class=\\\"background-primary text-floral-white\\\" (click)=\\\"toggleQuicksCar()\\\">\\r\\n        Show/Hide quick reservation\\r\\n      </button>\\r\\n      <br>\\r\\n      <br>\\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"displayCarQuicks&&isCarSearch\\\">\\r\\n  <mat-grid-list cols=\\\"3\\\" rowHeight=\\\"200px\\\">\\r\\n      <mat-grid-tile *ngFor=\\\"let discount of foundDiscounts\\\">\\r\\n        <mat-card id={{discount.nmbr}} (click)=\\\"inspectv2($event)\\\" class=\\\"pointer\\\">\\r\\n          Registration: {{discount.registration}} <br>\\r\\n          Start date: {{discount.startDate}} <br>\\r\\n          End date: {{discount.endDate}} <br>\\r\\n          Total days: {{discount.days}} <br>\\r\\n          Total price without discount: {{discount.total}} <br>\\r\\n          Discount: {{discount.discount}} <br>\\r\\n          Total price with discount: {{discount.totalDiscounted}} <br>\\r\\n        </mat-card>\\r\\n      </mat-grid-tile>\\r\\n    </mat-grid-list>\\r\\n    <p *ngIf=\\\"!haveCarQuicks\\\">There seem to be no special offers available during this time</p>\\r\\n</div>\\r\\n\\r\\n\\r\\n<div fxLayout=\\\"flex\\\" *ngIf=\\\"isCarSearch\\\">\\r\\n    <div fxFlex fxFlexOffset=\\\"20px\\\" class=\\\"form-size\\\">\\r\\n      <form novalidate [formGroup]=\\\"searchForm\\\" #searchform=\\\"ngForm\\\" (ngSubmit)=\\\"onSearchSubmit()\\\">\\r\\n        <p>\\r\\n          <mat-form-field class=\\\"half-width\\\">\\r\\n            <input matInput formControlName=\\\"startDate\\\" [matDatepicker]=\\\"myDatepicker\\\" placeholder=\\\"Start time\\\" readonly=\\\"true\\\">\\r\\n          </mat-form-field>\\r\\n        </p>\\r\\n        <p>\\r\\n          <mat-form-field class=\\\"half-width\\\">\\r\\n            <input matInput formControlName=\\\"endDate\\\" [matDatepicker]=\\\"myDatepicker2\\\" placeholder=\\\"Return time\\\" readonly=\\\"true\\\">\\r\\n          </mat-form-field>\\r\\n        </p>\\r\\n        <p>\\r\\n          <mat-form-field class=\\\"half-width\\\">\\r\\n            <input matInput formControlName=\\\"make\\\" placeholder=\\\"Make\\\" type=\\\"text\\\">\\r\\n            <mat-error *ngIf=\\\"searchFormErrors.make\\\">\\r\\n              {{ searchFormErrors.make }}\\r\\n            </mat-error>\\r\\n          </mat-form-field>\\r\\n        </p>\\r\\n        <p>\\r\\n          <mat-form-field class=\\\"half-width\\\">\\r\\n            <input matInput formControlName=\\\"seats\\\" placeholder=\\\"Seats\\\" pattern=\\\"[0-9]*\\\" type=\\\"text\\\">\\r\\n            <mat-error *ngIf=\\\"searchFormErrors.seats\\\">\\r\\n              {{ searchFormErrors.seats }}\\r\\n            </mat-error>\\r\\n          </mat-form-field>\\r\\n        </p>\\r\\n        <p>\\r\\n          <mat-form-field class=\\\"half-width\\\">\\r\\n            <input matInput formControlName=\\\"rentalService\\\" placeholder=\\\"RentalService\\\" type=\\\"text\\\">\\r\\n            <mat-error *ngIf=\\\"searchFormErrors.rentalService\\\">\\r\\n              {{ searchFormErrors.rentanService }}\\r\\n            </mat-error>\\r\\n          </mat-form-field>\\r\\n        </p>\\r\\n        <button type=\\\"submit\\\" mat-button class=\\\"background-primary text-floral-white\\\" [disabled]=\\\"searchForm.invalid\\\">\\r\\n            Submit\\r\\n        </button>\\r\\n      </form>\\r\\n    </div>\\r\\n    <div fxFlex>\\r\\n      <mat-grid-list cols=\\\"3\\\" rowHeight=\\\"200px\\\">\\r\\n        <mat-grid-tile *ngFor=\\\"let car of foundCars\\\">\\r\\n          <mat-card id={{car.id}} (click)=\\\"inspect($event)\\\" class=\\\"pointer\\\">\\r\\n            Registration: {{car.registration}} | Make:  {{car.make}} | Seats:  {{car.seats}} | Price: {{car.price}} | Category:  {{car.category}}\\r\\n          </mat-card>\\r\\n        </mat-grid-tile>\\r\\n      </mat-grid-list>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div *ngIf=\\\"CarQuickReservationTime\\\">\\r\\n      <form (ngSubmit)=\\\"onQuickCarSubmit()\\\">\\r\\n          <p>\\r\\n              Registration: \\r\\n              <mat-form-field class=\\\"form-size\\\">\\r\\n                  <input matInput placeholder={{specialOffer.registration}} type=\\\"text\\\" [readonly]=\\\"true\\\">\\r\\n              </mat-form-field>\\r\\n          </p>\\r\\n          <p>\\r\\n              Start date:\\r\\n              <mat-form-field class=\\\"form-size\\\">\\r\\n                  <input matInput placeholder={{specialOffer.startDate}} type=\\\"text\\\" [readonly]=\\\"true\\\">\\r\\n              </mat-form-field>\\r\\n          </p>\\r\\n          <p>\\r\\n              End date:\\r\\n              <mat-form-field class=\\\"form-size\\\">\\r\\n                  <input matInput placeholder={{specialOffer.endDate}} type=\\\"text\\\" [readonly]=\\\"true\\\">\\r\\n              </mat-form-field>\\r\\n          </p>\\r\\n          <p>\\r\\n              Total days:\\r\\n              <mat-form-field class=\\\"form-size\\\">\\r\\n                  <input matInput placeholder={{specialOffer.days}} type=\\\"text\\\" [readonly]=\\\"true\\\">\\r\\n              </mat-form-field>\\r\\n          </p>\\r\\n          <p>\\r\\n            Total price without discount:\\r\\n            <mat-form-field class=\\\"form-size\\\">\\r\\n                <input matInput placeholder={{specialOffer.total}} type=\\\"text\\\" [readonly]=\\\"true\\\">\\r\\n            </mat-form-field>\\r\\n          </p>\\r\\n          <p>\\r\\n            Discount:\\r\\n            <mat-form-field class=\\\"form-size\\\">\\r\\n                <input matInput placeholder={{specialOffer.discount}} type=\\\"text\\\" [readonly]=\\\"true\\\">\\r\\n            </mat-form-field>\\r\\n          </p>\\r\\n          <p>\\r\\n              Total price with discount\\r\\n              <mat-form-field class=\\\"form-size\\\">\\r\\n                  <input matInput placeholder={{specialOffer.totalDiscounted}} type=\\\"text\\\" [readonly]=\\\"true\\\">\\r\\n              </mat-form-field>\\r\\n          </p>\\r\\n          <button *ngIf=\\\"canReserve\\\" type=\\\"submit\\\" mat-button class=\\\"background-primary text-floral-white\\\">\\r\\n              Submit\\r\\n          </button>\\r\\n      </form>\\r\\n  </div>\\r\\n\\r\\n\\r\\n<!--Rooms card list html-->\\r\\n<div *ngIf=\\\"searchDone\\\">\\r\\n  <mat-grid-list cols=\\\"3\\\" rowHeight=\\\"200px\\\">\\r\\n    <mat-grid-tile *ngFor=\\\"let room of foundRooms\\\">\\r\\n      <mat-card class=\\\"pointer\\\" (click) =\\\"clickRoom(foundRooms.indexOf(room))\\\">\\r\\n        <mat-card-content>\\r\\n          <h3>{{foundRooms.indexOf(room) + 1}}</h3>\\r\\n          Hotel: {{room.hotel}} <br>\\r\\n          Room number: {{room.room.number}} <br>\\r\\n          Room description: {{room.room.description}} <br>\\r\\n          Price: {{room.price}}\\r\\n        </mat-card-content>\\r\\n      </mat-card>\\r\\n    </mat-grid-tile>\\r\\n  </mat-grid-list>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n<!--Reserve room html-->\\r\\n<div *ngIf=\\\"RoomReservationTime\\\">\\r\\n  <form novalidate [formGroup]=\\\"reserveForm\\\" (ngSubmit)=\\\"onReserveRoomSubmit()\\\">\\r\\n    <p>\\r\\n      <mat-form-field class=\\\"half-width\\\">\\r\\n        <input matInput formControlName=\\\"startDate\\\" readonly placeholder=\\\"Start date\\\">\\r\\n      </mat-form-field>\\r\\n      <mat-form-field class=\\\"half-width\\\">\\r\\n        <input matInput formControlName=\\\"endDate\\\" readonly placeholder=\\\"End date\\\">\\r\\n      </mat-form-field>\\r\\n      <mat-form-field class=\\\"half-width\\\" style=\\\"height:50%\\\">\\r\\n        <input matInput formControlName=\\\"hotel\\\" readonly placeholder=\\\"Hotel\\\" type=\\\"text\\\">\\r\\n      </mat-form-field>\\r\\n      <mat-form-field class=\\\"half-width\\\">\\r\\n        <input matInput formControlName=\\\"roomNumber\\\" readonly placeholder=\\\"Room number\\\" type=\\\"number\\\">\\r\\n      </mat-form-field>\\r\\n      <mat-form-field class=\\\"half-width\\\">\\r\\n        <input matInput formControlName=\\\"beds\\\" readonly placeholder=\\\"Number of beds\\\" type=\\\"text\\\">\\r\\n      </mat-form-field>\\r\\n      <mat-form-field class=\\\"half-width\\\">\\r\\n        <input matInput formControlName=\\\"description\\\" readonly placeholder=\\\"Description\\\" type=\\\"text\\\">\\r\\n      </mat-form-field>\\r\\n      <mat-form-field class=\\\"half-width\\\">\\r\\n        <input matInput formControlName=\\\"price\\\" readonly placeholder=\\\"Price\\\" type=\\\"number\\\">\\r\\n      </mat-form-field>\\r\\n      <span *ngIf=\\\"canUseBonusPointsRoom\\\">\\r\\n        <mat-checkbox [(ngModel)] = \\\"usingBonusPointsRoom\\\" [ngModelOptions]=\\\"{standalone: true}\\\" (change)=\\\"roomCheckboxClicked()\\\">Use bonus points (100 for 10% off)</mat-checkbox>\\r\\n      </span>\\r\\n    </p>\\r\\n    <div fxLayout=\\\"row\\\">\\r\\n      <div fxFlex>\\r\\n        <button type=\\\"submit\\\" mat-button class=\\\"background-primary text-floral-white\\\"\\r\\n                [disabled]=\\\"userType!=='registeredUser'\\\">Submit</button>\\r\\n      </div>\\r\\n      <div fxFlex>\\r\\n        <h3>\\r\\n          Select special offers\\r\\n        </h3>\\r\\n        <table #tablespecialoffers2 mat-table [dataSource]=\\\"availableOffers\\\">\\r\\n          <ng-container matColumnDef=\\\"name\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef>Name</th>\\r\\n            <td mat-cell *matCellDef=\\\"let specialOffer\\\">{{specialOffer.name}} </td>\\r\\n          </ng-container>\\r\\n          <ng-container matColumnDef=\\\"price\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef>Price</th>\\r\\n            <td mat-cell *matCellDef=\\\"let specialOffer\\\">{{specialOffer.price}}</td>\\r\\n          </ng-container>\\r\\n          <tr mat-header-row *matHeaderRowDef=\\\"columnsToDisplaySpecialOffers1\\\"></tr>\\r\\n          <tr mat-row *matRowDef=\\\"let specialOffer; columns: columnsToDisplaySpecialOffers1\\\"\\r\\n          (click)=\\\"toggleRow(specialOffer.id)\\\" class=\\\"pointer\\\"\\r\\n          [ngClass]=\\\"{selectedRow: selectedOffers.indexOf(specialOffer.id)>=0}\\\"></tr>\\r\\n        </table>\\r\\n      </div>\\r\\n    </div>\\r\\n    <hr>\\r\\n  </form>\\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"CarReservationTime\\\">\\r\\n    <form (ngSubmit)=\\\"onCarReserve()\\\">\\r\\n        <p>\\r\\n            Registration: \\r\\n            <mat-form-field class=\\\"form-size\\\">\\r\\n                <input matInput placeholder={{car.registration}} type=\\\"text\\\" [readonly]=\\\"true\\\">\\r\\n            </mat-form-field>\\r\\n        </p>\\r\\n        <p>\\r\\n            Make:\\r\\n            <mat-form-field class=\\\"form-size\\\">\\r\\n                <input matInput placeholder={{car.make}} type=\\\"text\\\" [readonly]=\\\"true\\\">\\r\\n            </mat-form-field>\\r\\n        </p>\\r\\n        <p>\\r\\n            Seats:\\r\\n            <mat-form-field class=\\\"form-size\\\">\\r\\n                <input matInput placeholder={{car.seats}} type=\\\"text\\\" [readonly]=\\\"true\\\">\\r\\n            </mat-form-field>\\r\\n        </p>\\r\\n        <p>\\r\\n            Category:\\r\\n            <mat-form-field class=\\\"form-size\\\">\\r\\n                <input matInput placeholder={{car.category}} type=\\\"text\\\" [readonly]=\\\"true\\\">\\r\\n            </mat-form-field>\\r\\n        </p>\\r\\n        <p>\\r\\n            Start date:\\r\\n            <mat-form-field class=\\\"form-size\\\">\\r\\n                <input matInput placeholder={{car.start}} type=\\\"text\\\" [readonly]=\\\"true\\\">\\r\\n            </mat-form-field>\\r\\n        </p>\\r\\n        <p>\\r\\n            End date:\\r\\n            <mat-form-field class=\\\"form-size\\\">\\r\\n                <input matInput placeholder={{car.end}} type=\\\"text\\\" [readonly]=\\\"true\\\">\\r\\n            </mat-form-field>\\r\\n        </p>\\r\\n        <p>\\r\\n            Total days:\\r\\n            <mat-form-field class=\\\"form-size\\\">\\r\\n                <input matInput placeholder={{car.days}} type=\\\"text\\\" [readonly]=\\\"true\\\">\\r\\n            </mat-form-field>\\r\\n        </p>\\r\\n        <p>\\r\\n            Price per day:\\r\\n            <mat-form-field class=\\\"form-size\\\">\\r\\n                <input matInput placeholder={{car.price}} type=\\\"text\\\" [readonly]=\\\"true\\\">\\r\\n            </mat-form-field>\\r\\n        </p>\\r\\n        <p>\\r\\n            Total price:\\r\\n            <mat-form-field class=\\\"form-size\\\">\\r\\n                <input matInput placeholder={{car.showPrice}} type=\\\"text\\\" [readonly]=\\\"true\\\">\\r\\n            </mat-form-field>\\r\\n        </p>\\r\\n        <p *ngIf=\\\"canUseBonusPointsCar\\\">\\r\\n            <mat-checkbox [(ngModel)] = \\\"car.usingBonus\\\" [ngModelOptions]=\\\"{standalone: true}\\\" (change)=\\\"carCheckboxClicked()\\\">Use bonus points (100 for 10% off)</mat-checkbox>\\r\\n        </p>\\r\\n        <button *ngIf=\\\"canReserve\\\" type=\\\"submit\\\" mat-button class=\\\"background-primary text-floral-white\\\">\\r\\n            Submit\\r\\n        </button>\\r\\n    </form>\\r\\n</div>\"","module.exports = \"td.mat-cell {\\n  padding: 15px; }\\n\\nth.mat-header-cell {\\n  padding: 15px; }\\n\\n.selectedRow {\\n  background-color: #512DA8; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcmVzZXJ2YXRpb24tZmxvdy9EOlxcRHVzYW5cXDFGYWtzXFxNUlNfSVNBXFxNUlNfSVNBX1RpbTEyXFxEYXNUcmF2ZWxTaXRlL3NyY1xcYXBwXFxyZXNlcnZhdGlvbi1mbG93XFxyZXNlcnZhdGlvbi1mbG93LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksYUFBYSxFQUFBOztBQUdqQjtFQUNFLGFBQWEsRUFBQTs7QUFJZjtFQUNFLHlCQUF5QixFQUFBIiwiZmlsZSI6InNyYy9hcHAvcmVzZXJ2YXRpb24tZmxvdy9yZXNlcnZhdGlvbi1mbG93LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGQubWF0LWNlbGwge1xyXG4gICAgcGFkZGluZzogMTVweDtcclxuICB9XHJcbiAgXHJcbnRoLm1hdC1oZWFkZXItY2VsbCB7XHJcbiAgcGFkZGluZzogMTVweDtcclxufVxyXG5cclxuXHJcbi5zZWxlY3RlZFJvd3tcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNTEyREE4O1xyXG59Il19 */\"","import { Component, OnInit, ViewChild, Inject } from '@angular/core';\r\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\r\nimport { HotelApi, RoomApi, LoopBackConfig, HotelSpecialOfferApi, HotelSpecialOffer, RoomReservationApi, MyuserApi, ReservationOfferApi, RoomReservation, Room, ReservationOffer, CarApi, CarPrice, Car, CarReservationApi, CarSpecialOfferApi } from '../shared/sdk';\r\nimport { ItemService } from '../services/item.service';\r\nimport { API_VERSION } from '../shared/baseUrl';\r\nimport { Router } from '@angular/router';\r\nimport { MatSnackBar, MatTable } from '@angular/material';\r\nimport { LoginServiceService } from '../login-service.service';\r\n\r\n@Component({\r\n  selector: 'app-reservation-flow',\r\n  templateUrl: './reservation-flow.component.html',\r\n  styleUrls: ['./reservation-flow.component.scss']\r\n})\r\nexport class ReservationFlowComponent implements OnInit {\r\n\r\n  constructor(private fb: FormBuilder,\r\n    @Inject('baseURL') private baseURL,\r\n    private hotelservice: HotelApi,\r\n    private roomservice: RoomApi,\r\n    private _router: Router,\r\n    private itemservice: ItemService,\r\n    private roomreservationservice: RoomReservationApi,\r\n    private hotelspecialofferservice: HotelSpecialOfferApi,\r\n    private myuserservice: MyuserApi,\r\n    private specialofferservice: HotelSpecialOfferApi,\r\n    private reservationspecialofferservice: ReservationOfferApi,\r\n    private loginService: LoginServiceService,\r\n    private reservationofferservice: ReservationOfferApi,\r\n    public snackBar: MatSnackBar,\r\n    private reservationService: CarReservationApi,\r\n    private carDiscountService: CarSpecialOfferApi,\r\n    private carservice: CarApi) {\r\n    this.createSearchRoomsForm();\r\n    this.createSearchForm();\r\n    LoopBackConfig.setBaseURL(baseURL);\r\n    LoopBackConfig.setApiVersion(API_VERSION);\r\n    this.minDate.setHours(0, 0, 0, 0);\r\n    this.createReserveForm();\r\n\r\n    loginService.user.subscribe(data => {\r\n      if (data) {\r\n        this.userType = data.user.type;\r\n        if (this.userType === 'registeredUser') {\r\n          this.canReserve = true;\r\n          this.userId = data.user.id\r\n          \r\n        }\r\n      }\r\n    });\r\n   }\r\n\r\n  searchRoomsActive = false;\r\n  minDate = new Date();\r\n  searchDone = false;\r\n  qSearchDone = false;\r\n  reservationsInfo = [];\r\n  foundRooms: any[];\r\n  RoomReservationTime = false;\r\n  room: any;\r\n  reserveForm: FormGroup;\r\n  availableOffers: HotelSpecialOffer[];\r\n  userType;\r\n  selectedOffers = [];\r\n  foundReservations: RoomReservation[];\r\n  roomIsReserved = false;\r\n  specialOffersDict = {};\r\n  columnsToDisplayReservations = ['hotel', 'roomNumber', 'beds', 'startDate', 'endDate', 'price'];\r\n  columnsToDisplaySpecialOffers = ['name'];\r\n  columnsToDisplaySpecialOffers1 = ['name', 'price'];\r\n  specialOffers = [];\r\n  selectedReservationId;\r\n  displayQuicks = false;\r\n  isCarSearch = false;\r\n  searchForm: FormGroup;\r\n  foundCars: Car[];\r\n  CarReservationTime = false;\r\n  car: any;\r\n  canReserve = false;\r\n  userId;\r\n  carIsReserved = false;\r\n  displayCarQuicks = false;\r\n  foundDiscounts;\r\n  haveCarQuicks = false;\r\n  specialOffer;\r\n  CarQuickReservationTime = false;\r\n  canUseBonusPointsCar = false;\r\n  canUseBonusPointsRoom = false;\r\n  usingBonusPointsRoom = false;\r\n  realPrice = 0;\r\n\r\n\r\n  @ViewChild('tablereservations') tableReservations: MatTable<any>;\r\n  @ViewChild('tablespecialoffers') tableSpecialOffers: MatTable<any>;\r\n  @ViewChild('tablespecialoffers2') tableSpecialOffers2: MatTable<any>;\r\n\r\n  switchToRoomSearch() {\r\n    this.searchRoomsActive = true;\r\n    this.searchDone = false;\r\n    this.RoomReservationTime = false;\r\n    this.qSearchDone = false;\r\n    this.displayQuicks = false;\r\n    this.displayCarQuicks = false;\r\n    this.isCarSearch = false;\r\n    this.CarReservationTime = false;\r\n    this.onSearchQRoomsSubmit();\r\n    this.CarQuickReservationTime = false;\r\n    this.canUseBonusPointsCar = false;\r\n    this.canUseBonusPointsRoom = false;\r\n    this.usingBonusPointsRoom = false;\r\n  }\r\n\r\n\r\n  switchToCarSearch() {\r\n    this.searchRoomsActive = false;\r\n    this.searchDone = false;\r\n    this.RoomReservationTime = false;\r\n    this.qSearchDone = false;\r\n    this.displayQuicks = false;\r\n    this.displayCarQuicks = false;\r\n    this.isCarSearch = true;\r\n    this.CarReservationTime = false;\r\n    this.onSearchQCarsSubmit();\r\n    this.CarQuickReservationTime = false;\r\n    this.canUseBonusPointsCar = false;\r\n    this.canUseBonusPointsRoom = false;\r\n    this.usingBonusPointsRoom = false;\r\n  }\r\n\r\n\r\n\r\n  searchRoomsForm: FormGroup;\r\n  @ViewChild('fformSearchRooms') searchRoomsFormDirective;\r\n\r\n  searchRoomsFormErrors = {\r\n    'beds': '',\r\n    'price': ''\r\n  };\r\n\r\n\r\n  searchRoomsFormValidationMessages = {\r\n    'beds': {\r\n      'required': 'Number of beds is required',\r\n      'min': 'Number of beds has to be higher than 0'\r\n    },\r\n    'price': {\r\n      'min': 'Price has to be higher than 0'\r\n    }\r\n  };\r\n\r\n  createReserveForm() {\r\n    this.reserveForm = this.fb.group({\r\n      startDate: '',\r\n      endDate: '',\r\n      hotel: '',\r\n      roomNumber: '',\r\n      beds: '',\r\n      description: '',\r\n      price: ''\r\n    });\r\n  }\r\n\r\n  toggleQuicks() {\r\n    this.displayQuicks = !this.displayQuicks;\r\n  }\r\n\r\n  selectRow(id) {\r\n    this.selectedReservationId = id;\r\n    this.specialOffers = this.specialOffersDict[id];\r\n  }\r\n\r\n\r\n  //Za quick rezervaciju\r\n  reserve() {\r\n    let i = 0;\r\n    let roomId = 1;\r\n    for (const reservationInfo of this.reservationsInfo) {\r\n      if (reservationInfo.reservation.id === this.selectedReservationId) {\r\n        roomId = reservationInfo.room.id;\r\n        break;\r\n      }\r\n      i++;\r\n    }\r\n    this.roomreservationservice.quickReservation(this.selectedReservationId,\r\n      this.myuserservice.getCachedCurrent().id, roomId)\r\n      .subscribe(reservation => {\r\n        this.reservationsInfo.splice(i, 1);\r\n        this.tableReservations.renderRows();\r\n        this.openSnackBar('Reservation successful', 'Dismiss');\r\n      }, err => {\r\n        this.openSnackBar('Reservation failed. Please search and try again', 'Dismiss');\r\n      });\r\n  }\r\n\r\n\r\n  createSearchRoomsForm() {\r\n    this.searchRoomsForm = this.fb.group({\r\n      startDate: [new Date('July 5, 2019 00:00:00'), [Validators.required]],\r\n      endDate: [new Date('July 15, 2019 00:00:00'), [Validators.required]],\r\n      beds : [0, [Validators.required, Validators.min(1)]],\r\n      price: [0, Validators.min(1)],\r\n      address: '',\r\n      name: ''\r\n    });\r\n\r\n    this.searchRoomsForm.valueChanges\r\n      .subscribe(data => this.onValueChangedSearchRooms(data));\r\n    this.onValueChangedSearchRooms();\r\n  }\r\n\r\n  onValueChangedSearchRooms(data?: any)  {\r\n    if (!this.searchRoomsForm) {return; }\r\n    const form = this.searchRoomsForm;\r\n    for (const field in this.searchRoomsFormErrors) {\r\n      if (this.searchRoomsFormErrors.hasOwnProperty(field)) {\r\n        this.searchRoomsFormErrors[field] = '';\r\n        const control = form.get(field);\r\n        if (control && !control.valid) {\r\n          const messages = this.searchRoomsFormValidationMessages[field];\r\n          for (const key in control.errors) {\r\n            if (control.errors.hasOwnProperty(key)) {\r\n              this.searchRoomsFormErrors[field] += messages[key] + ' ';\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n\r\n  updateReserveForm() {\r\n    this.realPrice = this.room.room.price;\r\n    this.reserveForm.reset({\r\n      startDate: this.room.startDate.getDate() + '/' + (this.room.startDate.getMonth() + 1) + '/' + this.room.startDate.getFullYear(),\r\n      endDate: this.room.endDate.getDate() + '/' + (this.room.endDate.getMonth() + 1) + '/' + this.room.endDate.getFullYear(),\r\n      hotel: this.room.room.hotel,\r\n      roomNumber: this.room.room.room.number,\r\n      beds: this.room.room.room.beds,\r\n      description: this.room.room.room.description,\r\n      price: this.room.room.price\r\n    });\r\n  }\r\n\r\n  onSearchRoomsSubmit() {\r\n    const data = this.searchRoomsForm.value;\r\n    this.itemservice.findAvailableRooms1(new Date(data.startDate), new Date(data.endDate),\r\n      data.address, data.price, data.beds)\r\n      .subscribe(result => {\r\n        this.foundRooms = result.retval;\r\n        this.searchDone = true;\r\n        this.searchRoomsActive = false;\r\n      }, err => {\r\n        this.openSnackBar('Something went wrong. Please try again', 'Dismiss');\r\n      });\r\n  }\r\n\r\n\r\n  clickRoom(index: number) {\r\n    this.itemservice.setReservableRoom({'room': this.foundRooms[index],\r\n    'startDate': this.searchRoomsForm.value.startDate,\r\n    'endDate': this.searchRoomsForm.value.endDate});\r\n    \r\n\r\n    this.room = this.itemservice.getReservableRoom();\r\n    this.updateReserveForm();\r\n    this.hotelspecialofferservice.find({where: {hotelId: this.room.room.hotelId}})\r\n      .subscribe((specialOffers: HotelSpecialOffer[]) => {\r\n        this.availableOffers = specialOffers;\r\n        this.RoomReservationTime = true;\r\n\r\n      }, err => this.openSnackBar('Can not find special offers for this hotel', 'Dismiss'));\r\n\r\n      if (this.itemservice.getHeader().getBonusPoints() >= 100) {\r\n        this.canUseBonusPointsRoom = true;\r\n      }\r\n    \r\n  }\r\n\r\n  openSnackBar(message: string, action: string) {\r\n    this.snackBar.open(message, action, {\r\n      duration: 2000,\r\n    });\r\n  }\r\n\r\n  onReserveRoomSubmit() {\r\n    this.roomreservationservice.makeReservation(this.room.startDate.toISOString(),\r\n      this.room.endDate.toISOString(), this.room.room.room.id,\r\n      this.myuserservice.getCachedCurrent().id, this.room.room.price, '', this.room.room.hotelId, this.usingBonusPointsRoom)\r\n      .subscribe(result => {\r\n        this.openSnackBar('Reserved succesfully', 'Dismiss');\r\n        if (this.usingBonusPointsRoom) {\r\n          this.itemservice.getHeader().removeBonusPoints();\r\n        }\r\n        this.roomIsReserved = true;\r\n        this.RoomReservationTime = false;\r\n        this.searchDone = false;\r\n        for (const offerId of this.selectedOffers) {\r\n          this.reservationofferservice.create({'specialOfferId': offerId, 'roomReservationId': result.retval.id})\r\n            .subscribe(() => console.log());\r\n        }\r\n      }, err => {\r\n        this.openSnackBar('Can not reserve on this date. Please search and try again.', 'Dismiss');\r\n      });\r\n  }\r\n\r\n  onSearchQRoomsSubmit() {\r\n    this.roomreservationservice.find({where: {\r\n        startDate: new Date('July 5, 2019 00:00:00'),\r\n        endDate: new Date('July 15, 2019 00:00:00'),\r\n        myuserId: null\r\n      }}).subscribe((reservations: RoomReservation[]) => {\r\n        this.qSearchDone = true;\r\n        this.foundReservations = reservations;\r\n        console.log(\"Quick search done\");\r\n        this.reservationsInfo = [];\r\n        const done = new Promise((resolve, reject) => {\r\n        let index = 0;\r\n        if (this.foundReservations.length == 0) {\r\n          resolve();\r\n        }\r\n        for (const roomReservation of this.foundReservations) {\r\n          this.roomservice.findById(roomReservation.roomId)\r\n            .subscribe((room: Room) => {\r\n              this.hotelservice.findById(roomReservation.hotelId)\r\n                .subscribe((hotel) => {\r\n                  this.reservationsInfo.push({reservation: roomReservation, room: room, hotel: hotel});\r\n                  this.reservationspecialofferservice.find({where: {'roomReservationId': roomReservation.id}})\r\n                    .subscribe((reservationOfferIds: ReservationOffer[]) => {\r\n                      const done1 = new Promise((resolve1, reject1) => {\r\n                        if (reservationOfferIds.length === 0) {\r\n                          resolve1();\r\n                        }\r\n                        let indexOffers = 0;\r\n                        const offers = [];\r\n                        for (const reservationOfferId of reservationOfferIds) {\r\n                          this.specialofferservice.findById(reservationOfferId.specialOfferId)\r\n                            .subscribe((specialOffer: HotelSpecialOffer) => {\r\n                              offers.push(specialOffer);\r\n                              indexOffers++;\r\n                              if (indexOffers === reservationOfferIds.length) {\r\n                                this.specialOffersDict[roomReservation.id] = offers;\r\n                                resolve1();\r\n                              }\r\n                            });\r\n                        }\r\n                      });\r\n                      done1\r\n                        .then(() => {\r\n\r\n                          index++;\r\n                          if (index === this.foundReservations.length) {\r\n                            resolve();\r\n                          }\r\n                        });\r\n                    });\r\n                }, err => this.openSnackBar('Something went wrong. Please try again.', 'Dismiss'));\r\n            }, err => this.openSnackBar('Something went wrong. Please try again.', 'Dismiss'));\r\n        }\r\n      });\r\n      done.then(() => {\r\n        console.log(\"Actually finished\");\r\n        console.log(this.reservationsInfo);\r\n      });\r\n    }, err => this.openSnackBar('Something went wrong. Please try again.', 'Dismiss'));\r\n  }\r\n\r\n  searchFormErrors = {\r\n    'make': '',\r\n    'seats': '',\r\n    'rentalService': ''\r\n  };\r\n\r\n  searchFormValidationMessages = {\r\n    'make': {\r\n      'required': 'Make is required',\r\n      'minv': 'Start date has to be before end date',\r\n      'ming': 'Start date has to be after today'\r\n    },\r\n    'seats': {\r\n      'required': 'Seats are required',\r\n      'pattern': 'Seats have to be a number'\r\n    },\r\n    'rentalService': {}\r\n  };\r\n\r\n  onSearchValueChanged(data?: any) {\r\n    if (!this.searchForm) {\r\n      return;\r\n    }\r\n    const form = this.searchForm;\r\n    for (const field in this.searchFormErrors) {\r\n      if (this.searchFormErrors.hasOwnProperty(field)) {\r\n        //clear previous error message\r\n        this.searchFormErrors[field] = '';\r\n        const control = form.get(field);\r\n        if (control && !control.valid) {\r\n          const messages = this.searchFormValidationMessages[field];\r\n          for (const key in control.errors) {\r\n            if (control.errors.hasOwnProperty(key)) {\r\n              this.searchFormErrors[field] += messages[key] + ' ';\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    const today = new Date();\r\n    const startDate = new Date(form.get('startDate').value);\r\n    const endDate = new Date(form.get('endDate').value);\r\n\r\n    if (startDate < today) {\r\n      this.searchFormErrors['startDate'] += this.searchFormValidationMessages['startDate']['ming'] + ' ';\r\n      this.searchForm.controls['startDate'].setErrors({'ming' : true});\r\n    }\r\n    if (startDate > endDate) {\r\n      this.searchFormErrors['startDate'] += this.searchFormValidationMessages['startDate']['minv'] + ' ';\r\n      this.searchForm.controls['startDate'].setErrors({'minv' : true});\r\n    }\r\n  }\r\n\r\n  createSearchForm() {\r\n    this.searchForm = this.fb.group({\r\n      startDate: [new Date('July 5, 2019 00:00:00'), Validators.required],\r\n      endDate: [new Date('July 15, 2019 00:00:00') , Validators.required],\r\n      make: [''],\r\n      seats: ['', Validators.pattern],\r\n      rentalService: ['']\r\n    });\r\n    this.searchForm.valueChanges\r\n      .subscribe(data => this.onSearchValueChanged(data));\r\n    this.onSearchValueChanged();\r\n  }\r\n\r\n\r\n  onSearchSubmit() {\r\n\r\n    var make = null;\r\n    var seats = null;\r\n    var rentalService = null;\r\n    var startDate = new Date(this.searchForm.value.startDate).toJSON();\r\n    var endDate = new Date(this.searchForm.value.endDate).toJSON();\r\n\r\n    if (this.searchForm.value.make != '') {\r\n      make = this.searchForm.value.make;\r\n    }\r\n    if (this.searchForm.value.seats != '') {\r\n      seats = this.searchForm.value.seats;\r\n    }\r\n    if (this.searchForm.value.rentalService != '') {\r\n      rentalService = this.searchForm.value.rentalService;\r\n    }\r\n\r\n    this.carservice.searchCars(startDate, endDate, make, seats, rentalService)\r\n    .subscribe(\r\n      (result) => {\r\n        result = result.retval\r\n        this.itemservice.getPrices()\r\n        .subscribe(\r\n          (result_prices) => {\r\n            var result_cars = result as Car[];\r\n            this.matchCarsAndPrices(result_cars, result_prices as CarPrice[], this.searchForm.value.startDate);\r\n            this.foundCars = result_cars;\r\n            if (this.foundCars.length == 0) {\r\n              this.openSnackBar(\"No cars match search parameters\", \"Dismiss\");\r\n            }\r\n          },\r\n          (err) => {\r\n            this.openSnackBar(\"Could not get car prices, stopping search\", \"Dismiss\");\r\n          }\r\n        )\r\n      },\r\n      (err) => {\r\n        }\r\n      );\r\n  }\r\n\r\n  matchCarsAndPrices(cars, prices: CarPrice[], start) {\r\n    start = new Date(start);\r\n\r\n    for (let car of cars) {\r\n      car.price = 0;\r\n      car.start = new Date(0);\r\n      for (let price of prices) {\r\n        if (car.rentalServiceId == price.rentalServiceId) {\r\n          if (start > price.start && car.start < price.start) {\r\n            car.start = price.start;\r\n            car.price = price['cat' + car.category + 'Price'];\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  inspect(clicked_card: any) {\r\n    var car_id = clicked_card.path[0].id;\r\n    for (let car of this.foundCars) {\r\n      if (car.id == car_id) {\r\n        (car as any).start = this.searchForm.value.startDate;\r\n        (car as any).end = this.searchForm.value.endDate;\r\n        this.itemservice.setReservableCar(car);\r\n        \r\n\r\n        var temp = this.itemservice.getReservableCar();\r\n          if (temp) {\r\n            this.car = temp;\r\n            this.car.usingBonus = false;\r\n          } else {\r\n            this.car =  {\r\n              'registration' : \"\",\r\n              'start': 0,\r\n              'end': 0,\r\n              'days': 0,\r\n              'seats': 0,\r\n              'category': '',\r\n              'usingBonus': false\r\n          }\r\n    }\r\n    var oneDay = 24*60*60*1000; // hours*minutes*seconds*milliseconds\r\n    var firstDate = new Date(this.car.start);\r\n    var secondDate = new Date(this.car.end);\r\n    this.car.days = 1 + Math.round(Math.abs((firstDate.getTime() - secondDate.getTime())/(oneDay)));\r\n    this.car.totalPrice = this.car.days * this.car.price;\r\n    this.car.showPrice = this.car.totalPrice;\r\n    this.CarReservationTime = true;\r\n    if (this.itemservice.getHeader().getBonusPoints() >= 100) {\r\n      this.canUseBonusPointsCar = true;\r\n    }\r\n      }\r\n    }\r\n  }\r\n\r\n  inspectv2(clicked_card: any) {\r\n    var discount_index = clicked_card.path[0].id;\r\n    this.itemservice.setCarSpecialOffer(this.foundDiscounts[discount_index]);\r\n    \r\n    var temp = this.itemservice.getCarSpecialOffer();\r\n      if (temp) {\r\n        this.specialOffer = temp;\r\n      } else {\r\n        this.specialOffer = {\r\n          'nmbr': 0,\r\n          'registration': '',\r\n          'endDate': '',\r\n          'startDate': '',\r\n          'basePrice': 0,\r\n          'discount': 0\r\n        }\r\n      }\r\n\r\n      this.CarQuickReservationTime = true;\r\n\r\n  }\r\n\r\n\r\n  onCarReserve() {\r\n    this.car.registration = this.car.registration.trim();\r\n    this.carservice.findOne({where: {\"registration\": this.car.registration}})\r\n    .subscribe(\r\n      (result) => {\r\n        var car_result = result as Car;\r\n        var startDate = new Date(this.car.start).toJSON();\r\n        var endDate = new Date(this.car.end).toJSON();\r\n\r\n        var temp_price = this.car.totalPrice;\r\n        if (this.car.usingBonus)  {\r\n          temp_price = Math.round(this.car.totalPrice * 0.9);\r\n        }\r\n        \r\n        this.reservationService.makeReservation(startDate, endDate, car_result.id, this.userId, temp_price, car_result.rentalServiceId, this.car.usingBonus)\r\n        .subscribe(\r\n          (result) => {\r\n            this.openSnackBar(\"Reservation successfuly made\", \"Dismiss\");\r\n            if (this.car.usingBonus) {\r\n              this.itemservice.getHeader().removeBonusPoints();\r\n            }\r\n            this.isCarSearch = false;\r\n            this.CarReservationTime = false;\r\n            this.CarQuickReservationTime = false;\r\n            this.carIsReserved = true;\r\n          },\r\n          (err) => {\r\n            this.openSnackBar(\"Failed to make reservation\", \"Dismiss\");\r\n          }\r\n        )\r\n      },\r\n      (err) => {\r\n        this.openSnackBar(\"Car does not exist\", \"Dismiss\");\r\n      }\r\n    )\r\n  }\r\n\r\n  homeClick() {\r\n    this._router.navigate(['/home'])\r\n  }\r\n\r\n\r\n  toggleQuicksCar() {\r\n    this.displayCarQuicks = !this.displayCarQuicks;\r\n  }\r\n\r\n  onSearchQCarsSubmit() {\r\n    this.carDiscountService.find({where: {\r\n      startDate: {\r\n        gte: new Date('July 5, 2019 00:00:00')\r\n      },\r\n      endDate : {\r\n        lte: new Date('July 15, 2019 00:00:00')\r\n      }\r\n    }})\r\n    .subscribe(\r\n      (result) => {\r\n        var i = 0;\r\n        for (let mini_result of result) {\r\n          var temp = mini_result as any;\r\n          temp.nmbr = i;\r\n          i++;\r\n          var oneDay = 24*60*60*1000; // hours*minutes*seconds*milliseconds\r\n          temp.startDate = new Date(temp.startDate);\r\n          temp.endDate = new Date(temp.endDate);\r\n          temp.days = 1 + Math.round(Math.abs((temp.startDate.getTime() - temp.endDate.getTime())/(oneDay)));\r\n          temp.startDate = temp.startDate.toLocaleDateString(\"en-US\");\r\n          temp.endDate = temp.endDate.toLocaleDateString(\"en-US\");\r\n          temp.total = temp.basePrice * temp.days;\r\n          temp.totalDiscounted = Math.round((100 - temp.discount) / 100 * temp.total);\r\n        }\r\n        this.foundDiscounts = result;\r\n        if (result.length == 0) {\r\n          this.haveCarQuicks = false;\r\n        } else {\r\n          this.haveCarQuicks = true;\r\n        }\r\n        console.log(this.foundDiscounts);\r\n      },\r\n      (err) => {\r\n        this.openSnackBar(\"Could not retrieve discounts\", \"Dismiss\");\r\n      }\r\n    )\r\n  }\r\n\r\n  onQuickCarSubmit() {\r\n    console.log(this.specialOffer);\r\n    this.carDiscountService.quicklyReserve(this.specialOffer.carsId, this.specialOffer.id, this.userId)\r\n    .subscribe((result) => {\r\n      this.openSnackBar(\"Successfully reserved special offer\", \"Dismiss\");\r\n      this.isCarSearch = false;\r\n      this.CarReservationTime = false;\r\n      this.CarQuickReservationTime = false;\r\n      this.carIsReserved = true;\r\n    },\r\n    (err) => {\r\n      this.openSnackBar(\"Failed to make quick reservation\", \"Dismiss\");\r\n    })\r\n  }\r\n\r\n\r\n  toggleRow(id: number) {\r\n    let specialOffer = null;\r\n    for (const offer of this.availableOffers) {\r\n      if (offer.id === id) {\r\n        specialOffer = offer;\r\n        break;\r\n      }\r\n    }\r\n    const index = this.selectedOffers.indexOf(id);\r\n    const price = this.reserveForm.value.price;\r\n    if (index >= 0)  {\r\n      this.selectedOffers.splice(index, 1);\r\n      this.reserveForm.patchValue({'price': price - specialOffer.price});\r\n    } else  {\r\n      this.selectedOffers.push(id);\r\n      this.reserveForm.patchValue({'price': price + specialOffer.price});\r\n    }\r\n  }\r\n\r\n  roomCheckboxClicked() {\r\n    if (!this.usingBonusPointsRoom) {\r\n      this.reserveForm.patchValue({\r\n        'price': Math.round(this.realPrice * 0.1 + this.reserveForm.value.price)}\r\n      )\r\n    } else {\r\n      this.reserveForm.patchValue({\r\n        price: Math.round(this.reserveForm.value.price - 0.1 * this.realPrice)}\r\n      )\r\n    }\r\n    \r\n  }\r\n\r\n\r\n  carCheckboxClicked() {\r\n    console.log(\"Wuhu\");\r\n    if (this.car.usingBonus) {\r\n       this.car.showPrice = this.car.totalPrice - Math.round(this.car.totalPrice * 0.1)\r\n    } else {\r\n       this.car.showPrice = this.car.totalPrice;\r\n    }\r\n  }\r\n\r\n}\r\n","module.exports = \"<form (ngSubmit)=\\\"onSubmit()\\\">\\r\\n    <p>\\r\\n        Registration: \\r\\n        <mat-form-field class=\\\"form-size\\\">\\r\\n            <input matInput placeholder={{specialOffer.registration}} type=\\\"text\\\" [readonly]=\\\"true\\\">\\r\\n        </mat-form-field>\\r\\n    </p>\\r\\n    <p>\\r\\n        Start date:\\r\\n        <mat-form-field class=\\\"form-size\\\">\\r\\n            <input matInput placeholder={{specialOffer.startDate}} type=\\\"text\\\" [readonly]=\\\"true\\\">\\r\\n        </mat-form-field>\\r\\n    </p>\\r\\n    <p>\\r\\n        End date:\\r\\n        <mat-form-field class=\\\"form-size\\\">\\r\\n            <input matInput placeholder={{specialOffer.endDate}} type=\\\"text\\\" [readonly]=\\\"true\\\">\\r\\n        </mat-form-field>\\r\\n    </p>\\r\\n    <p>\\r\\n        Total days:\\r\\n        <mat-form-field class=\\\"form-size\\\">\\r\\n            <input matInput placeholder={{specialOffer.days}} type=\\\"text\\\" [readonly]=\\\"true\\\">\\r\\n        </mat-form-field>\\r\\n    </p>\\r\\n    <p>\\r\\n      Total price without discount:\\r\\n      <mat-form-field class=\\\"form-size\\\">\\r\\n          <input matInput placeholder={{specialOffer.total}} type=\\\"text\\\" [readonly]=\\\"true\\\">\\r\\n      </mat-form-field>\\r\\n    </p>\\r\\n    <p>\\r\\n      Discount:\\r\\n      <mat-form-field class=\\\"form-size\\\">\\r\\n          <input matInput placeholder={{specialOffer.discount}} type=\\\"text\\\" [readonly]=\\\"true\\\">\\r\\n      </mat-form-field>\\r\\n    </p>\\r\\n    <p>\\r\\n        Total price with discount\\r\\n        <mat-form-field class=\\\"form-size\\\">\\r\\n            <input matInput placeholder={{specialOffer.totalDiscounted}} type=\\\"text\\\" [readonly]=\\\"true\\\">\\r\\n        </mat-form-field>\\r\\n    </p>\\r\\n    <button *ngIf=\\\"canReserve\\\" type=\\\"submit\\\" mat-button class=\\\"background-primary text-floral-white\\\">\\r\\n        Submit\\r\\n    </button>\\r\\n</form>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Jlc2VydmUtY2FyLXNwZWNpYWwvcmVzZXJ2ZS1jYXItc3BlY2lhbC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { ItemService } from '../services/item.service';\r\nimport { LoginServiceService } from '../login-service.service';\r\nimport { MatSnackBar } from '@angular/material';\r\nimport { LoopBackConfig, CarSpecialOfferApi } from '../shared/sdk';\r\nimport { API_VERSION } from '../shared/baseUrl';\r\n\r\n@Component({\r\n  selector: 'app-reserve-car-special',\r\n  templateUrl: './reserve-car-special.component.html',\r\n  styleUrls: ['./reserve-car-special.component.scss']\r\n})\r\nexport class ReserveCarSpecialComponent implements OnInit {\r\n\r\n\r\n  specialOffer;\r\n  canReserve = false;\r\n  userType;\r\n  userId;\r\n\r\n  constructor(@Inject('baseURL') private baseURL,\r\n    private itemService: ItemService,\r\n     private loginService: LoginServiceService,\r\n     private snackBar: MatSnackBar,\r\n     private specialOfferService: CarSpecialOfferApi) { \r\n      LoopBackConfig.setBaseURL(baseURL);\r\n      LoopBackConfig.setApiVersion(API_VERSION);\r\n      //this.specialOffer = this.itemService.getCarSpecialOffer();\r\n      var temp = this.itemService.getCarSpecialOffer();\r\n      if (temp) {\r\n        this.specialOffer = temp;\r\n      } else {\r\n        this.specialOffer = {\r\n          'nmbr': 0,\r\n          'registration': '',\r\n          'endDate': '',\r\n          'startDate': '',\r\n          'basePrice': 0,\r\n          'discount': 0\r\n        }\r\n      }\r\n      loginService.user\r\n      .subscribe(data => {\r\n        if (data) {\r\n          this.userType = data.user.type;\r\n          this.userId = data.user.id;\r\n          if (this.userType == \"registeredUser\") {\r\n            this.canReserve = true;\r\n          }\r\n        }\r\n      });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  openSnackBar(message: string, action: string) {\r\n    this.snackBar.open(message, action, {\r\n      duration: 2000,\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    console.log(\"Hellou\");\r\n    console.log(this.specialOffer);\r\n    this.specialOfferService.quicklyReserve(this.specialOffer.carsId, this.specialOffer.id, this.userId)\r\n    .subscribe((result) => {\r\n      this.openSnackBar(\"Successfully reserved special offer\", \"Dismiss\");\r\n    },\r\n    (err) => {\r\n      this.openSnackBar(\"Failed to make quick reservation\", \"Dismiss\");\r\n    })\r\n  }\r\n\r\n}\r\n","module.exports = \"<div>\\r\\n  <form novalidate [formGroup]=\\\"reserveForm\\\" (ngSubmit)=\\\"onReserveRoomSubmit()\\\">\\r\\n    <p>\\r\\n      <mat-form-field class=\\\"half-width\\\">\\r\\n        <input matInput formControlName=\\\"startDate\\\" readonly placeholder=\\\"Start date\\\">\\r\\n      </mat-form-field>\\r\\n      <mat-form-field class=\\\"half-width\\\">\\r\\n        <input matInput formControlName=\\\"endDate\\\" readonly placeholder=\\\"End date\\\">\\r\\n      </mat-form-field>\\r\\n      <mat-form-field class=\\\"half-width\\\" style=\\\"height:50%\\\">\\r\\n        <input matInput formControlName=\\\"hotel\\\" readonly placeholder=\\\"Hotel\\\" type=\\\"text\\\">\\r\\n      </mat-form-field>\\r\\n      <mat-form-field class=\\\"half-width\\\">\\r\\n        <input matInput formControlName=\\\"roomNumber\\\" readonly placeholder=\\\"Room number\\\" type=\\\"number\\\">\\r\\n      </mat-form-field>\\r\\n      <mat-form-field class=\\\"half-width\\\">\\r\\n        <input matInput formControlName=\\\"beds\\\" readonly placeholder=\\\"Number of beds\\\" type=\\\"text\\\">\\r\\n      </mat-form-field>\\r\\n      <mat-form-field class=\\\"half-width\\\">\\r\\n        <input matInput formControlName=\\\"description\\\" readonly placeholder=\\\"Description\\\" type=\\\"text\\\">\\r\\n      </mat-form-field>\\r\\n      <mat-form-field class=\\\"half-width\\\">\\r\\n        <input matInput formControlName=\\\"price\\\" readonly placeholder=\\\"Price\\\" type=\\\"number\\\">\\r\\n      </mat-form-field>\\r\\n      <span *ngIf=\\\"canUseBonusPointsRoom\\\">\\r\\n        <mat-checkbox [(ngModel)] = \\\"usingBonusPointsRoom\\\" [ngModelOptions]=\\\"{standalone: true}\\\" (change)=\\\"roomCheckboxClicked()\\\">Use bonus points (100 for 10% off)</mat-checkbox>\\r\\n      </span>\\r\\n    </p>\\r\\n    <div fxLayout=\\\"row\\\">\\r\\n      <div fxFlex>\\r\\n        <button type=\\\"submit\\\" mat-button class=\\\"background-primary text-floral-white\\\"\\r\\n                [disabled]=\\\"userType!=='registeredUser'\\\">Submit</button>\\r\\n      </div>\\r\\n      <div fxFlex>\\r\\n        <h3>\\r\\n          Select special offers\\r\\n        </h3>\\r\\n        <table mat-table [dataSource]=\\\"availableOffers\\\">\\r\\n          <ng-container matColumnDef=\\\"name\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef>Name</th>\\r\\n            <td mat-cell *matCellDef=\\\"let specialOffer\\\">{{specialOffer.name}}</td>\\r\\n          </ng-container>\\r\\n          <ng-container matColumnDef=\\\"price\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef>Price</th>\\r\\n            <td mat-cell *matCellDef=\\\"let specialOffer\\\">{{specialOffer.price}}</td>\\r\\n          </ng-container>\\r\\n          <tr mat-header-row *matHeaderRowDef=\\\"columnsToDisplaySpecialOffer\\\"></tr>\\r\\n          <tr mat-row *matRowDef=\\\"let specialOffer; columns: columnsToDisplaySpecialOffer\\\"\\r\\n              (click)=\\\"toggleRow(specialOffer.id)\\\" class=\\\"pointer\\\"\\r\\n              [ngClass]=\\\"{selectedRow: selectedOffers.indexOf(specialOffer.id)>=0}\\\"></tr>\\r\\n        </table>\\r\\n      </div>\\r\\n    </div>\\r\\n    <hr>\\r\\n  </form>\\r\\n</div>\\r\\n\"","module.exports = \"td.mat-cell {\\n  padding: 15px; }\\n\\nth.mat-header-cell {\\n  padding: 15px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcmVzZXJ2ZS1yb29tL0Q6XFxEdXNhblxcMUZha3NcXE1SU19JU0FcXE1SU19JU0FfVGltMTJcXERhc1RyYXZlbFNpdGUvc3JjXFxhcHBcXHJlc2VydmUtcm9vbVxccmVzZXJ2ZS1yb29tLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBYSxFQUFBOztBQUdmO0VBQ0UsYUFBYSxFQUFBIiwiZmlsZSI6InNyYy9hcHAvcmVzZXJ2ZS1yb29tL3Jlc2VydmUtcm9vbS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbInRkLm1hdC1jZWxsIHtcclxuICBwYWRkaW5nOiAxNXB4O1xyXG59XHJcblxyXG50aC5tYXQtaGVhZGVyLWNlbGwge1xyXG4gIHBhZGRpbmc6IDE1cHg7XHJcbn1cclxuIl19 */\"","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {ItemService} from '../services/item.service';\r\nimport {LoginServiceService} from '../login-service.service';\r\nimport {FormBuilder, FormGroup} from '@angular/forms';\r\nimport {HotelSpecialOfferApi, MyuserApi, ReservationOfferApi, RoomReservationApi} from '../shared/sdk/services/custom';\r\nimport {MatSnackBar} from '@angular/material';\r\nimport {HotelSpecialOffer} from '../shared/sdk/models';\r\n\r\n@Component({\r\n  selector: 'app-reserve-room',\r\n  templateUrl: './reserve-room.component.html',\r\n  styleUrls: ['./reserve-room.component.scss']\r\n})\r\nexport class ReserveRoomComponent implements OnInit {\r\n\r\n  room: any;\r\n  userType;\r\n  reserveForm: FormGroup;\r\n  availableOffers: HotelSpecialOffer[];\r\n  selectedOffers = [];\r\n  columnsToDisplaySpecialOffer = ['name', 'price'];\r\n  canUseBonusPointsRoom = false;\r\n  usingBonusPointsRoom = false;\r\n  realPrice = 0;\r\n\r\n  constructor(@Inject('baseURL') private baseURL,\r\n              private itemservice: ItemService,\r\n              private loginService: LoginServiceService,\r\n              private roomreservationservice: RoomReservationApi,\r\n              private myuserservice: MyuserApi,\r\n              private hotelspecialofferservice: HotelSpecialOfferApi,\r\n              private reservationofferservice: ReservationOfferApi,\r\n              private fb: FormBuilder,\r\n              private snackBar: MatSnackBar) {\r\n    loginService.user.subscribe(data => {\r\n      if (data) {\r\n        this.userType = data.user.type;\r\n        if (data.user.bonusPoints >= 100 && this.userType === 'registeredUser') {\r\n          this.canUseBonusPointsRoom = true;\r\n        }\r\n      }\r\n    });\r\n    this.createReserveForm();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.room = this.itemservice.getReservableRoom();\r\n    this.updateReserveForm();\r\n    this.hotelspecialofferservice.find({where: {hotelId: this.room.room.hotelId}})\r\n      .subscribe((specialOffers: HotelSpecialOffer[]) => {\r\n        this.availableOffers = specialOffers;\r\n      }, err => this.openSnackBar('Can not find special offers for this hotel', 'Dismiss'));\r\n  }\r\n\r\n  openSnackBar(message: string, action: string) {\r\n    this.snackBar.open(message, action, {\r\n      duration: 2000,\r\n    });\r\n  }\r\n\r\n  createReserveForm() {\r\n    this.reserveForm = this.fb.group({\r\n      startDate: '',\r\n      endDate: '',\r\n      hotel: '',\r\n      roomNumber: '',\r\n      beds: '',\r\n      description: '',\r\n      price: ''\r\n    });\r\n  }\r\n\r\n  updateReserveForm() {\r\n    this.realPrice = this.room.room.price;\r\n    this.reserveForm.reset({\r\n      startDate: this.room.startDate.getDate() + '/' + (this.room.startDate.getMonth() + 1) + '/' + this.room.startDate.getFullYear(),\r\n      endDate: this.room.endDate.getDate() + '/' + (this.room.endDate.getMonth() + 1) + '/' + this.room.endDate.getFullYear(),\r\n      hotel: this.room.room.hotel,\r\n      roomNumber: this.room.room.room.number,\r\n      beds: this.room.room.room.beds,\r\n      description: this.room.room.room.description,\r\n      price: this.room.room.price\r\n    });\r\n  }\r\n\r\n  onReserveRoomSubmit() {\r\n    this.roomreservationservice.makeReservation(this.room.startDate.toISOString(),\r\n      this.room.endDate.toISOString(), this.room.room.room.id,\r\n      this.myuserservice.getCachedCurrent().id, this.room.room.price, '', this.room.room.hotelId, this.usingBonusPointsRoom)\r\n      .subscribe(result => {\r\n        this.openSnackBar('Reserved succesfully', 'Dismiss');\r\n        let i = 0;\r\n        for (const offerId of this.selectedOffers) {\r\n          setTimeout(() => {\r\n            this.reservationofferservice.create({'specialOfferId': offerId, 'roomReservationId': result.retval.id})\r\n              .subscribe(() => console.log());\r\n          }, i * 1000);\r\n          i++;\r\n        }\r\n      }, err => {\r\n        this.openSnackBar('Can not reserve on this date. Please search and try again.', 'Dismiss');\r\n      });\r\n  }\r\n\r\n  toggleRow(id: number) {\r\n    let specialOffer = null;\r\n    for (const offer of this.availableOffers) {\r\n      if (offer.id === id) {\r\n        specialOffer = offer;\r\n        break;\r\n      }\r\n    }\r\n    const index = this.selectedOffers.indexOf(id);\r\n    const price = this.reserveForm.value.price;\r\n    if (index >= 0)  {\r\n      this.selectedOffers.splice(index, 1);\r\n      this.reserveForm.patchValue({'price': price - specialOffer.price});\r\n    } else  {\r\n      this.selectedOffers.push(id);\r\n      this.reserveForm.patchValue({'price': price + specialOffer.price});\r\n    }\r\n  }\r\n\r\n\r\n  roomCheckboxClicked() {\r\n    if (!this.usingBonusPointsRoom) {\r\n      this.reserveForm.patchValue({\r\n        'price': Math.round(this.realPrice * 0.1 + this.reserveForm.value.price)}\r\n      )\r\n    } else {\r\n      this.reserveForm.patchValue({\r\n        price: Math.round(this.reserveForm.value.price - 0.1 * this.realPrice)}\r\n      )\r\n    }\r\n    \r\n  }\r\n\r\n}\r\n","module.exports = \"<div *ngIf=\\\"!inviteActive\\\">\\r\\n  <div *ngIf=\\\"seatList == null\\\">\\r\\n    <h1>Loading available seats...</h1>\\r\\n  </div>\\r\\n  \\r\\n  <div *ngIf=\\\"seatList != null\\\">\\r\\n    <div *ngIf=\\\"seatList.length == 0\\\">\\r\\n      <h1>No available seats for this flight. Please choose another one.</h1>\\r\\n    </div>\\r\\n    \\r\\n    <div *ngIf=\\\"seatList.length > 0\\\"\\r\\n    fxLayout=\\\"column\\\" fxFlexOffset=\\\"20px\\\">\\r\\n      <div>\\r\\n        <h1>Available seats for flight</h1>\\r\\n      </div>\\r\\n      <div>\\r\\n        <table #seatTable mat-table [dataSource]=\\\"seatList\\\"\\r\\n        class=\\\"seatTable\\\">\\r\\n    \\r\\n          <ng-container matColumnDef=\\\"row\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef> Row </th>\\r\\n            <td mat-cell *matCellDef=\\\"let seat\\\"> {{seat.row}} </td>\\r\\n          </ng-container>\\r\\n        \\r\\n          <ng-container matColumnDef=\\\"column\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef> Seat </th>\\r\\n            <td mat-cell *matCellDef=\\\"let seat\\\"> {{seat.column}} </td>\\r\\n          </ng-container>\\r\\n        \\r\\n          <ng-container matColumnDef=\\\"classType\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef> Class </th>\\r\\n            <td mat-cell *matCellDef=\\\"let seat\\\"> {{classTypes[seat.classType]}} </td>\\r\\n          </ng-container>\\r\\n        \\r\\n          <ng-container matColumnDef=\\\"price\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef> Price </th>\\r\\n            <td mat-cell *matCellDef=\\\"let seat\\\"> {{seatPrices[seat.id]}} </td>\\r\\n          </ng-container>\\r\\n        \\r\\n          <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n          <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" (click)=\\\"setClickedRow(row)\\\" [class.active]=\\\"row == selectedSeat\\\"></tr>\\r\\n        </table>\\r\\n      </div>\\r\\n    \\r\\n      <div fxLayout=\\\"rows\\\" fxFlexOffset=\\\"5px\\\">\\r\\n        <div>\\r\\n          <button mat-button class=\\\"background-primary text-floral-white\\\" (click) = \\\"reserveButton()\\\">Reserve</button>\\r\\n        </div>\\r\\n        <div>\\r\\n          <button mat-button class=\\\"background-primary text-floral-white\\\" (click) = \\\"inviteButton()\\\">Invite friend</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"inviteActive\\\">\\r\\n  <div class=\\\"container\\\"\\r\\n    fxLayout=\\\"column\\\"\\r\\n    fxLayoutGap=\\\"20px\\\">\\r\\n\\r\\n    <div class=\\\"column-title\\\">\\r\\n      <h3>Friend list</h3>\\r\\n      <hr>\\r\\n    </div>\\r\\n\\r\\n    <div *ngIf=\\\"friendList.length > 0\\\">\\r\\n      <table mat-table #friendTable [dataSource]=\\\"friendList\\\"\\r\\n        class=\\\"friendTable\\\">\\r\\n\\r\\n        <ng-container matColumnDef=\\\"fullName\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef> Full name </th>\\r\\n          <td mat-cell *matCellDef=\\\"let friend\\\"> {{friend.fullName}} </td>\\r\\n        </ng-container>\\r\\n      \\r\\n        <ng-container matColumnDef=\\\"username\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef> Username </th>\\r\\n          <td mat-cell *matCellDef=\\\"let friend\\\"> {{friend.username}} </td>\\r\\n        </ng-container>\\r\\n      \\r\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumnsF\\\"></tr>\\r\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumnsF;\\\" (click)=\\\"setClickedRowF(row)\\\" [class.active]=\\\"row == selectedFriend\\\"></tr>\\r\\n      </table>  \\r\\n    </div>\\r\\n\\r\\n    <div fxLayout=\\\"rows\\\" *ngIf=\\\"friendList.length > 0\\\">\\r\\n      <div>\\r\\n        <button mat-button class=\\\"background-primary text-floral-white\\\" (click) = \\\"inviteFriendButton()\\\">Invite</button>\\r\\n      </div>\\r\\n      <div>\\r\\n        <button mat-button class=\\\"background-primary text-floral-white\\\" (click) = \\\"cancelInviteFriendButton()\\\">Cancel</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","module.exports = \".friendTable tr th,\\n.friendTable tr td,\\n.seatTable tr th,\\n.seatTable tr td {\\n  padding: 15px; }\\n\\n.seatTable tr.active td {\\n  background-color: #123456 !important;\\n  color: white; }\\n\\n.friendTable tr.active td {\\n  background-color: #123456 !important;\\n  color: white; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcmVzZXJ2ZS1zZWF0L0Q6XFxEdXNhblxcMUZha3NcXE1SU19JU0FcXE1SU19JU0FfVGltMTJcXERhc1RyYXZlbFNpdGUvc3JjXFxhcHBcXHJlc2VydmUtc2VhdFxccmVzZXJ2ZS1zZWF0LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7O0VBSUksYUFBYSxFQUFBOztBQUdqQjtFQUNJLG9DQUFtQztFQUNuQyxZQUFZLEVBQUE7O0FBR2hCO0VBQ0ksb0NBQW1DO0VBQ25DLFlBQVksRUFBQSIsImZpbGUiOiJzcmMvYXBwL3Jlc2VydmUtc2VhdC9yZXNlcnZlLXNlYXQuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZnJpZW5kVGFibGUgdHIgdGgsXHJcbi5mcmllbmRUYWJsZSB0ciB0ZCxcclxuLnNlYXRUYWJsZSB0ciB0aCxcclxuLnNlYXRUYWJsZSB0ciB0ZCB7XHJcbiAgICBwYWRkaW5nOiAxNXB4O1xyXG59XHJcblxyXG4uc2VhdFRhYmxlIHRyLmFjdGl2ZSB0ZCB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiMxMjM0NTYgIWltcG9ydGFudDtcclxuICAgIGNvbG9yOiB3aGl0ZTtcclxufVxyXG5cclxuLmZyaWVuZFRhYmxlIHRyLmFjdGl2ZSB0ZCB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiMxMjM0NTYgIWltcG9ydGFudDtcclxuICAgIGNvbG9yOiB3aGl0ZTtcclxufSJdfQ== */\"","import { Component, Input, OnInit, Inject, ViewChild } from '@angular/core';\r\nimport {LoopBackConfig, Flight, Seat, SeatId, SeatReservation, Friendship, Myuser, UserInfo} from '../shared/sdk';\r\nimport {FlightApi, SeatApi, SeatIdApi, SeatReservationApi, FriendshipApi, MyuserApi, UserInfoApi} from '../shared/sdk/services';\r\nimport {API_VERSION} from '../shared/baseUrl';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {MatSnackBar, MatTable} from '@angular/material';\r\nimport {LoginServiceService} from '../login-service.service';\r\n\r\n@Component({\r\n  selector: 'app-reserve-seat',\r\n  templateUrl: './reserve-seat.component.html',\r\n  styleUrls: ['./reserve-seat.component.scss']\r\n})\r\nexport class ReserveSeatComponent implements OnInit {\r\n  @Input() selectedFlight: Flight;\r\n\r\n  userType: string;\r\n  userId: string;\r\n\r\n  inviteActive = false;\r\n\r\n  setClickedRow : Function;\r\n  selectedSeat: Seat = null;\r\n  seatList: Seat[] = null;\r\n  seatPrices = {};\r\n  classTypes = {\r\n    'e': 'Economy class',\r\n    'b': 'Business class',\r\n    'f': 'First class'\r\n  };\r\n  displayedColumns: string[] = ['row', 'column', 'classType', 'price'];\r\n  @ViewChild('seatTable') seatTable: MatTable<any>;\r\n\r\n  selectedFriend: any = null;\r\n  friendList: any[] = [];\r\n  setClickedRowF : Function;\r\n  displayedColumnsF: string[] = ['fullName', 'username'];\r\n  @ViewChild('friendTable') friendTable: MatTable<any>;\r\n\r\n  constructor(@Inject('baseURL') private baseURL,\r\n              private flightservice: FlightApi,\r\n              private seatservice: SeatApi,\r\n              private friendshipService: FriendshipApi,\r\n              private myuserService: MyuserApi,\r\n              private userInfoService: UserInfoApi,\r\n              private seatreservationservice: SeatReservationApi,\r\n              private fb: FormBuilder,\r\n              private loginService: LoginServiceService,\r\n              public snackBar: MatSnackBar) {\r\n    LoopBackConfig.setBaseURL(baseURL);\r\n    LoopBackConfig.setApiVersion(API_VERSION);\r\n    this.loginService.user.subscribe(data => {\r\n      if (data) {\r\n        this.userType = data.user.type;\r\n        this.userId = data.user.id;\r\n      }\r\n    });\r\n    this.setClickedRow = function(index){\r\n      this.selectedSeat = index;\r\n    }\r\n    this.setClickedRowF = function(index){\r\n      this.selectedFriend = index;\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.refreshSeats();\r\n  }\r\n\r\n  refreshSeats() {\r\n    this.flightservice.findAvailableSeats(this.selectedFlight.id)\r\n    .subscribe(result => {\r\n      this.seatPrices = {};\r\n      for (const seat of result.retval) {\r\n        this.seatPrices[seat.id] = (seat.classType == 'e') ? this.selectedFlight.price : \r\n          ((seat.classType == 'f') ? this.selectedFlight.price * 1.5 : this.selectedFlight.price * 1.2);\r\n        this.seatPrices[seat.id] = Math.round(this.seatPrices[seat.id]);\r\n      }\r\n      this.seatList = result.retval;\r\n      console.log(result.retval);\r\n    }, err => {\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n  refreshFriends() {\r\n    this.friendList = [];\r\n    this.friendshipService.find().subscribe(\r\n      result => {\r\n        let gottenFriends: Friendship[] = result as Friendship[];\r\n        console.log(gottenFriends);\r\n        for (const friendship of gottenFriends) {\r\n          if (friendship.firstUserId == this.userId || friendship.secondUserId == this.userId && friendship.accepted) {\r\n            console.log(friendship);\r\n            let friendId: string = (friendship.firstUserId == this.userId) ? friendship.secondUserId : friendship.firstUserId;\r\n            let friend: any = {\r\n              friendship: friendship\r\n            };\r\n            friend['id'] = friendId;\r\n\r\n            this.myuserService.findById(friendId).subscribe(\r\n              result => {\r\n                let friendUser: Myuser = result as Myuser;\r\n                friend['username'] = friendUser.username;\r\n                this.userInfoService.find().subscribe(\r\n                  result => {\r\n                    let infos: UserInfo[] = result as UserInfo[];\r\n                    for(const info of infos) {\r\n                      if (info.userIdId == friendId) {\r\n                        console.log(JSON.stringify(info));\r\n                        let friendInfo: UserInfo = info as UserInfo;\r\n                        friend['fullName'] = (friendInfo.firstName == \"\" && friendInfo.lastName == \"\") ?\r\n                          \"-\" : friendInfo.firstName + \" \" + friendInfo.lastName;\r\n                        \r\n                      }\r\n                    }\r\n                  },\r\n                  err => {\r\n                    console.log(err);\r\n                  }\r\n                );\r\n                this.friendList.push(friend);\r\n                this.friendTable.renderRows();\r\n              },\r\n              err => {\r\n                console.log(err);\r\n              }\r\n            );\r\n          }\r\n        }\r\n      },\r\n      err => {\r\n        console.log(err);\r\n      }\r\n    );\r\n  }\r\n\r\n  openSnackBar(message: string, action: string) {\r\n    this.snackBar.open(message, action, {\r\n      duration: 2000,\r\n    });\r\n  }\r\n\r\n  reserveButton() {\r\n    if (this.selectedSeat != null) {\r\n      console.log(this.userId);\r\n      this.seatreservationservice.makeReservation(this.selectedSeat.id, this.userId, this.seatPrices[this.selectedSeat.id])\r\n      .subscribe(\r\n        (result) => {\r\n          this.openSnackBar(\"Reservation successfuly made\", \"Dismiss\");\r\n          this.refreshSeats();\r\n        },\r\n        (err) => {\r\n          this.openSnackBar(\"Failed to make reservation\", \"Dismiss\");\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  inviteButton() {\r\n    if (this.selectedSeat != null) {\r\n      this.inviteActive = true;\r\n\r\n      this.refreshFriends();\r\n    }\r\n  }\r\n\r\n  inviteFriendButton() {\r\n    if (this.selectedFriend != null) {\r\n      this.seatreservationservice.makeReservation(this.selectedSeat.id, this.selectedFriend.id, this.seatPrices[this.selectedSeat.id])\r\n      .subscribe(\r\n        (result) => {\r\n          this.openSnackBar(\"Reservation successfuly made\", \"Dismiss\");\r\n          console.log(result);\r\n          this.cancelInviteFriendButton();\r\n        },\r\n        (err) => {\r\n          this.openSnackBar(\"Failed to make reservation\", \"Dismiss\");\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  cancelInviteFriendButton() {\r\n    this.friendList = [];\r\n    this.selectedFriend = null;\r\n\r\n    this.inviteActive = false;\r\n\r\n    this.refreshSeats();\r\n  }\r\n\r\n}\r\n","module.exports = \"<form (ngSubmit)=\\\"onSubmit()\\\">\\r\\n    <p>\\r\\n        Registration: \\r\\n        <mat-form-field class=\\\"form-size\\\">\\r\\n            <input matInput placeholder={{car.registration}} type=\\\"text\\\" [readonly]=\\\"true\\\">\\r\\n        </mat-form-field>\\r\\n    </p>\\r\\n    <p>\\r\\n        Make:\\r\\n        <mat-form-field class=\\\"form-size\\\">\\r\\n            <input matInput placeholder={{car.make}} type=\\\"text\\\" [readonly]=\\\"true\\\">\\r\\n        </mat-form-field>\\r\\n    </p>\\r\\n    <p>\\r\\n        Seats:\\r\\n        <mat-form-field class=\\\"form-size\\\">\\r\\n            <input matInput placeholder={{car.seats}} type=\\\"text\\\" [readonly]=\\\"true\\\">\\r\\n        </mat-form-field>\\r\\n    </p>\\r\\n    <p>\\r\\n        Category:\\r\\n        <mat-form-field class=\\\"form-size\\\">\\r\\n            <input matInput placeholder={{car.category}} type=\\\"text\\\" [readonly]=\\\"true\\\">\\r\\n        </mat-form-field>\\r\\n    </p>\\r\\n    <p>\\r\\n        Start date:\\r\\n        <mat-form-field class=\\\"form-size\\\">\\r\\n            <input matInput placeholder={{car.start}} type=\\\"text\\\" [readonly]=\\\"true\\\">\\r\\n        </mat-form-field>\\r\\n    </p>\\r\\n    <p>\\r\\n        End date:\\r\\n        <mat-form-field class=\\\"form-size\\\">\\r\\n            <input matInput placeholder={{car.end}} type=\\\"text\\\" [readonly]=\\\"true\\\">\\r\\n        </mat-form-field>\\r\\n    </p>\\r\\n    <p>\\r\\n        Total days:\\r\\n        <mat-form-field class=\\\"form-size\\\">\\r\\n            <input matInput placeholder={{car.days}} type=\\\"text\\\" [readonly]=\\\"true\\\">\\r\\n        </mat-form-field>\\r\\n    </p>\\r\\n    <p>\\r\\n        Price per day:\\r\\n        <mat-form-field class=\\\"form-size\\\">\\r\\n            <input matInput placeholder={{car.price}} type=\\\"text\\\" [readonly]=\\\"true\\\">\\r\\n        </mat-form-field>\\r\\n    </p>\\r\\n    <p>\\r\\n        Total price:\\r\\n        <mat-form-field class=\\\"form-size\\\">\\r\\n            <input matInput placeholder={{car.showPrice}} type=\\\"text\\\" [readonly]=\\\"true\\\">\\r\\n        </mat-form-field>\\r\\n    </p>\\r\\n    <p *ngIf=\\\"canUseBonusPointsCar\\\">\\r\\n        <mat-checkbox [(ngModel)] = \\\"car.usingBonus\\\" [ngModelOptions]=\\\"{standalone: true}\\\" (change)=\\\"carCheckboxClicked()\\\">Use bonus points (100 for 10% off)</mat-checkbox>\\r\\n    </p>\\r\\n    <button *ngIf=\\\"canReserve\\\" type=\\\"submit\\\" mat-button class=\\\"background-primary text-floral-white\\\">\\r\\n        Submit\\r\\n    </button>\\r\\n</form>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Jlc2VydmVjYXIvcmVzZXJ2ZWNhci5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { ItemService } from '../services/item.service';\r\nimport { Car, LoopBackConfig } from '../shared/sdk';\r\nimport { LoginServiceService } from '../login-service.service';\r\nimport { CarReservationApi, CarApi } from '../shared/sdk/services';\r\nimport { MatSnackBar } from '@angular/material';\r\nimport { API_VERSION } from '../shared/baseUrl';\r\n\r\n\r\n@Component({\r\n  selector: 'app-reservecar',\r\n  templateUrl: './reservecar.component.html',\r\n  styleUrls: ['./reservecar.component.scss']\r\n})\r\nexport class ReservecarComponent implements OnInit {\r\n\r\n\r\n\r\n  car;\r\n  canReserve = false;\r\n  userType;\r\n  userId;\r\n  canUseBonusPointsCar = false;\r\n\r\n  constructor(@Inject('baseURL') private baseURL,\r\n  private itemService: ItemService,\r\n     private loginService: LoginServiceService,\r\n     private reservationService: CarReservationApi,\r\n     private carService: CarApi,\r\n     private snackBar: MatSnackBar) {\r\n    LoopBackConfig.setBaseURL(baseURL);\r\n    LoopBackConfig.setApiVersion(API_VERSION);\r\n    //this.car = this.itemService.getReservableCar();\r\n    var temp = this.itemService.getReservableCar();\r\n    if (temp) {\r\n      this.car = temp;\r\n      this.car.usingBonus = false;\r\n    } else {\r\n      this.car =  {\r\n        'registration' : \"\",\r\n        'start': 0,\r\n        'end': 0,\r\n        'days': 0,\r\n        'seats': 0,\r\n        'category': '',\r\n        'usingBonus': false\r\n      }\r\n    }\r\n    var oneDay = 24*60*60*1000; // hours*minutes*seconds*milliseconds\r\n    var firstDate = new Date(this.car.start);\r\n    var secondDate = new Date(this.car.end);\r\n    this.car.days = 1 + Math.round(Math.abs((firstDate.getTime() - secondDate.getTime())/(oneDay)));\r\n    this.car.totalPrice = this.car.days * this.car.price\r\n    this.car.showPrice = this.car.totalPrice;\r\n    loginService.user\r\n    .subscribe(data => {\r\n      if (data) {\r\n        this.userType = data.user.type;\r\n        this.userId = data.user.id\r\n        if (this.userType == \"registeredUser\") {\r\n          this.canReserve = true;\r\n          if (this.itemService.getHeader().getBonusPoints() >= 100) {\r\n            this.canUseBonusPointsCar = true;\r\n          }\r\n        }\r\n      }\r\n    });\r\n   }\r\n\r\n\r\n   carCheckboxClicked() {\r\n     if (this.car.usingBonus) {\r\n        this.car.showPrice = this.car.totalPrice - Math.round(this.car.totalPrice * 0.1)\r\n     } else {\r\n        this.car.showPrice = this.car.totalPrice;\r\n     }\r\n   }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  openSnackBar(message: string, action: string) {\r\n    this.snackBar.open(message, action, {\r\n      duration: 2000,\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.car.registration = this.car.registration.trim();\r\n    this.carService.findOne({where: {\"registration\": this.car.registration}})\r\n    .subscribe(\r\n      (result) => {\r\n        var car_result = result as Car;\r\n        var startDate = new Date(this.car.start).toJSON();\r\n        var endDate = new Date(this.car.end).toJSON();\r\n        console.log(this.car.usingBonus)\r\n        var temp_price = this.car.totalPrice;\r\n        if (this.car.usingBonus)  {\r\n          temp_price = Math.round(this.car.totalPrice * 0.9);\r\n        }\r\n        \r\n        this.reservationService.makeReservation(startDate, endDate, car_result.id, this.userId, temp_price, car_result.rentalServiceId, this.car.usingBonus)\r\n        .subscribe(\r\n          (result) => {\r\n            this.openSnackBar(\"Reservation successfuly made\", \"Dismiss\");\r\n            if (this.car.usingBonus) {\r\n              this.itemService.getHeader().removeBonusPoints();\r\n            }\r\n          },\r\n          (err) => {\r\n            this.openSnackBar(\"Failed to make reservation\", \"Dismiss\");\r\n          }\r\n        )\r\n      },\r\n      (err) => {\r\n        this.openSnackBar(\"Car does not exist\", \"Dismiss\");\r\n      }\r\n    )\r\n  }\r\n}\r\n","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\r\\n  <a mat-button (click)=\\\"setToIncomeForm()\\\" *ngIf=\\\"userType==='hotelAdmin'\\\"> Income reports </a>\\r\\n  <a mat-button (click)=\\\"setToOccupancyForm()\\\" *ngIf=\\\"userType==='hotelAdmin'\\\"> Occupancy reports </a>\\r\\n  <a mat-button (click)=\\\"setToRatingReport()\\\" *ngIf=\\\"userType==='hotelAdmin'\\\"> Ratings report </a>\\r\\n  <span class=\\\"flex-spacer\\\"></span>\\r\\n</mat-toolbar>\\r\\n\\r\\n<div *ngIf=\\\"isIncomeForm&&userType==='hotelAdmin'\\\" >\\r\\n  <div fxFlex fxFlexOffset=\\\"20px\\\" class=\\\"form-size\\\">\\r\\n    <form novalidate [formGroup]=\\\"incomeForm\\\" #incomeform=\\\"ngForm\\\" (ngSubmit)=\\\"onIncomeSubmit()\\\">\\r\\n        <p>\\r\\n          <mat-form-field class=\\\"form-size\\\">\\r\\n            <mat-select formControlName=\\\"type\\\" placeholder=\\\"Type of report\\\">\\r\\n              <mat-option value=\\\"weekly\\\">\\r\\n                Weekly\\r\\n              </mat-option>\\r\\n              <mat-option value=\\\"monthly\\\">\\r\\n                Monthly\\r\\n              </mat-option>\\r\\n              <mat-option value=\\\"yearly\\\">\\r\\n                Yearly\\r\\n              </mat-option>\\r\\n            </mat-select>\\r\\n            <mat-error *ngIf=\\\"incomeFormErrors.type\\\">\\r\\n                {{ incomeFormErrors.type }}\\r\\n            </mat-error>\\r\\n          </mat-form-field>\\r\\n        </p>\\r\\n        <p>\\r\\n          <mat-form-field class=\\\"half-width\\\">\\r\\n            <input matInput formControlName=\\\"start\\\" [matDatepicker]=\\\"myDatepicker\\\" placeholder=\\\"Start time\\\">\\r\\n            <mat-datepicker-toggle [for]=\\\"myDatepicker\\\"></mat-datepicker-toggle>\\r\\n            <mat-datepicker #myDatepicker></mat-datepicker>\\r\\n            <mat-error *ngIf=\\\"incomeFormErrors.start\\\">\\r\\n              {{ incomeFormErrors.start }}\\r\\n            </mat-error>\\r\\n          </mat-form-field>\\r\\n        </p>\\r\\n        <p>\\r\\n          <mat-form-field class=\\\"half-width\\\">\\r\\n            <input matInput formControlName=\\\"end\\\" [matDatepicker]=\\\"myDatepicker2\\\" placeholder=\\\"End time\\\">\\r\\n            <mat-datepicker-toggle [for]=\\\"myDatepicker2\\\"></mat-datepicker-toggle>\\r\\n            <mat-datepicker #myDatepicker2></mat-datepicker>\\r\\n            <mat-error *ngIf=\\\"incomeFormErrors.end\\\">\\r\\n              {{ incomeFormErrors.end }}\\r\\n            </mat-error>\\r\\n          </mat-form-field>\\r\\n        </p>\\r\\n        <button type=\\\"submit\\\" mat-button class=\\\"background-primary text-floral-white\\\" [disabled]=\\\"incomeForm.invalid\\\">\\r\\n            Submit\\r\\n        </button>\\r\\n    </form>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"isOccupancyForm&&userType==='hotelAdmin'\\\" >\\r\\n  <div fxFlex fxFlexOffset=\\\"20px\\\" class=\\\"form-size\\\">\\r\\n    <form novalidate [formGroup]=\\\"occupancyForm\\\" #occupancyform=\\\"ngForm\\\" (ngSubmit)=\\\"onOccupancySubmit()\\\">\\r\\n      <p>\\r\\n        <mat-form-field class=\\\"form-size\\\">\\r\\n          <mat-select formControlName=\\\"type\\\" placeholder=\\\"Type of report\\\">\\r\\n            <mat-option value=\\\"weekly\\\">\\r\\n              Weekly\\r\\n            </mat-option>\\r\\n            <mat-option value=\\\"monthly\\\">\\r\\n              Monthly\\r\\n            </mat-option>\\r\\n            <mat-option value=\\\"yearly\\\">\\r\\n              Yearly\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n          <mat-error *ngIf=\\\"occupancyFormErrors.type\\\">\\r\\n            {{ occupancyFormErrors.type }}\\r\\n          </mat-error>\\r\\n        </mat-form-field>\\r\\n      </p>\\r\\n      <p>\\r\\n        <mat-form-field class=\\\"half-width\\\">\\r\\n          <input matInput formControlName=\\\"start\\\" [matDatepicker]=\\\"myDatepicker1\\\" placeholder=\\\"Start time\\\">\\r\\n          <mat-datepicker-toggle [for]=\\\"myDatepicker1\\\"></mat-datepicker-toggle>\\r\\n          <mat-datepicker #myDatepicker1></mat-datepicker>\\r\\n          <mat-error *ngIf=\\\"occupancyFormErrors.start\\\">\\r\\n            {{ occupancyFormErrors.start }}\\r\\n          </mat-error>\\r\\n        </mat-form-field>\\r\\n      </p>\\r\\n      <p>\\r\\n        <mat-form-field class=\\\"half-width\\\">\\r\\n          <input matInput formControlName=\\\"end\\\" [matDatepicker]=\\\"myDatepicker3\\\" placeholder=\\\"End time\\\">\\r\\n          <mat-datepicker-toggle [for]=\\\"myDatepicker3\\\"></mat-datepicker-toggle>\\r\\n          <mat-datepicker #myDatepicker3></mat-datepicker>\\r\\n          <mat-error *ngIf=\\\"occupancyFormErrors.end\\\">\\r\\n            {{ occupancyFormErrors.end }}\\r\\n          </mat-error>\\r\\n        </mat-form-field>\\r\\n      </p>\\r\\n      <button type=\\\"submit\\\" mat-button class=\\\"background-primary text-floral-white\\\" [disabled]=\\\"occupancyForm.invalid\\\">\\r\\n        Submit\\r\\n      </button>\\r\\n    </form>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div fxLayout=\\\"column\\\" *ngIf=\\\"isRatingReport\\\">\\r\\n    <div fxFlex fxFlexOffset=\\\"20px\\\" class=\\\"form-size\\\">\\r\\n      Hotel <b>{{hotelForRating.name}}</b> <br>\\r\\n      Rating: {{hotelForRating.rating}}/5 <br>\\r\\n      Total ratings from users: {{hotelForRating.ratingCount}} <br>\\r\\n    </div>\\r\\n    <div fxFlex fxFlexOffset=\\\"20px\\\" class=\\\"form-size\\\">\\r\\n      <table mat-table [dataSource]=\\\"roomsForRating\\\">\\r\\n        <ng-container matColumnDef=\\\"number\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef>Room number</th>\\r\\n            <td mat-cell *matCellDef=\\\"let room\\\">{{room.number}}</td>\\r\\n          </ng-container>\\r\\n          <ng-container matColumnDef=\\\"rating\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef>Rating</th>\\r\\n            <td mat-cell *matCellDef=\\\"let room\\\">{{room.rating}}</td>\\r\\n          </ng-container>\\r\\n          <ng-container matColumnDef=\\\"ratingCount\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef>Number of rates</th>\\r\\n            <td mat-cell *matCellDef=\\\"let room\\\">{{room.ratingCount}}</td>\\r\\n          </ng-container>\\r\\n          <tr mat-header-row *matHeaderRowDef=\\\"columnsToDisplayRoom\\\"></tr>\\r\\n          <tr mat-row *matRowDef=\\\"let room; columns: columnsToDisplayRoom\\\">\\r\\n          </tr>\\r\\n      </table>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"isChart\\\">\\r\\n  <div fxFlex=\\\"50\\\">\\r\\n    <canvas baseChart\\r\\n      [datasets]=\\\"barChartData\\\"\\r\\n      [labels]=\\\"barChartLabels\\\"\\r\\n      [options]=\\\"barChartOptions\\\"\\r\\n      [legend]=\\\"barChartLegend\\\"\\r\\n      [chartType]=\\\"barChartType\\\"></canvas>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \"td.mat-cell {\\n  padding: 15px; }\\n\\nth.mat-header-cell {\\n  padding: 15px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcm9vbS1idXNpbmVzcy1yZXBvcnRzL0Q6XFxEdXNhblxcMUZha3NcXE1SU19JU0FcXE1SU19JU0FfVGltMTJcXERhc1RyYXZlbFNpdGUvc3JjXFxhcHBcXHJvb20tYnVzaW5lc3MtcmVwb3J0c1xccm9vbS1idXNpbmVzcy1yZXBvcnRzLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksYUFBYSxFQUFBOztBQUdmO0VBQ0UsYUFBYSxFQUFBIiwiZmlsZSI6InNyYy9hcHAvcm9vbS1idXNpbmVzcy1yZXBvcnRzL3Jvb20tYnVzaW5lc3MtcmVwb3J0cy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbInRkLm1hdC1jZWxsIHtcclxuICAgIHBhZGRpbmc6IDE1cHg7XHJcbiAgfVxyXG4gIFxyXG4gIHRoLm1hdC1oZWFkZXItY2VsbCB7XHJcbiAgICBwYWRkaW5nOiAxNXB4O1xyXG4gIH1cclxuICAiXX0= */\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { LoginServiceService } from '../login-service.service';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material';\r\nimport { HotelApi, RoomReservationApi, Hotel } from '../shared/sdk';\r\n\r\n@Component({\r\n  selector: 'app-room-business-reports',\r\n  templateUrl: './room-business-reports.component.html',\r\n  styleUrls: ['./room-business-reports.component.scss']\r\n})\r\nexport class RoomBusinessReportsComponent implements OnInit {\r\n\r\n  userType;\r\n\r\n  isIncomeForm = null;\r\n  isOccupancyForm = null;\r\n  isChart = null;\r\n  isRatingReport = null;\r\n\r\n  roomsForRating = [];\r\n  hotelForRating = {name: '', rating: '', ratingCount: ''};\r\n  columnsToDisplayRoom = ['number', 'rating', 'ratingCount'];\r\n\r\n  @ViewChild('incomeform') incomeFormDirective;\r\n  incomeForm: FormGroup;\r\n\r\n  @ViewChild('occupancyform') occupancyFormDirective;\r\n  occupancyForm: FormGroup;\r\n\r\n  public barChartOptions = {\r\n    scaleShowVerticalLines: false,\r\n    responsive: true\r\n  }\r\n\r\n  setToIncomeForm() {\r\n    this.isIncomeForm = true;\r\n    this.isChart = null;\r\n    this.isOccupancyForm = null;\r\n    this.isRatingReport = null;\r\n  }\r\n\r\n  setToChart() {\r\n    this.isIncomeForm = null;\r\n    this.isChart = true;\r\n    this.isOccupancyForm = null;\r\n    this.isRatingReport = null;\r\n  }\r\n\r\n  setToOccupancyForm() {\r\n    this.isIncomeForm = null;\r\n    this.isChart = null;\r\n    this.isOccupancyForm = true;\r\n    this.isRatingReport = null;\r\n  }\r\n\r\n  setToRatingReport() {\r\n    this.createRatingReport();\r\n    this.isIncomeForm = null;\r\n    this.isChart = null;\r\n    this.isOccupancyForm = null;\r\n    this.isRatingReport = null;\r\n    this.isRatingReport = true;\r\n  }\r\n\r\n  public barChartLabels = ['2006', '2007', '2008', '2009', '2010', '2011', '2012'];\r\n  public barChartType = 'bar';\r\n  public barChartLegend = true;\r\n\r\n  public barChartData = [\r\n    {data: [65, 59, 80, 81, 56, 55, 40], label: 'Series A'},\r\n    {data: [50, 40, 30, 70, 50, 66, 70], label: 'Series B'}\r\n  ];\r\n\r\n  constructor(private loginService: LoginServiceService,\r\n    private fb: FormBuilder,\r\n    public snackBar: MatSnackBar,\r\n    private hotelService: HotelApi,\r\n    private reservationService: RoomReservationApi) {\r\n      this.loginService.user.subscribe(data => {\r\n        if (data) {\r\n          this.userType = data.user.type;\r\n        }\r\n      });\r\n      this.createIncomeForm();\r\n      this.createOccupancyForm();\r\n     }\r\n\r\n  openSnackBar(message: string, action: string) {\r\n    this.snackBar.open(message, action, {\r\n        duration: 2000,\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  createIncomeForm() {\r\n    this.incomeForm = this.fb.group({\r\n      type: ['', Validators.required],\r\n      start: ['', Validators.required],\r\n      end: ['', Validators.required]\r\n    });\r\n    this.incomeForm.valueChanges.subscribe(data => this.onIncomeValueChanged(data));\r\n    this.onIncomeValueChanged();\r\n  }\r\n\r\n  onIncomeValueChanged(data?: any) {\r\n    if (!this.incomeForm) {\r\n      return;\r\n    }\r\n    const form = this.incomeForm;\r\n    for (const field in this.incomeFormErrors) {\r\n      if (this.incomeFormErrors.hasOwnProperty(field)) {\r\n        //clear previous error message\r\n        this.incomeFormErrors[field] = '';\r\n        const control = form.get(field);\r\n        if (control && !control.valid) {\r\n          const messages = this.incomeFormValidationMessages[field];\r\n          for (const key in control.errors) {\r\n            if (control.errors.hasOwnProperty(key)) {\r\n              this.incomeFormErrors[field] += messages[key] + ' ';\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  incomeFormErrors = {\r\n    'type': '',\r\n    'start': '',\r\n    'end': ''\r\n  };\r\n\r\n  incomeFormValidationMessages = {\r\n    'type': {\r\n      'required': 'Type is required'\r\n    },\r\n    'start': {\r\n      'required': 'Start date is required'\r\n    },\r\n    'end': {\r\n      'required': 'End date is required'\r\n    }\r\n  };\r\n\r\n  onIncomeSubmit() {\r\n    this.hotelService.findOne({where: {name: 'hotel1'}})\r\n    .subscribe(\r\n      (result) => {\r\n        var my_result = result as Hotel;\r\n        var observable;\r\n        if (this.incomeForm.value.type === 'yearly') {\r\n          observable = this.reservationService.getYearlyReport(new Date(this.incomeForm.value.start).toJSON(),\r\n          new Date(this.incomeForm.value.end).toJSON(), my_result.id, 1)\r\n        } else if (this.incomeForm.value.type === 'monthly') {\r\n          observable = this.reservationService.getMonthlyReport(new Date(this.incomeForm.value.start).toJSON(),\r\n          new Date(this.incomeForm.value.end).toJSON(), my_result.id, 1)\r\n        } else {\r\n          observable = this.reservationService.getWeeklyReport(new Date(this.incomeForm.value.start).toJSON(),\r\n          new Date(this.incomeForm.value.end).toJSON(), my_result.id, 1)\r\n        }\r\n        observable.subscribe(\r\n          (result) => {\r\n            this.barChartLabels = result.retval.labels;\r\n            this.barChartData = [{data: [], label: \"Income\"}];\r\n            this.barChartData[0].data = result.retval.sums;\r\n            this.setToChart();\r\n          },\r\n          (err) => {\r\n            this.openSnackBar(\"Failed to retrieve business report\", \"Dismiss\");\r\n          }\r\n        )\r\n      },\r\n      (err) => {\r\n        this.openSnackBar(\"Failed to find hotel1\", \"Dismiss\");\r\n      }\r\n    )\r\n  }\r\n\r\n  createOccupancyForm() {\r\n    this.occupancyForm = this.fb.group({\r\n      type: ['', Validators.required],\r\n      start: ['', Validators.required],\r\n      end: ['', Validators.required]\r\n    });\r\n    this.occupancyForm.valueChanges.subscribe(data => this.onOccupancyValueChanged(data));\r\n    this.onOccupancyValueChanged();\r\n  }\r\n\r\n  onOccupancyValueChanged(data?: any) {\r\n    if (!this.occupancyForm) {\r\n      return;\r\n    }\r\n    const form = this.occupancyForm;\r\n    for (const field in this.occupancyFormErrors) {\r\n      if (this.occupancyFormErrors.hasOwnProperty(field)) {\r\n        //clear previous error message\r\n        this.occupancyFormErrors[field] = '';\r\n        const control = form.get(field);\r\n        if (control && !control.valid) {\r\n          const messages = this.occupancyFormValidationMessages[field];\r\n          for (const key in control.errors) {\r\n            if (control.errors.hasOwnProperty(key)) {\r\n              this.occupancyFormErrors[field] += messages[key] + ' ';\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  occupancyFormErrors = {\r\n    'type': '',\r\n    'start': '',\r\n    'end': ''\r\n  };\r\n\r\n  occupancyFormValidationMessages = {\r\n    'type': {\r\n      'required': 'Type is required'\r\n    },\r\n    'start': {\r\n      'required': 'Start date is required'\r\n    },\r\n    'end': {\r\n      'required': 'End date is required'\r\n    }\r\n  };\r\n\r\n  onOccupancySubmit() {\r\n    this.hotelService.findOne({where: {name: 'hotel1'}})\r\n      .subscribe(\r\n        (result) => {\r\n          var my_result = result as Hotel;\r\n          var observable;\r\n          if (this.occupancyForm.value.type === 'yearly') {\r\n            observable = this.reservationService.getYearlyReport(new Date(this.occupancyForm.value.start).toJSON(),\r\n              new Date(this.occupancyForm.value.end).toJSON(), my_result.id, 0)\r\n          } else if (this.occupancyForm.value.type === 'monthly') {\r\n            observable = this.reservationService.getMonthlyReport(new Date(this.occupancyForm.value.start).toJSON(),\r\n              new Date(this.occupancyForm.value.end).toJSON(), my_result.id, 0)\r\n          } else {\r\n            observable = this.reservationService.getWeeklyReport(new Date(this.occupancyForm.value.start).toJSON(),\r\n              new Date(this.occupancyForm.value.end).toJSON(), my_result.id, 0)\r\n          }\r\n          observable.subscribe(\r\n            (result) => {\r\n              this.barChartLabels = result.retval.labels;\r\n              this.barChartData = [{data: [], label: \"Occupancy\"}];\r\n              this.barChartData[0].data = result.retval.sums;\r\n              this.setToChart();\r\n            },\r\n            (err) => {\r\n              this.openSnackBar(\"Failed to retrieve business report\", \"Dismiss\");\r\n            }\r\n          )\r\n        },\r\n        (err) => {\r\n          this.openSnackBar(\"Failed to find hotel1\", \"Dismiss\");\r\n        }\r\n      )\r\n  }\r\n\r\n  createRatingReport() {\r\n    console.log('harru');\r\n    this.hotelService.findOne({where: {name: 'hotel1'}})\r\n    .subscribe(\r\n      (result) => {\r\n          var my_result = result as Hotel;\r\n          console.log(\"Haru\");\r\n          this.reservationService.getRatingReport(my_result.id)\r\n          .subscribe(\r\n            (result) => {\r\n              this.roomsForRating = result.retval.rooms;\r\n              this.hotelForRating = result.retval.hotel;\r\n              console.log(this.hotelForRating);\r\n            },\r\n            (err) => {\r\n              this.openSnackBar(\"Failed to retrieve business report\", \"Dismiss\");\r\n            }\r\n          )\r\n      },\r\n      (err) => {\r\n        this.openSnackBar(\"Failed to find hotel1\", \"Dismiss\");\r\n      });\r\n  }\r\n\r\n}\r\n","module.exports = \"<div *ngIf=\\\"searchActive\\\">\\r\\n  <form novalidate [formGroup]=\\\"searchQRoomsForm\\\" #fformSearchQRooms=\\\"ngForm\\\" (ngSubmit)=\\\"onSearchQRoomsSubmit()\\\">\\r\\n    <p>\\r\\n      <mat-form-field class=\\\"half-width\\\">\\r\\n        <input matInput formControlName=\\\"startDate\\\" [matDatepicker]=\\\"myDatepicker1\\\" readonly placeholder=\\\"Start date\\\">\\r\\n        <mat-datepicker-toggle [for]=\\\"myDatepicker1\\\"></mat-datepicker-toggle>\\r\\n        <mat-datepicker #myDatepicker1></mat-datepicker>\\r\\n        <mat-error *ngIf=\\\"searchQRoomsFormErrors.startDate\\\">\\r\\n          {{ searchQRoomsFormErrors.startDate}}\\r\\n        </mat-error>\\r\\n      </mat-form-field>\\r\\n      <mat-form-field class=\\\"half-width\\\">\\r\\n        <input matInput formControlName=\\\"endDate\\\" [matDatepicker]=\\\"myDatepicker2\\\" readonly placeholder=\\\"End date\\\">\\r\\n        <mat-datepicker-toggle [for]=\\\"myDatepicker2\\\"></mat-datepicker-toggle>\\r\\n        <mat-datepicker #myDatepicker2></mat-datepicker>\\r\\n        <mat-error *ngIf=\\\"searchQRoomsFormErrors.endDate\\\">\\r\\n          {{ searchQRoomsFormErrors.endDate}}\\r\\n        </mat-error>\\r\\n      </mat-form-field>\\r\\n    </p>\\r\\n    <p>\\r\\n      <button type=\\\"submit\\\" mat-button class=\\\"background-primary text-floral-white\\\"\\r\\n      [disabled]=\\\"searchQRoomsForm.invalid\\\">Submit</button>\\r\\n    </p>\\r\\n    <hr>\\r\\n  </form>\\r\\n</div>\\r\\n<div *ngIf=\\\"searchDone\\\">\\r\\n  <div fxLayout=\\\"flex\\\">\\r\\n    <div fxFlex>\\r\\n      <table #tablereservations mat-table [dataSource]=\\\"reservationsInfo\\\">\\r\\n        <ng-container matColumnDef=\\\"hotel\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef>Hotel</th>\\r\\n          <td mat-cell *matCellDef=\\\"let reservationInfo\\\">{{reservationInfo.hotel.name}} </td>\\r\\n        </ng-container>\\r\\n        <ng-container matColumnDef=\\\"roomNumber\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef>Room Number</th>\\r\\n          <td mat-cell *matCellDef=\\\"let reservationInfo\\\">{{reservationInfo.room.number}}</td>\\r\\n        </ng-container>\\r\\n        <ng-container matColumnDef=\\\"beds\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef>Beds</th>\\r\\n          <td mat-cell *matCellDef=\\\"let reservationInfo\\\">{{reservationInfo.room.beds}}</td>\\r\\n        </ng-container>\\r\\n        <ng-container matColumnDef=\\\"startDate\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef>Start Date</th>\\r\\n          <td mat-cell *matCellDef=\\\"let reservationInfo\\\">{{reservationInfo.reservation.startDate | date:'dd/MM/yyyy'}}</td>\\r\\n        </ng-container>\\r\\n        <ng-container matColumnDef=\\\"endDate\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef>End Date</th>\\r\\n          <td mat-cell *matCellDef=\\\"let reservationInfo\\\">{{reservationInfo.reservation.endDate | date:'dd/MM/yyyy'}}</td>\\r\\n        </ng-container>\\r\\n        <ng-container matColumnDef=\\\"price\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef>Price</th>\\r\\n          <td mat-cell *matCellDef=\\\"let reservationInfo\\\">{{reservationInfo.reservation.price}}</td>\\r\\n        </ng-container>\\r\\n        <tr mat-header-row *matHeaderRowDef=\\\"columnsToDisplayReservations\\\"></tr>\\r\\n        <tr mat-row *matRowDef=\\\"let reservationInfo; columns: columnsToDisplayReservations\\\"\\r\\n        (click)=\\\"selectRow(reservationInfo.reservation.id)\\\" class=\\\"pointer\\\"\\r\\n        [ngClass]=\\\"{selectedRow: selectedReservationId === reservationInfo.reservation.id}\\\"></tr>\\r\\n      </table>\\r\\n      <button type=\\\"submit\\\" mat-button class=\\\"background-primary text-floral-white\\\"\\r\\n              (click)=\\\"reserve()\\\" style=\\\"margin: 10px\\\">Reserve</button>\\r\\n    </div>\\r\\n    <div fxFlex>\\r\\n      <table #tablespecialoffers mat-table [dataSource]=\\\"specialOffers\\\">\\r\\n        <ng-container matColumnDef=\\\"name\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef>Special offers</th>\\r\\n          <td mat-cell *matCellDef=\\\"let specialOffer\\\">{{specialOffer.name}} </td>\\r\\n        </ng-container>\\r\\n        <tr mat-header-row *matHeaderRowDef=\\\"columnsToDisplaySpecialOffers\\\"></tr>\\r\\n        <tr mat-row *matRowDef=\\\"let specialOffer; columns: columnsToDisplaySpecialOffers\\\"></tr>\\r\\n      </table>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\"","module.exports = \"td.mat-cell {\\n  padding: 15px; }\\n\\nth.mat-header-cell {\\n  padding: 15px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcm9vbS1xdWljay1yZXNlcnZhdGlvbi9EOlxcRHVzYW5cXDFGYWtzXFxNUlNfSVNBXFxNUlNfSVNBX1RpbTEyXFxEYXNUcmF2ZWxTaXRlL3NyY1xcYXBwXFxyb29tLXF1aWNrLXJlc2VydmF0aW9uXFxyb29tLXF1aWNrLXJlc2VydmF0aW9uLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBYSxFQUFBOztBQUdmO0VBQ0UsYUFBYSxFQUFBIiwiZmlsZSI6InNyYy9hcHAvcm9vbS1xdWljay1yZXNlcnZhdGlvbi9yb29tLXF1aWNrLXJlc2VydmF0aW9uLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGQubWF0LWNlbGwge1xyXG4gIHBhZGRpbmc6IDE1cHg7XHJcbn1cclxuXHJcbnRoLm1hdC1oZWFkZXItY2VsbCB7XHJcbiAgcGFkZGluZzogMTVweDtcclxufVxyXG4iXX0= */\"","import {Component, Inject, OnInit, ViewChild} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {HotelApi, HotelSpecialOfferApi, MyuserApi, ReservationOfferApi, RoomApi, RoomReservationApi} from '../shared/sdk/services/custom';\r\nimport {Router} from '@angular/router';\r\nimport {MatSnackBar, MatTable} from '@angular/material';\r\nimport {LoginServiceService} from '../login-service.service';\r\nimport {HotelSpecialOffer, LoopBackConfig, ReservationOffer, Room, RoomReservation} from '../shared/sdk';\r\nimport {API_VERSION} from '../shared/baseUrl';\r\n\r\n@Component({\r\n  selector: 'app-room-quick-reservation',\r\n  templateUrl: './room-quick-reservation.component.html',\r\n  styleUrls: ['./room-quick-reservation.component.scss']\r\n})\r\nexport class RoomQuickReservationComponent implements OnInit {\r\n\r\n  minDate = new Date();\r\n  userType: string;\r\n  foundReservations: RoomReservation[];\r\n  reservationsInfo = [];\r\n  searchActive = true;\r\n  searchDone = false;\r\n  columnsToDisplayReservations = ['hotel', 'roomNumber', 'beds', 'startDate', 'endDate', 'price'];\r\n  selectedReservationId;\r\n  specialOffers = [];\r\n  specialOffersDict = {};\r\n  columnsToDisplaySpecialOffers = ['name'];\r\n\r\n  searchQRoomsForm: FormGroup;\r\n  @ViewChild('fformSearchQRooms') searchQRoomsFormDirective;\r\n\r\n  @ViewChild('tablereservations') tableReservations: MatTable<any>;\r\n  @ViewChild('tablespecialoffers') tableSpecialOffers: MatTable<any>;\r\n\r\n  searchQRoomsFormErrors = {\r\n    'startDate': '',\r\n    'endDate': ''\r\n  };\r\n  searchQRoomsFormValidationMessages = {\r\n    'startDate': {\r\n      'required': 'Start date is required',\r\n      'min': 'Start date has to be after today'\r\n    },\r\n    'endDate': {\r\n      'required': 'End date is required',\r\n      'min': 'End date has to be after today',\r\n      'max': 'End date has to be after start date'\r\n    }\r\n  };\r\n\r\n  constructor(@Inject('baseURL') private baseURL,\r\n              private roomreservationservice: RoomReservationApi,\r\n              private roomservice: RoomApi,\r\n              private hotelservice: HotelApi,\r\n              private myuserservice: MyuserApi,\r\n              private reservationspecialofferservice: ReservationOfferApi,\r\n              private specialofferservice: HotelSpecialOfferApi,\r\n              private _router: Router,\r\n              private fb: FormBuilder,\r\n              private loginService: LoginServiceService,\r\n              public snackBar: MatSnackBar) {\r\n    LoopBackConfig.setBaseURL(baseURL);\r\n    LoopBackConfig.setApiVersion(API_VERSION);\r\n    this.minDate.setHours(0, 0, 0, 0);\r\n    this.createSearchQRoomsForm();\r\n    this.loginService.user.subscribe(data => {\r\n      if (data) {\r\n        this.userType = data.user.type;\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  openSnackBar(message: string, action: string) {\r\n    this.snackBar.open(message, action, {\r\n      duration: 2000,\r\n    });\r\n  }\r\n\r\n  onValueChangedSearchQRooms(data?: any)  {\r\n    if (!this.searchQRoomsForm) {return; }\r\n    const form = this.searchQRoomsForm;\r\n    for (const field in this.searchQRoomsFormErrors) {\r\n      if (this.searchQRoomsFormErrors.hasOwnProperty(field)) {\r\n        this.searchQRoomsFormErrors[field] = '';\r\n        const control = form.get(field);\r\n        if (control && !control.valid) {\r\n          const messages = this.searchQRoomsFormValidationMessages[field];\r\n          for (const key in control.errors) {\r\n            if (control.errors.hasOwnProperty(key)) {\r\n              this.searchQRoomsFormErrors[field] += messages[key] + ' ';\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    const startDate = form.get('startDate').value;\r\n    const endDate = form.get('endDate').value;\r\n    if (startDate < this.minDate) {\r\n      this.searchQRoomsFormErrors['startDate'] += this.searchQRoomsFormValidationMessages['startDate']['min'] + ' ';\r\n      this.searchQRoomsForm.controls['startDate'].setErrors({'min' : true});\r\n    }\r\n    if (endDate < this.minDate) {\r\n      this.searchQRoomsFormErrors['endDate'] += this.searchQRoomsFormValidationMessages['endDate']['min'] + ' ';\r\n      this.searchQRoomsForm.controls['endDate'].setErrors({'min' : true});\r\n    }\r\n    if (endDate <= startDate)  {\r\n      this.searchQRoomsFormErrors['endDate'] += this.searchQRoomsFormValidationMessages['endDate']['max'] + ' ';\r\n      this.searchQRoomsForm.controls['endDate'].setErrors({'max' : true});\r\n    }\r\n  }\r\n\r\n  createSearchQRoomsForm() {\r\n    this.searchQRoomsForm = this.fb.group({\r\n      startDate: [this.minDate, [Validators.required]],\r\n      endDate: [this.minDate, [Validators.required]]\r\n    });\r\n\r\n    this.searchQRoomsForm.valueChanges\r\n      .subscribe(data => this.onValueChangedSearchQRooms(data));\r\n    this.onValueChangedSearchQRooms();\r\n  }\r\n\r\n  onSearchQRoomsSubmit() {\r\n    const data = this.searchQRoomsForm.value;\r\n    this.roomreservationservice.find({where: {\r\n        startDate: new Date(data.startDate),\r\n        endDate: new Date(data.endDate),\r\n        myuserId: null\r\n      }}).subscribe((reservations: RoomReservation[]) => {\r\n        this.foundReservations = reservations;\r\n        this.searchDone = true;\r\n        this.searchActive = false;\r\n        this.reservationsInfo = [];\r\n        const done = new Promise((resolve, reject) => {\r\n        let index = 0;\r\n        for (const roomReservation of this.foundReservations) {\r\n          this.roomservice.findById(roomReservation.roomId)\r\n            .subscribe((room: Room) => {\r\n              this.hotelservice.findById(roomReservation.hotelId)\r\n                .subscribe((hotel) => {\r\n                  this.reservationsInfo.push({reservation: roomReservation, room: room, hotel: hotel});\r\n                  this.reservationspecialofferservice.find({where: {'roomReservationId': roomReservation.id}})\r\n                    .subscribe((reservationOfferIds: ReservationOffer[]) => {\r\n                      const done1 = new Promise((resolve1, reject1) => {\r\n                        if (reservationOfferIds.length === 0) {\r\n                          resolve1();\r\n                        }\r\n                        let indexOffers = 0;\r\n                        const offers = [];\r\n                        for (const reservationOfferId of reservationOfferIds) {\r\n                          this.specialofferservice.findById(reservationOfferId.specialOfferId)\r\n                            .subscribe((specialOffer: HotelSpecialOffer) => {\r\n                              offers.push(specialOffer);\r\n                              indexOffers++;\r\n                              if (indexOffers === reservationOfferIds.length) {\r\n                                this.specialOffersDict[roomReservation.id] = offers;\r\n                                resolve1();\r\n                              }\r\n                            });\r\n                        }\r\n                      });\r\n                      done1\r\n                        .then(() => {\r\n\r\n                          index++;\r\n                          if (index === this.foundReservations.length) {\r\n                            resolve();\r\n                          }\r\n                        });\r\n                    });\r\n                }, err => this.openSnackBar('Something went wrong. Please try again.', 'Dismiss'));\r\n            }, err => this.openSnackBar('Something went wrong. Please try again.', 'Dismiss'));\r\n        }\r\n      });\r\n      done.then(() => {\r\n        this.tableReservations.renderRows();\r\n      });\r\n    }, err => this.openSnackBar('Something went wrong. Please try again.', 'Dismiss'));\r\n  }\r\n\r\n  selectRow(id) {\r\n    this.selectedReservationId = id;\r\n    this.specialOffers = this.specialOffersDict[id];\r\n  }\r\n\r\n  reserve() {\r\n    let i = 0;\r\n    let roomId = 1;\r\n    for (const reservationInfo of this.reservationsInfo) {\r\n      if (reservationInfo.reservation.id === this.selectedReservationId) {\r\n        roomId = reservationInfo.room.id;\r\n        break;\r\n      }\r\n      i++;\r\n    }\r\n    this.roomreservationservice.quickReservation(this.selectedReservationId,\r\n      this.myuserservice.getCachedCurrent().id, roomId)\r\n      .subscribe(reservation => {\r\n        this.reservationsInfo.splice(i, 1);\r\n        this.tableReservations.renderRows();\r\n        this.openSnackBar('Reservation successful', 'Dismiss');\r\n      }, err => {\r\n        this.openSnackBar('Reservation failed. Please search and try again', 'Dismiss');\r\n      });\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"container\\\"\\r\\n  fxLayout=\\\"row\\\"\\r\\n  fxLayoutGap=\\\"20px\\\">\\r\\n  <div fxFlex>\\r\\n    <table #tablereservations mat-table [dataSource]=\\\"reservationsInfo\\\">\\r\\n      <ng-container matColumnDef=\\\"hotel\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef>Hotel</th>\\r\\n        <td mat-cell *matCellDef=\\\"let reservationInfo\\\">{{reservationInfo.hotel.name}} </td>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"roomNumber\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef>Room Number</th>\\r\\n        <td mat-cell *matCellDef=\\\"let reservationInfo\\\">{{reservationInfo.room.number}}</td>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"beds\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef>Beds</th>\\r\\n        <td mat-cell *matCellDef=\\\"let reservationInfo\\\">{{reservationInfo.room.beds}}</td>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"startDate\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef>Start Date</th>\\r\\n        <td mat-cell *matCellDef=\\\"let reservationInfo\\\">{{reservationInfo.reservation.startDate | date:'dd/MM/yyyy'}}</td>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"endDate\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef>End Date</th>\\r\\n        <td mat-cell *matCellDef=\\\"let reservationInfo\\\">{{reservationInfo.reservation.endDate | date:'dd/MM/yyyy'}}</td>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"price\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef>Price</th>\\r\\n        <td mat-cell *matCellDef=\\\"let reservationInfo\\\">{{reservationInfo.reservation.price}}</td>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"action\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef>Action</th>\\r\\n        <td mat-cell *matCellDef=\\\"let reservationInfo\\\"><span style=\\\"color:blue\\\" class=\\\"pointer\\\"\\r\\n                                                             (click)=\\\"deleteReservation(reservationInfo.reservation.id)\\\">\\r\\n                                                              Delete</span></td>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"rate\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef>Rate</th>\\r\\n        <td mat-cell *matCellDef=\\\"let reservationInfo\\\"><span *ngIf=!reservationInfo.reservation.rated style=\\\"color:blue\\\" class=\\\"pointer\\\"\\r\\n                                                             (click)=\\\"rateReservation(reservationInfo.reservation.id)\\\">\\r\\n                                                              Rate</span>\\r\\n                                                        <span *ngIf=reservationInfo.reservation.rated style=\\\"color:green\\\" class=\\\"pointer\\\">\\r\\n                                                              Rated </span></td>\\r\\n      </ng-container>\\r\\n      <tr mat-header-row *matHeaderRowDef=\\\"columnsToDisplayReservations\\\"></tr>\\r\\n      <tr mat-row *matRowDef=\\\"let reservationInfo; columns: columnsToDisplayReservations\\\"\\r\\n          (click)=\\\"selectReservation(reservationInfo.reservation.id)\\\" class=\\\"pointer\\\"\\r\\n          [ngClass]=\\\"{selectedRow: selectedReservation === reservationInfo.reservation.id}\\\"></tr>\\r\\n    </table>\\r\\n    <div>\\r\\n      <a mat-button (click)=\\\"previousPage()\\\" [disabled]=\\\"this.pageNum === 0\\\">Previous page</a>\\r\\n      <a mat-button (click)=\\\"nextPage()\\\" [disabled]=\\\"this.reservationsInfo.length !== this.pageSize\\\">Next page</a>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div fxFlex>\\r\\n    <table #tablespecialoffers mat-table [dataSource]=\\\"specialOffers\\\">\\r\\n      <ng-container matColumnDef=\\\"name\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef>Special offers</th>\\r\\n        <td mat-cell *matCellDef=\\\"let specialOffer\\\">{{specialOffer.name}} </td>\\r\\n      </ng-container>\\r\\n      <tr mat-header-row *matHeaderRowDef=\\\"columnsToDisplaySpecialOffers\\\"></tr>\\r\\n      <tr mat-row *matRowDef=\\\"let specialOffer; columns: columnsToDisplaySpecialOffers\\\"></tr>\\r\\n    </table>\\r\\n  </div>\\r\\n\"","module.exports = \"td.mat-cell {\\n  padding: 15px; }\\n\\nth.mat-header-cell {\\n  padding: 15px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcm9vbS1yZXNlcnZhdGlvbi1saXN0L0Q6XFxEdXNhblxcMUZha3NcXE1SU19JU0FcXE1SU19JU0FfVGltMTJcXERhc1RyYXZlbFNpdGUvc3JjXFxhcHBcXHJvb20tcmVzZXJ2YXRpb24tbGlzdFxccm9vbS1yZXNlcnZhdGlvbi1saXN0LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBYSxFQUFBOztBQUdmO0VBQ0UsYUFBYSxFQUFBIiwiZmlsZSI6InNyYy9hcHAvcm9vbS1yZXNlcnZhdGlvbi1saXN0L3Jvb20tcmVzZXJ2YXRpb24tbGlzdC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbInRkLm1hdC1jZWxsIHtcclxuICBwYWRkaW5nOiAxNXB4O1xyXG59XHJcblxyXG50aC5tYXQtaGVhZGVyLWNlbGwge1xyXG4gIHBhZGRpbmc6IDE1cHg7XHJcbn1cclxuIl19 */\"","import {Component, Inject, OnInit, ViewChild} from '@angular/core';\r\nimport {HotelSpecialOffer, ReservationOffer, Room, RoomReservation} from '../shared/sdk/models';\r\nimport {HotelApi, HotelSpecialOfferApi, MyuserApi, ReservationOfferApi, RoomApi, RoomReservationApi} from '../shared/sdk/services/custom';\r\nimport {MatSnackBar, MatTable, MatDialog} from '@angular/material';\r\nimport { ItemService } from '../services/item.service';\r\nimport { RateRoomAndHotelComponent } from '../rate-room-and-hotel/rate-room-and-hotel.component';\r\n\r\n@Component({\r\n  selector: 'app-room-reservation-list',\r\n  templateUrl: './room-reservation-list.component.html',\r\n  styleUrls: ['./room-reservation-list.component.scss']\r\n})\r\nexport class RoomReservationListComponent implements OnInit {\r\n  roomReservations: RoomReservation[];\r\n  reservationsInfo = [];\r\n  specialOffers = [];\r\n  pageNum = 0;\r\n  pageSize = 8;\r\n  selectedReservation = '';\r\n  specialOffersDict = {};\r\n\r\n  columnsToDisplayReservations = ['hotel', 'roomNumber', 'beds', 'startDate', 'endDate', 'price', 'action', 'rate'];\r\n  columnsToDisplaySpecialOffers = ['name'];\r\n\r\n  @ViewChild('tablereservations') tableReservations: MatTable<any>;\r\n  @ViewChild('tablespecialoffers') tableSpecialOffers: MatTable<any>;\r\n\r\n  constructor(@Inject('baseURL') private baseURL,\r\n              private myuserservice: MyuserApi,\r\n              private hotelservice: HotelApi,\r\n              private roomservice: RoomApi,\r\n              private roomresesrvationservice: RoomReservationApi,\r\n              private reservationspecialofferservice: ReservationOfferApi,\r\n              private specialofferservice: HotelSpecialOfferApi,\r\n              private snackBar: MatSnackBar,\r\n              private itemService: ItemService,\r\n              public dialog: MatDialog\r\n              ) { }\r\n\r\n  ngOnInit() {\r\n    this.getReservations();\r\n  }\r\n\r\n  getReservations() {\r\n    if (this.myuserservice.getCachedCurrent()) {\r\n      this.myuserservice.getRoomReservations(this.myuserservice.getCachedCurrent().id,\r\n        this.pageSize, this.pageNum * this.pageSize)\r\n        .subscribe(result => {\r\n          this.reservationsInfo = [];\r\n          this.roomReservations = result.retval;\r\n          const done = new Promise((resolve, reject) => {\r\n            let index = 0;\r\n            for (const roomReservation of this.roomReservations) {\r\n              this.roomservice.findById(roomReservation.roomId)\r\n                .subscribe((room: Room) => {\r\n                  this.hotelservice.findById(roomReservation.hotelId)\r\n                    .subscribe((hotel) => {\r\n                      this.reservationsInfo.push({reservation: roomReservation, room: room, hotel: hotel});\r\n                      this.reservationspecialofferservice.find({where: {'roomReservationId': roomReservation.id}})\r\n                        .subscribe((reservationOfferIds: ReservationOffer[]) => {\r\n                          const done1 = new Promise((resolve1, reject1) => {\r\n                            if (reservationOfferIds.length === 0) {\r\n                              resolve1();\r\n                            }\r\n                            let indexOffers = 0;\r\n                            const offers = [];\r\n                            for (const reservationOfferId of reservationOfferIds) {\r\n                              this.specialofferservice.findById(reservationOfferId.specialOfferId)\r\n                                .subscribe((specialOffer: HotelSpecialOffer) => {\r\n                                  offers.push(specialOffer);\r\n                                  indexOffers++;\r\n                                  if (indexOffers === reservationOfferIds.length) {\r\n                                    this.specialOffersDict[roomReservation.id] = offers;\r\n                                    resolve1();\r\n                                  }\r\n                                });\r\n                            }\r\n                          });\r\n                          done1\r\n                            .then(() => {\r\n                              index++;\r\n                              if (index === this.roomReservations.length) {\r\n                                resolve();\r\n                              }\r\n                            });\r\n                        });\r\n                    }, err => this.openSnackBar('Something went wrong. Please try again.', 'Dismiss'));\r\n                }, err => this.openSnackBar('Something went wrong. Please try again.', 'Dismiss'));\r\n            }\r\n          });\r\n          done.then(() => {\r\n            this.tableReservations.renderRows();\r\n          })\r\n            .catch(err => this.openSnackBar('Something went wrong. Please try again.', 'Dismiss'));\r\n        }, err => this.openSnackBar('Something went wrong. Please try again.', 'Dismiss'));\r\n    }\r\n  }\r\n\r\n  openSnackBar(message: string, action: string) {\r\n    this.snackBar.open(message, action, {\r\n      duration: 2000,\r\n    });\r\n  }\r\n\r\n  nextPage() {\r\n    if (this.reservationsInfo.length === this.pageSize) {\r\n      this.pageNum++;\r\n      this.getReservations();\r\n    }\r\n  }\r\n\r\n  previousPage() {\r\n    if (this.pageNum > 0) {\r\n      this.pageNum--;\r\n      this.getReservations();\r\n    }\r\n  }\r\n\r\n  deleteReservation(id: any) {\r\n    this.roomresesrvationservice.cancel(id)\r\n      .subscribe(\r\n        (result) => {\r\n          for (const resInfo of this.reservationsInfo) {\r\n            if (resInfo.reservation.id === id) {\r\n              this.reservationsInfo.splice(this.reservationsInfo.indexOf(resInfo), 1);\r\n              break;\r\n            }\r\n          }\r\n          this.tableReservations.renderRows();\r\n          this.openSnackBar('Successfully cancelled reservation', 'Dismiss');\r\n        },\r\n        (err) => {\r\n          this.openSnackBar('Can not cancel this reservation, it is too late', 'Dismiss');\r\n        }\r\n      );\r\n  }\r\n\r\n  selectReservation(id: any) {\r\n    this.selectedReservation = id;\r\n    this.specialOffers = this.specialOffersDict[id];\r\n    this.tableSpecialOffers.renderRows();\r\n\r\n  }\r\n  rateReservation(id: any) {\r\n    this.itemService.setRoomReservationIdForRate(id);\r\n    this.dialog.open(RateRoomAndHotelComponent, {width: '500px', height: '450 px'});\r\n  }\r\n}\r\n","module.exports = \"<div *ngIf=\\\"foundRoom\\\">\\r\\n  <mat-toolbar color=\\\"primary\\\">\\r\\n    <h3>Room {{room.number}}</h3>\\r\\n    <a mat-button (click) = \\\"addPriceButton()\\\"> Add a price</a>\\r\\n    <a mat-button (click) = \\\"addDiscountButton()\\\"> Add a discount </a>\\r\\n    <span class=\\\"flex-spacer\\\"></span>\\r\\n  </mat-toolbar>\\r\\n  <div *ngIf=\\\"addPriceActive\\\">\\r\\n    <div fxLayout=\\\"column\\\">\\r\\n      <div fxFlex>\\r\\n        <div>\\r\\n            <h3>Add a price for room</h3>\\r\\n            <hr>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div fxLayout=\\\"row\\\">\\r\\n        <div fxFlex class=\\\"form-size\\\">\\r\\n          <form novalidate [formGroup]=\\\"addPriceForm\\\" #fformAddPrice=\\\"ngForm\\\" (ngSubmit)=\\\"onAddPriceSubmit()\\\">\\r\\n            <p>\\r\\n              <mat-form-field class=\\\"half-width\\\">\\r\\n                <input matInput formControlName=\\\"price\\\" placeholder=\\\"Price\\\" type=\\\"number\\\">\\r\\n                <mat-error *ngIf=\\\"addPriceFormErrors.price\\\">\\r\\n                  {{ addPriceFormErrors.price}}\\r\\n                </mat-error>\\r\\n              </mat-form-field>\\r\\n            </p>\\r\\n            <p>\\r\\n              <mat-form-field class=\\\"half-width\\\">\\r\\n                <input matInput formControlName=\\\"startDate\\\" [matDatepicker]=\\\"myDatepicker\\\" readonly placeholder=\\\"Start time\\\">\\r\\n                <mat-datepicker-toggle [for]=\\\"myDatepicker\\\"></mat-datepicker-toggle>\\r\\n                <mat-datepicker #myDatepicker></mat-datepicker>\\r\\n                <mat-error *ngIf=\\\"addPriceFormErrors.startDate\\\">\\r\\n                  {{ addPriceFormErrors.startDate}}\\r\\n                </mat-error>\\r\\n              </mat-form-field>\\r\\n            </p>\\r\\n            <p>\\r\\n              <button type=\\\"submit\\\" mat-button class=\\\"background-primary text-floral-white\\\"\\r\\n                      [disabled]=\\\"addPriceForm.invalid\\\">Submit</button>\\r\\n            </p>\\r\\n          </form>\\r\\n        </div>\\r\\n        <div fxFlex>\\r\\n          <table #tableprices mat-table [dataSource]=\\\"room.roomPrices\\\">\\r\\n            <ng-container matColumnDef=\\\"startDate\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef>Start Date</th>\\r\\n              <td mat-cell *matCellDef=\\\"let roomPrice\\\">{{roomPrice.startDate | date:'dd/MM/yyyy'}}</td>\\r\\n            </ng-container>\\r\\n            <ng-container matColumnDef=\\\"price\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef>Price</th>\\r\\n              <td mat-cell *matCellDef=\\\"let roomPrice\\\">{{roomPrice.price}}</td>\\r\\n            </ng-container>\\r\\n            <ng-container matColumnDef=\\\"action\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef>Action</th>\\r\\n              <td mat-cell *matCellDef=\\\"let roomPrice\\\">Delete</td>\\r\\n            </ng-container>\\r\\n            <tr mat-header-row *matHeaderRowDef=\\\"columnsToDisplayPrice\\\"></tr>\\r\\n            <tr mat-row *matRowDef=\\\"let myRowData; columns: columnsToDisplayPrice\\\"></tr>\\r\\n          </table>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div *ngIf=\\\"addDiscountActive\\\">\\r\\n    <div fxLayout=\\\"column\\\">\\r\\n      <div fxFlex>\\r\\n          <div>\\r\\n              <h3>Add a discount for room</h3>\\r\\n              <hr>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div fxLayout=\\\"row\\\">\\r\\n          <div fxFlex class=\\\"form-size\\\">\\r\\n            <form novalidate [formGroup]=\\\"addDiscountForm\\\" #fformAddDiscount=\\\"ngForm\\\" (ngSubmit)=\\\"onAddDiscountSubmit()\\\">\\r\\n              <div fxLayout=\\\"row\\\">\\r\\n                <div fxFlex>\\r\\n                  <p>\\r\\n                    <mat-form-field class=\\\"half-width\\\">\\r\\n                      <input matInput formControlName=\\\"discount\\\" placeholder=\\\"Discount\\\" type=\\\"number\\\">\\r\\n                      <mat-error *ngIf=\\\"addDiscountFormErrors.discount\\\">\\r\\n                        {{ addDiscountFormErrors.discount}}\\r\\n                      </mat-error>\\r\\n                    </mat-form-field>\\r\\n                  </p>\\r\\n                  <p>\\r\\n                    <mat-form-field class=\\\"half-width\\\">\\r\\n                      <input matInput formControlName=\\\"startDate\\\" [matDatepicker]=\\\"myDatepicker2\\\" readonly placeholder=\\\"Start time\\\">\\r\\n                      <mat-datepicker-toggle [for]=\\\"myDatepicker2\\\"></mat-datepicker-toggle>\\r\\n                      <mat-datepicker #myDatepicker2></mat-datepicker>\\r\\n                      <mat-error *ngIf=\\\"addDiscountFormErrors.startDate\\\">\\r\\n                        {{ addDiscountFormErrors.startDate}}\\r\\n                      </mat-error>\\r\\n                    </mat-form-field>\\r\\n                  </p>\\r\\n                  <p>\\r\\n                    <mat-form-field class=\\\"half-width\\\">\\r\\n                      <input matInput formControlName=\\\"endDate\\\" [matDatepicker]=\\\"myDatepicker3\\\" readonly placeholder=\\\"End time\\\">\\r\\n                      <mat-datepicker-toggle [for]=\\\"myDatepicker3\\\"></mat-datepicker-toggle>\\r\\n                      <mat-datepicker #myDatepicker3></mat-datepicker>\\r\\n                      <mat-error *ngIf=\\\"addDiscountFormErrors.endDate\\\">\\r\\n                        {{ addDiscountFormErrors.endDate}}\\r\\n                      </mat-error>\\r\\n                    </mat-form-field>\\r\\n                  </p>\\r\\n                  <button type=\\\"submit\\\" mat-button class=\\\"background-primary text-floral-white\\\"\\r\\n                  [disabled]=\\\"addDiscountForm.invalid\\\">Submit</button>\\r\\n                </div>\\r\\n                <div fxFlex>\\r\\n                  <table mat-table [dataSource]=\\\"hotel.hotelSpecialOffers\\\">\\r\\n                    <ng-container matColumnDef=\\\"name\\\">\\r\\n                      <th mat-header-cell *matHeaderCellDef>Name</th>\\r\\n                      <td mat-cell *matCellDef=\\\"let specialOffer\\\">{{specialOffer.name}}</td>\\r\\n                    </ng-container>\\r\\n                    <ng-container matColumnDef=\\\"price\\\">\\r\\n                      <th mat-header-cell *matHeaderCellDef>Price</th>\\r\\n                      <td mat-cell *matCellDef=\\\"let specialOffer\\\">{{specialOffer.price}}</td>\\r\\n                    </ng-container>\\r\\n                    <tr mat-header-row *matHeaderRowDef=\\\"columnsToDisplaySpecialOffer\\\"></tr>\\r\\n                    <tr mat-row *matRowDef=\\\"let specialOffer; columns: columnsToDisplaySpecialOffer\\\"\\r\\n                        (click)=\\\"toggleRow(specialOffer.id)\\\" class=\\\"pointer\\\"\\r\\n                        [ngClass]=\\\"{selectedRow: selectedOffers.indexOf(specialOffer.id)>=0}\\\"></tr>\\r\\n                  </table>\\r\\n                </div>\\r\\n              </div>\\r\\n            </form>\\r\\n          </div>\\r\\n          <div fxFlex>\\r\\n            <table #tablediscounts mat-table [dataSource]=\\\"room.hotelDiscounts\\\">\\r\\n              <ng-container matColumnDef=\\\"startDate\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef>Start Date</th>\\r\\n                <td mat-cell *matCellDef=\\\"let hotelDiscount\\\">{{hotelDiscount.startDate | date:'dd/MM/yyyy'}}</td>\\r\\n              </ng-container>\\r\\n              <ng-container matColumnDef=\\\"endDate\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef>End Date</th>\\r\\n                <td mat-cell *matCellDef=\\\"let hotelDiscount\\\">{{hotelDiscount.endDate | date:'dd/MM/yyyy'}}</td>\\r\\n              </ng-container>\\r\\n              <ng-container matColumnDef=\\\"discount\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef>Discount</th>\\r\\n                <td mat-cell *matCellDef=\\\"let hotelDiscount\\\">{{hotelDiscount.discount}}</td>\\r\\n              </ng-container>\\r\\n              <ng-container matColumnDef=\\\"action\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef>Action</th>\\r\\n                <td mat-cell *matCellDef=\\\"let hotelDiscount\\\">Delete</td>\\r\\n              </ng-container>\\r\\n              <tr mat-header-row *matHeaderRowDef=\\\"columnsToDisplayDiscount\\\"></tr>\\r\\n              <tr mat-row *matRowDef=\\\"let myRowData; columns: columnsToDisplayDiscount\\\"></tr>\\r\\n            </table>\\r\\n          </div>\\r\\n        </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \"td.mat-cell {\\n  padding: 15px; }\\n\\nth.mat-header-cell {\\n  padding: 15px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcm9vbS9EOlxcRHVzYW5cXDFGYWtzXFxNUlNfSVNBXFxNUlNfSVNBX1RpbTEyXFxEYXNUcmF2ZWxTaXRlL3NyY1xcYXBwXFxyb29tXFxyb29tLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksYUFBYSxFQUFBOztBQUdmO0VBQ0UsYUFBYSxFQUFBIiwiZmlsZSI6InNyYy9hcHAvcm9vbS9yb29tLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGQubWF0LWNlbGwge1xyXG4gICAgcGFkZGluZzogMTVweDtcclxuICB9XHJcbiAgXHJcbiAgdGgubWF0LWhlYWRlci1jZWxsIHtcclxuICAgIHBhZGRpbmc6IDE1cHg7XHJcbiAgfSJdfQ== */\"","import { Component, OnInit, Inject, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Room, RoomApi, HotelApi, Hotel, RoomPrice, HotelDiscount } from '../shared/sdk';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { RoomPriceApi, HotelDiscountApi, ReservationOfferApi } from '../shared/sdk/services/custom';\r\nimport {MatSnackBar, MatTable} from '@angular/material';\r\nimport {ItemService} from '../services/item.service';\r\n\r\n@Component({\r\n  selector: 'app-room',\r\n  templateUrl: './room.component.html',\r\n  styleUrls: ['./room.component.scss']\r\n})\r\nexport class RoomComponent implements OnInit {\r\n  hotel: Hotel;\r\n  room: Room;\r\n  foundRoom = false;\r\n  addPriceActive = true;\r\n  addDiscountActive = false;\r\n  minDate = new Date();\r\n  selectedOffers: number[] = [];\r\n\r\n  columnsToDisplayPrice = ['startDate', 'price', 'action'];\r\n  columnsToDisplayDiscount = ['startDate', 'endDate', 'discount', 'action'];\r\n  columnsToDisplaySpecialOffer = ['name', 'price'];\r\n\r\n  addPriceFormErrors = {\r\n    'price': '',\r\n    'startDate': ''\r\n  };\r\n\r\n  addPriceFormValidationMessages = {\r\n    'price': {\r\n      'required': 'Price is required',\r\n      'min': 'Price has to be higher than 0'\r\n    },\r\n    'startDate': {\r\n      'required': 'Start date is required',\r\n      'min': 'Start date has to be after today'\r\n    }\r\n  };\r\n\r\n  addDiscountFormErrors = {\r\n    'discount': '',\r\n    'startDate': '',\r\n    'endDate': ''\r\n  };\r\n\r\n  addDiscountFormValidationMessages = {\r\n    'discount': {\r\n      'required': 'Discount is required',\r\n      'min': 'Discount has to be higher than 0',\r\n      'max': 'Discount has to be less than 101'\r\n    },\r\n    'startDate': {\r\n      'required': 'Start date is required',\r\n      'min': 'Start date has to be after today'\r\n    },\r\n    'endDate': {\r\n      'required': 'End date is required',\r\n      'min': 'End date has to be after today',\r\n      'max': 'End date has to be after start date'\r\n    }\r\n  };\r\n\r\n  addPriceForm: FormGroup;\r\n  @ViewChild('fformAddPrice') addPriceFormDirective;\r\n\r\n  addDiscountForm: FormGroup;\r\n  @ViewChild('fformAddDiscount') addDiscountFormDirective;\r\n\r\n  @ViewChild('tableprices') tablePrices: MatTable<any>;\r\n\r\n  @ViewChild('tablediscounts') tableDiscounts: MatTable<any>;\r\n\r\n  constructor(\r\n    private router: ActivatedRoute,\r\n    private roomservice: RoomApi,\r\n    private roompriceservice: RoomPriceApi,\r\n    private roomdiscountservice: HotelDiscountApi,\r\n    private hotelservice: HotelApi,\r\n    private itemservice: ItemService,\r\n    private reservationofferservice: ReservationOfferApi,\r\n    public snackBar: MatSnackBar,\r\n    private fb: FormBuilder\r\n  ) {\r\n    this.minDate.setHours(0, 0, 0, 0);\r\n    this.createAddPriceForm();\r\n    this.createAddDiscountForm();\r\n   }\r\n\r\n  ngOnInit() {\r\n    const id = this.router.snapshot.params['id'];\r\n    this.roomservice.findById(id, {include: ['roomPrices', 'hotelDiscounts']})\r\n    .subscribe((result: Room) =>  {\r\n      this.room = result;\r\n      this.foundRoom = true;\r\n    });\r\n    this.hotelservice.findOne({'where': {'id' : this.itemservice.getHotelId()}, include: 'hotelSpecialOffers'})\r\n      .subscribe((hotel: Hotel) => {\r\n        this.hotel = hotel;\r\n      });\r\n  }\r\n\r\n  openSnackBar(message: string, action: string) {\r\n    this.snackBar.open(message, action, {\r\n      duration: 2000,\r\n    });\r\n  }\r\n\r\n  onAddPriceFormValueChanged(data?: any)  {\r\n    if (!this.addPriceForm) {return; }\r\n    const form = this.addPriceForm;\r\n    for (const field in this.addPriceFormErrors) {\r\n      if (this.addPriceFormErrors.hasOwnProperty(field)) {\r\n        this.addPriceFormErrors[field] = '';\r\n        const control = form.get(field);\r\n        if (control && !control.valid) {\r\n          const messages = this.addPriceFormValidationMessages[field];\r\n          for (const key in control.errors) {\r\n            if (control.errors.hasOwnProperty(key)) {\r\n              this.addPriceFormErrors[field] += messages[key] + ' ';\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    const startDate = new Date(form.get('startDate').value);\r\n    if (startDate < this.minDate) {\r\n      this.addPriceFormErrors['startDate'] += this.addPriceFormValidationMessages['startDate']['min'] + ' ';\r\n      this.addPriceForm.controls['startDate'].setErrors({'min' : true});\r\n    }\r\n  }\r\n\r\n  createAddPriceForm() {\r\n    this.addPriceForm = this.fb.group({\r\n      price : [0, [Validators.required, Validators.min(1)]],\r\n      startDate: [this.minDate, [Validators.required]]\r\n    });\r\n    this.addPriceForm.valueChanges\r\n      .subscribe(data => this.onAddPriceFormValueChanged(data));\r\n    this.onAddPriceFormValueChanged();\r\n  }\r\n\r\n  onAddPriceSubmit() {\r\n    const price = this.addPriceForm.value;\r\n    const d = new Date(price.startDate);\r\n    this.roompriceservice.create({\r\n      'price': price.price,\r\n      'startDate': d,\r\n      'hotelId': this.hotel.id,\r\n      'roomId': this.room.id\r\n    }).subscribe((result: RoomPrice) =>  {\r\n      this.room.roomPrices.push(result);\r\n      this.tablePrices.renderRows();\r\n      this.openSnackBar('Added succesfully', 'Dismiss');\r\n    }, err =>  {\r\n      this.openSnackBar('Can not add price', 'Dismiss');\r\n    });\r\n  }\r\n\r\n  onAddDiscountFormValueChanged(data?: any)  {\r\n    if (!this.addDiscountForm) {return; }\r\n    const form = this.addDiscountForm;\r\n    for (const field in this.addDiscountFormErrors) {\r\n      if (this.addDiscountFormErrors.hasOwnProperty(field)) {\r\n        this.addDiscountFormErrors[field] = '';\r\n        const control = form.get(field);\r\n        if (control && !control.valid) {\r\n          const messages = this.addDiscountFormValidationMessages[field];\r\n          for (const key in control.errors) {\r\n            if (control.errors.hasOwnProperty(key)) {\r\n              this.addDiscountFormErrors[field] += messages[key] + ' ';\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    const startDate = form.get('startDate').value;\r\n    if (startDate < this.minDate) {\r\n      this.addDiscountFormErrors['startDate'] += this.addDiscountFormValidationMessages['startDate']['min'] + ' ';\r\n      this.addDiscountForm.controls['startDate'].setErrors({'min' : true});\r\n    }\r\n    const endDate = form.get('endDate').value;\r\n    if (endDate < this.minDate) {\r\n      this.addDiscountFormErrors['endDate'] += this.addDiscountFormValidationMessages['endDate']['min'] + ' ';\r\n      this.addDiscountForm.controls['endDate'].setErrors({'min' : true});\r\n    }\r\n    if (endDate <= startDate)  {\r\n      this.addDiscountFormErrors['endDate'] += this.addDiscountFormValidationMessages['endDate']['max'] + ' ';\r\n      this.addDiscountForm.controls['endDate'].setErrors({'max' : true});\r\n    }\r\n  }\r\n\r\n  createAddDiscountForm() {\r\n    this.addDiscountForm = this.fb.group({\r\n      discount : [0, [Validators.required, Validators.min(1), Validators.max(100)]],\r\n      startDate: [this.minDate, [Validators.required]],\r\n      endDate: [this.minDate, [Validators.required]]\r\n    });\r\n    this.addDiscountForm.valueChanges\r\n      .subscribe(data => this.onAddDiscountFormValueChanged(data));\r\n    this.onAddDiscountFormValueChanged();\r\n  }\r\n\r\n  onAddDiscountSubmit() {\r\n    const discount = this.addDiscountForm.value;\r\n    const d = new Date(discount.startDate);\r\n    const d2 = new Date(discount.endDate);\r\n    this.roomdiscountservice.create({\r\n      'discount': discount.discount,\r\n      'startDate': d,\r\n      'endDate': d2,\r\n      'hotelId': this.hotel.id,\r\n      'roomId': this.room.id\r\n    }).subscribe((result: HotelDiscount) =>  {\r\n      this.room.hotelDiscounts.push(result);\r\n      this.tableDiscounts.renderRows();\r\n      this.selectedOffers.forEach(offerId => {\r\n        this.reservationofferservice.create({\r\n          'roomReservationId': result.reservationId,\r\n          'specialOfferId': offerId\r\n        }).subscribe(result1 =>  {\r\n        });\r\n      });\r\n      this.openSnackBar('Added succesfully', 'Dismiss');\r\n    }, err =>  {\r\n      this.openSnackBar('Can not add discount. There may already exist a reservation for these dates', 'Dismiss');\r\n    });\r\n  }\r\n\r\n  toggleRow(id: number) {\r\n    const index = this.selectedOffers.indexOf(id);\r\n    if (index >= 0)  {\r\n      this.selectedOffers.splice(index, 1);\r\n    } else  {\r\n      this.selectedOffers.push(id);\r\n    }\r\n  }\r\n\r\n  addPriceButton()  {\r\n    this.addPriceActive = true;\r\n    this.addDiscountActive = false;\r\n  }\r\n\r\n  addDiscountButton()  {\r\n    this.addPriceActive = false;\r\n    this.addDiscountActive  = true;\r\n  }\r\n\r\n}\r\n","module.exports = \"<div fxLayout=\\\"column\\\"\\r\\n  fxLayoutGap=\\\"10px\\\">\\r\\n    <div fxFlex>\\r\\n      <h3>Rooms</h3>\\r\\n      <hr>\\r\\n  </div>\\r\\n  <div fxFlex>\\r\\n    <mat-grid-list cols=\\\"3\\\" rowHeight=\\\"200px\\\">\\r\\n      <mat-grid-tile *ngFor=\\\"let room of rooms\\\">\\r\\n        <mat-card [routerLink]=\\\"['/room', room.id]\\\" class=\\\"pointer\\\">\\r\\n          <mat-card-content>\\r\\n            Room number: {{room.number}} <br>\\r\\n            Number of beds: {{room.beds}} <br>\\r\\n            Description: {{room.description}}\\r\\n          </mat-card-content>\\r\\n        </mat-card>\\r\\n      </mat-grid-tile>\\r\\n    </mat-grid-list>         \\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Jvb21zLWxpc3Qvcm9vbXMtbGlzdC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { Room, HotelApi } from '../shared/sdk';\r\nimport { Hotel } from '../shared/sdk/models/';\r\nimport {ItemService} from '../services/item.service';\r\n@Component({\r\n  selector: 'app-rooms-list',\r\n  templateUrl: './rooms-list.component.html',\r\n  styleUrls: ['./rooms-list.component.scss']\r\n})\r\nexport class RoomsListComponent implements OnInit {\r\n  rooms: Room[];\r\n  hotel: Hotel;\r\n\r\n  constructor(@Inject('baseURL') private baseURL,\r\n              private hotelservice: HotelApi,\r\n              private itemservice: ItemService) {\r\n\r\n   }\r\n\r\n  ngOnInit() {\r\n    this.hotelservice.findOne({'where': {'id' : this.itemservice.getHotelId()}})\r\n    .subscribe((hotel: Hotel) => {\r\n      this.hotel = hotel;\r\n      this.hotelservice.getRooms(this.hotel.id)\r\n      .subscribe((result: Room[]) => {\r\n        this.rooms = result;\r\n      });\r\n    });\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {Car, CarPrice, RentalService, RoomApi} from '../shared/sdk';\r\nimport { CarPriceApi } from '../shared/sdk/services'\r\nimport { Observable } from 'rxjs';\r\nimport { RentalServiceApi } from '../shared/sdk/services'; \r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ItemService {\r\n\r\n  constructor(private carPriceService : CarPriceApi,\r\n   private roomservice: RoomApi,\r\n   private rentalServiceService: RentalServiceApi) { \r\n  }\r\n\r\n  toReserve;\r\n  roomToReserve: any;\r\n  carPrices: CarPrice[] = [];\r\n  serviceId;\r\n  hotelId;\r\n  carSpecialOffer;\r\n  header;\r\n\r\n  carReservationIdForRate;\r\n  roomReservationIdForRate;\r\n\r\n  setCarReservationIdForRate(value) {\r\n    this.carReservationIdForRate = value;\r\n  }\r\n\r\n  getCarReservationIdForRate() {\r\n    return this.carReservationIdForRate;\r\n  }\r\n  \r\n  setRoomReservationIdForRate(value) {\r\n    this.roomReservationIdForRate = value;\r\n  }\r\n\r\n  getRoomReservationIdForRate() {\r\n    return this.roomReservationIdForRate;\r\n  }\r\n\r\n  setReservableCar(car) {\r\n    this.toReserve = car;\r\n  }\r\n\r\n  getReservableCar() {\r\n    return this.toReserve;\r\n  }\r\n\r\n  setServiceId(id) {\r\n   this.serviceId = id;\r\n  }\r\n\r\n  getServiceId() {\r\n    return this.serviceId;\r\n  }\r\n\r\n  setHotelId(id) {\r\n    this.hotelId = id;\r\n  }\r\n\r\n  getHotelId() {\r\n    return this.hotelId;\r\n  }\r\n  \r\n  setCarSpecialOffer(specialOffer) {\r\n    this.carSpecialOffer = specialOffer;\r\n  }\r\n\r\n  getCarSpecialOffer() {\r\n    return this.carSpecialOffer;\r\n  }\r\n\r\n  getPrices() {\r\n    const my_observable = new Observable(observer => {\r\n        this.carPriceService.find()\r\n        .subscribe(\r\n          (result) => {\r\n            this.carPrices = result as CarPrice[];\r\n            for (let price of this.carPrices) {\r\n              price.start = new Date(price.start);\r\n            }\r\n            observer.next(this.carPrices);\r\n          },\r\n          (err) => {\r\n            observer.next([]);\r\n          }\r\n        )\r\n      \r\n    });\r\n    return my_observable;\r\n  }\r\n  setReservableRoom(room: any) {\r\n    this.roomToReserve = room;\r\n  }\r\n\r\n  getReservableRoom() {\r\n    return this.roomToReserve;\r\n  }\r\n\r\n  setHeader(header) {\r\n    this.header = header;\r\n  }\r\n\r\n  getHeader() {\r\n    return this.header;\r\n  }\r\n\r\n  findAvailableRooms1(date1: Date, date2: Date, location, price: number, beds: number): Observable<any> {\r\n    const observable = new Observable(observer => {\r\n      this.roomservice.findAvailableRooms(date1.toISOString(), date2.toISOString(), location, price, beds)\r\n        .subscribe(result => {\r\n          const oneDay = 24 * 60 * 60 * 1000; // hours*minutes*seconds*milliseconds\r\n          const numDays = Math.round(Math.abs((date1.getTime() - date2.getTime()) / (oneDay)));\r\n          for (const item of result.retval) {\r\n            item.price *= numDays;\r\n          }\r\n          observer.next(result);\r\n        }, err => {\r\n          observer.next([]);\r\n        });\r\n    });\r\n    return observable;\r\n  }\r\n}\r\n","export const baseURL = 'https://das-travel-site.herokuapp.com';\r\nexport const API_VERSION = 'api';","/* tslint:disable */\r\n/**\r\n* @module SDKModule\r\n* @author Jonathan Casarrubias <t:@johncasarrubias> <gh:jonathan-casarrubias>\r\n* @license MIT 2016 Jonathan Casarrubias\r\n* @version 2.1.0\r\n* @description\r\n* The SDKModule is a generated Software Development Kit automatically built by\r\n* the LoopBack SDK Builder open source module.\r\n*\r\n* The SDKModule provides Angular 2 >= RC.5 support, which means that NgModules\r\n* can import this Software Development Kit as follows:\r\n*\r\n*\r\n* APP Route Module Context\r\n* ============================================================================\r\n* import { NgModule }       from '@angular/core';\r\n* import { BrowserModule }  from '@angular/platform-browser';\r\n* // App Root \r\n* import { AppComponent }   from './app.component';\r\n* // Feature Modules\r\n* import { SDK[Browser|Node|Native]Module } from './shared/sdk/sdk.module';\r\n* // Import Routing\r\n* import { routing }        from './app.routing';\r\n* @NgModule({\r\n*  imports: [\r\n*    BrowserModule,\r\n*    routing,\r\n*    SDK[Browser|Node|Native]Module.forRoot()\r\n*  ],\r\n*  declarations: [ AppComponent ],\r\n*  bootstrap:    [ AppComponent ]\r\n* })\r\n* export class AppModule { }\r\n*\r\n**/\r\nimport { ErrorHandler } from './services/core/error.service';\r\nimport { LoopBackAuth } from './services/core/auth.service';\r\nimport { LoggerService } from './services/custom/logger.service';\r\nimport { SDKModels } from './services/custom/SDKModels';\r\nimport { InternalStorage, SDKStorage } from './storage/storage.swaps';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CookieBrowser } from './storage/cookie.browser';\r\nimport { StorageBrowser } from './storage/storage.browser';\r\nimport { SocketBrowser } from './sockets/socket.browser';\r\nimport { SocketDriver } from './sockets/socket.driver';\r\nimport { SocketConnection } from './sockets/socket.connections';\r\nimport { RealTime } from './services/core/real.time';\r\nimport { UserApi } from './services/custom/User';\r\nimport { HotelApi } from './services/custom/Hotel';\r\nimport { RoomApi } from './services/custom/Room';\r\nimport { RentalServiceApi } from './services/custom/RentalService';\r\nimport { BranchApi } from './services/custom/Branch';\r\nimport { CarApi } from './services/custom/Car';\r\nimport { AirlineApi } from './services/custom/Airline';\r\nimport { FlightApi } from './services/custom/Flight';\r\nimport { RoomPriceApi } from './services/custom/RoomPrice';\r\nimport { HotelSpecialOfferApi } from './services/custom/HotelSpecialOffer';\r\nimport { HotelDiscountApi } from './services/custom/HotelDiscount';\r\nimport { CarPriceApi } from './services/custom/CarPrice';\r\nimport { EmailApi } from './services/custom/Email';\r\nimport { MyuserApi } from './services/custom/Myuser';\r\nimport { CarReservationApi } from './services/custom/CarReservation';\r\nimport { CaridApi } from './services/custom/Carid';\r\nimport { RoomidApi } from './services/custom/Roomid';\r\nimport { RoomReservationApi } from './services/custom/RoomReservation';\r\nimport { UserInfoApi } from './services/custom/UserInfo';\r\nimport { SeatApi } from './services/custom/Seat';\r\nimport { SeatIdApi } from './services/custom/SeatId';\r\nimport { SeatReservationApi } from './services/custom/SeatReservation';\r\nimport { CarSpecialOfferApi } from './services/custom/CarSpecialOffer';\r\nimport { QuickFlightReservationApi } from './services/custom/QuickFlightReservation';\r\nimport { FriendshipApi } from './services/custom/Friendship';\r\nimport { ReservationOfferApi } from './services/custom/ReservationOffer';\r\nimport { LocationApi } from './services/custom/Location';\r\n/**\r\n* @module SDKBrowserModule\r\n* @description\r\n* This module should be imported when building a Web Application in the following scenarios:\r\n*\r\n*  1.- Regular web application\r\n*  2.- Angular universal application (Browser Portion)\r\n*  3.- Progressive applications (Angular Mobile, Ionic, WebViews, etc)\r\n**/\r\n@NgModule({\r\n  imports:      [ CommonModule, HttpClientModule ],\r\n  declarations: [ ],\r\n  exports:      [ ],\r\n  providers:    [\r\n    ErrorHandler,\r\n    SocketConnection\r\n  ]\r\n})\r\nexport class SDKBrowserModule {\r\n  static forRoot(internalStorageProvider: any = {\r\n    provide: InternalStorage,\r\n    useClass: CookieBrowser\r\n  }): ModuleWithProviders {\r\n    return {\r\n      ngModule  : SDKBrowserModule,\r\n      providers : [\r\n        LoopBackAuth,\r\n        LoggerService,\r\n        SDKModels,\r\n        RealTime,\r\n        UserApi,\r\n        HotelApi,\r\n        RoomApi,\r\n        RentalServiceApi,\r\n        BranchApi,\r\n        CarApi,\r\n        AirlineApi,\r\n        FlightApi,\r\n        RoomPriceApi,\r\n        HotelSpecialOfferApi,\r\n        HotelDiscountApi,\r\n        CarPriceApi,\r\n        EmailApi,\r\n        MyuserApi,\r\n        CarReservationApi,\r\n        CaridApi,\r\n        RoomidApi,\r\n        RoomReservationApi,\r\n        UserInfoApi,\r\n        SeatApi,\r\n        SeatIdApi,\r\n        SeatReservationApi,\r\n        CarSpecialOfferApi,\r\n        QuickFlightReservationApi,\r\n        FriendshipApi,\r\n        ReservationOfferApi,\r\n        LocationApi,\r\n        internalStorageProvider,\r\n        { provide: SDKStorage, useClass: StorageBrowser },\r\n        { provide: SocketDriver, useClass: SocketBrowser }\r\n      ]\r\n    };\r\n  }\r\n}\r\n/**\r\n* Have Fun!!!\r\n* - Jon\r\n**/\r\nexport * from './models/index';\r\nexport * from './services/index';\r\nexport * from './lb.config';\r\nexport * from './storage/storage.swaps';\r\nexport { CookieBrowser } from './storage/cookie.browser';\r\nexport { StorageBrowser } from './storage/storage.browser';\r\n\r\n","/* tslint:disable */\n/**\n* @module LoopBackConfig\n* @description\n*\n* The LoopBackConfig module help developers to externally \n* configure the base url and api version for loopback.io\n*\n* Example\n*\n* import { LoopBackConfig } from './sdk';\n* \n* @Component() // No metadata needed for this module\n*\n* export class MyApp {\n*   constructor() {\n*     LoopBackConfig.setBaseURL('http://localhost:3000');\n*     LoopBackConfig.setApiVersion('api');\n*   }\n* }\n**/\nexport class LoopBackConfig {\n  private static path: string = '//0.0.0.0:3000';\n  private static version: string | number = 'api';\n  private static authPrefix: string = '';\n  private static debug: boolean = true;\n  private static filterOn: string = 'headers';\n  private static whereOn: string = 'headers';\n  private static secure: boolean = false;\n  private static withCredentials: boolean = false;\n\n  public static setApiVersion(version: string = 'api'): void {\n    LoopBackConfig.version = version;\n  }\n  \n  public static getApiVersion(): string | number {\n    return LoopBackConfig.version;\n  }\n\n  public static setBaseURL(url: string = '/'): void {\n    LoopBackConfig.path = url;\n  }\n  \n  public static getPath(): string {\n    return LoopBackConfig.path;\n  }\n\n  public static setAuthPrefix(authPrefix: string = ''): void {\n    LoopBackConfig.authPrefix = authPrefix;\n  }\n\n  public static getAuthPrefix(): string {\n    return LoopBackConfig.authPrefix;\n  }\n\n  public static setDebugMode(isEnabled: boolean): void {\n    LoopBackConfig.debug = isEnabled;\n  }\n\n  public static debuggable(): boolean {\n    return LoopBackConfig.debug;\n  }\n\n  public static filterOnUrl(): void {\n    LoopBackConfig.filterOn = 'url';\n  }\n\n  public static filterOnHeaders(): void {\n    LoopBackConfig.filterOn = 'headers';\n  }\n\n  public static whereOnUrl(): void {\n    LoopBackConfig.whereOn = 'url';\n  }\n\n  public static whereOnHeaders(): void {\n    LoopBackConfig.whereOn = 'headers';\n  }\n\n  public static isHeadersFilteringSet(): boolean {\n    return (LoopBackConfig.filterOn === 'headers');\n  }\n\n  public static isHeadersWhereSet(): boolean {\n    return (LoopBackConfig.whereOn === 'headers');\n  }\n\n  public static setSecureWebSockets(): void {\n    LoopBackConfig.secure = true;\n  }\n\n  public static unsetSecureWebSockets(): void {\n    LoopBackConfig.secure = false;\n  }\n\n  public static isSecureWebSocketsSet(): boolean {\n    return LoopBackConfig.secure;\n  }\n\n  public static setRequestOptionsCredentials(withCredentials: boolean = false): void {\n    LoopBackConfig.withCredentials = withCredentials;\n  }\n\n  public static getRequestOptionsCredentials(): boolean {\n    return LoopBackConfig.withCredentials;\n  }\n}\n","/* tslint:disable */\nimport {\n  Flight\n} from '../index';\n\ndeclare var Object: any;\nexport interface AirlineInterface {\n  \"name\": string;\n  \"address\"?: string;\n  \"description\"?: string;\n  \"destinations\"?: string;\n  \"id\"?: any;\n  \"myuserId\"?: any;\n  flights?: Flight[];\n}\n\nexport class Airline implements AirlineInterface {\n  \"name\": string;\n  \"address\": string;\n  \"description\": string;\n  \"destinations\": string;\n  \"id\": any;\n  \"myuserId\": any;\n  flights: Flight[];\n  constructor(data?: AirlineInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `Airline`.\n   */\n  public static getModelName() {\n    return \"Airline\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of Airline for dynamic purposes.\n  **/\n  public static factory(data: AirlineInterface): Airline{\n    return new Airline(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'Airline',\n      plural: 'Airlines',\n      path: 'Airlines',\n      idName: 'id',\n      properties: {\n        \"name\": {\n          name: 'name',\n          type: 'string'\n        },\n        \"address\": {\n          name: 'address',\n          type: 'string'\n        },\n        \"description\": {\n          name: 'description',\n          type: 'string'\n        },\n        \"destinations\": {\n          name: 'destinations',\n          type: 'string'\n        },\n        \"id\": {\n          name: 'id',\n          type: 'any'\n        },\n        \"myuserId\": {\n          name: 'myuserId',\n          type: 'any'\n        },\n      },\n      relations: {\n        flights: {\n          name: 'flights',\n          type: 'Flight[]',\n          model: 'Flight',\n          relationType: 'hasMany',\n                  keyFrom: 'id',\n          keyTo: 'airlineId'\n        },\n      }\n    }\n  }\n}\n","/* tslint:disable */\n\n\n\ndeclare var Object: any;\nexport interface LoopBackFilter {\n  fields?: any;\n  include?: any;\n  limit?: any;\n  order?: any;\n  skip?: any;\n  offset?: any;\n  where?: any;\n}\n\nexport interface AccessTokenInterface {\n  \"id\"?: string;\n  \"ttl\"?: number;\n  \"scopes\"?: [\"string\"];\n  \"created\"?: Date;\n  \"userId\"?: string;\n  \"user\"?: any;\n}\n\nexport class AccessToken implements AccessTokenInterface {\n  \"id\": string;\n  \"ttl\": number;\n  \"scopes\": [\"string\"];\n  \"created\": Date;\n  \"userId\": string;\n  \"user\": any;\n  constructor(data?: AccessTokenInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `AccessToken`.\n   */\n  public static getModelName() {\n    return \"AccessToken\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of AccessToken for dynamic purposes.\n  **/\n  public static factory(data: AccessTokenInterface): AccessToken{\n    return new AccessToken(data);\n  }  \n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'AccessToken',\n      plural: 'AccessTokens',\n      properties: {\n        \"id\": {\n          name: 'id',\n          type: 'string'\n        },\n        \"ttl\": {\n          name: 'ttl',\n          type: 'number',\n          default: 1209600\n        },\n        \"scopes\": {\n          name: 'scopes',\n          type: '[\"string\"]'\n        },\n        \"created\": {\n          name: 'created',\n          type: 'Date'\n        },\n        \"userId\": {\n          name: 'userId',\n          type: 'string'\n        },\n      },\n      relations: {\n        user: {\n          name: 'user',\n          type: 'User',\n          model: 'User'\n        },\n      }\n    }\n  }\n}\n\nexport class SDKToken implements AccessTokenInterface {\n  id: any = null;\n  ttl: number = null;\n  scopes: any = null;\n  created: any = null;\n  userId: any = null;\n  user: any = null;\n  rememberMe: boolean = null;\n  constructor(data?: AccessTokenInterface) {\n    Object.assign(this, data);\n  }\n}\n/**\n* This GeoPoint represents both, LoopBack and MongoDB GeoPoint\n**/\nexport interface GeoPoint  {\n    lat?: number;\n    lng?: number;\n    type?: string;\n    coordinates?: number[];\n}\n\nexport interface StatFilter {\n    range: string,\n    custom?: {\n      start: string,\n      end: string\n    },\n    where?: {},\n    groupBy?: string\n}\n","/* tslint:disable */\r\nimport {\r\n  RentalService\r\n} from '../index';\r\n\r\ndeclare var Object: any;\r\nexport interface BranchInterface {\r\n  \"name\": string;\r\n  \"address\": string;\r\n  \"latitude\"?: number;\r\n  \"longitude\"?: number;\r\n  \"id\"?: any;\r\n  \"rentalServiceId\"?: any;\r\n  rentalService?: RentalService;\r\n}\r\n\r\nexport class Branch implements BranchInterface {\r\n  \"name\": string;\r\n  \"address\": string;\r\n  \"latitude\": number;\r\n  \"longitude\": number;\r\n  \"id\": any;\r\n  \"rentalServiceId\": any;\r\n  rentalService: RentalService;\r\n  constructor(data?: BranchInterface) {\r\n    Object.assign(this, data);\r\n  }\r\n  /**\r\n   * The name of the model represented by this $resource,\r\n   * i.e. `Branch`.\r\n   */\r\n  public static getModelName() {\r\n    return \"Branch\";\r\n  }\r\n  /**\r\n  * @method factory\r\n  * @author Jonathan Casarrubias\r\n  * @license MIT\r\n  * This method creates an instance of Branch for dynamic purposes.\r\n  **/\r\n  public static factory(data: BranchInterface): Branch{\r\n    return new Branch(data);\r\n  }\r\n  /**\r\n  * @method getModelDefinition\r\n  * @author Julien Ledun\r\n  * @license MIT\r\n  * This method returns an object that represents some of the model\r\n  * definitions.\r\n  **/\r\n  public static getModelDefinition() {\r\n    return {\r\n      name: 'Branch',\r\n      plural: 'Branches',\r\n      path: 'Branches',\r\n      idName: 'id',\r\n      properties: {\r\n        \"name\": {\r\n          name: 'name',\r\n          type: 'string'\r\n        },\r\n        \"address\": {\r\n          name: 'address',\r\n          type: 'string'\r\n        },\r\n        \"latitude\": {\r\n          name: 'latitude',\r\n          type: 'number'\r\n        },\r\n        \"longitude\": {\r\n          name: 'longitude',\r\n          type: 'number'\r\n        },\r\n        \"id\": {\r\n          name: 'id',\r\n          type: 'any'\r\n        },\r\n        \"rentalServiceId\": {\r\n          name: 'rentalServiceId',\r\n          type: 'any'\r\n        },\r\n      },\r\n      relations: {\r\n        rentalService: {\r\n          name: 'rentalService',\r\n          type: 'RentalService',\r\n          model: 'RentalService',\r\n          relationType: 'belongsTo',\r\n                  keyFrom: 'rentalServiceId',\r\n          keyTo: 'id'\r\n        },\r\n      }\r\n    }\r\n  }\r\n}\r\n","/* tslint:disable */\nimport {\n  RentalService\n} from '../index';\n\ndeclare var Object: any;\nexport interface CarInterface {\n  \"make\": string;\n  \"registration\": string;\n  \"seats\": number;\n  \"category\": string;\n  \"rating\"?: number;\n  \"ratingCount\"?: number;\n  \"id\"?: any;\n  \"rentalServiceId\"?: any;\n  rentalService?: RentalService;\n}\n\nexport class Car implements CarInterface {\n  \"make\": string;\n  \"registration\": string;\n  \"seats\": number;\n  \"category\": string;\n  \"rating\": number;\n  \"ratingCount\": number;\n  \"id\": any;\n  \"rentalServiceId\": any;\n  rentalService: RentalService;\n  constructor(data?: CarInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `Car`.\n   */\n  public static getModelName() {\n    return \"Car\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of Car for dynamic purposes.\n  **/\n  public static factory(data: CarInterface): Car{\n    return new Car(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'Car',\n      plural: 'Cars',\n      path: 'Cars',\n      idName: 'id',\n      properties: {\n        \"make\": {\n          name: 'make',\n          type: 'string'\n        },\n        \"registration\": {\n          name: 'registration',\n          type: 'string'\n        },\n        \"seats\": {\n          name: 'seats',\n          type: 'number'\n        },\n        \"category\": {\n          name: 'category',\n          type: 'string'\n        },\n        \"rating\": {\n          name: 'rating',\n          type: 'number',\n          default: 0\n        },\n        \"ratingCount\": {\n          name: 'ratingCount',\n          type: 'number',\n          default: 0\n        },\n        \"id\": {\n          name: 'id',\n          type: 'any'\n        },\n        \"rentalServiceId\": {\n          name: 'rentalServiceId',\n          type: 'any'\n        },\n      },\n      relations: {\n        rentalService: {\n          name: 'rentalService',\n          type: 'RentalService',\n          model: 'RentalService',\n          relationType: 'belongsTo',\n                  keyFrom: 'rentalServiceId',\n          keyTo: 'id'\n        },\n      }\n    }\n  }\n}\n","/* tslint:disable */\nimport {\n  RentalService\n} from '../index';\n\ndeclare var Object: any;\nexport interface CarPriceInterface {\n  \"start\"?: Date;\n  \"catAPrice\": number;\n  \"catBPrice\": number;\n  \"catCPrice\": number;\n  \"id\"?: any;\n  \"rentalServiceId\"?: any;\n  rentalService?: RentalService;\n}\n\nexport class CarPrice implements CarPriceInterface {\n  \"start\": Date;\n  \"catAPrice\": number;\n  \"catBPrice\": number;\n  \"catCPrice\": number;\n  \"id\": any;\n  \"rentalServiceId\": any;\n  rentalService: RentalService;\n  constructor(data?: CarPriceInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `CarPrice`.\n   */\n  public static getModelName() {\n    return \"CarPrice\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of CarPrice for dynamic purposes.\n  **/\n  public static factory(data: CarPriceInterface): CarPrice{\n    return new CarPrice(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'CarPrice',\n      plural: 'CarPrices',\n      path: 'CarPrices',\n      idName: 'id',\n      properties: {\n        \"start\": {\n          name: 'start',\n          type: 'Date'\n        },\n        \"catAPrice\": {\n          name: 'catAPrice',\n          type: 'number'\n        },\n        \"catBPrice\": {\n          name: 'catBPrice',\n          type: 'number'\n        },\n        \"catCPrice\": {\n          name: 'catCPrice',\n          type: 'number'\n        },\n        \"id\": {\n          name: 'id',\n          type: 'any'\n        },\n        \"rentalServiceId\": {\n          name: 'rentalServiceId',\n          type: 'any'\n        },\n      },\n      relations: {\n        rentalService: {\n          name: 'rentalService',\n          type: 'RentalService',\n          model: 'RentalService',\n          relationType: 'belongsTo',\n                  keyFrom: 'rentalServiceId',\n          keyTo: 'id'\n        },\n      }\n    }\n  }\n}\n","/* tslint:disable */\n\ndeclare var Object: any;\nexport interface CarReservationInterface {\n  \"startDate\": Date;\n  \"endDate\": Date;\n  \"price\": number;\n  \"carsId\": string;\n  \"myuserId\"?: string;\n  \"isSpecialOffer\": boolean;\n  \"rentalServiceId\": string;\n  \"rated\"?: boolean;\n  \"id\"?: number;\n}\n\nexport class CarReservation implements CarReservationInterface {\n  \"startDate\": Date;\n  \"endDate\": Date;\n  \"price\": number;\n  \"carsId\": string;\n  \"myuserId\": string;\n  \"isSpecialOffer\": boolean;\n  \"rentalServiceId\": string;\n  \"rated\": boolean;\n  \"id\": number;\n  constructor(data?: CarReservationInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `CarReservation`.\n   */\n  public static getModelName() {\n    return \"CarReservation\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of CarReservation for dynamic purposes.\n  **/\n  public static factory(data: CarReservationInterface): CarReservation{\n    return new CarReservation(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'CarReservation',\n      plural: 'CarReservations',\n      path: 'CarReservations',\n      idName: 'id',\n      properties: {\n        \"startDate\": {\n          name: 'startDate',\n          type: 'Date'\n        },\n        \"endDate\": {\n          name: 'endDate',\n          type: 'Date'\n        },\n        \"price\": {\n          name: 'price',\n          type: 'number'\n        },\n        \"carsId\": {\n          name: 'carsId',\n          type: 'string'\n        },\n        \"myuserId\": {\n          name: 'myuserId',\n          type: 'string'\n        },\n        \"isSpecialOffer\": {\n          name: 'isSpecialOffer',\n          type: 'boolean'\n        },\n        \"rentalServiceId\": {\n          name: 'rentalServiceId',\n          type: 'string'\n        },\n        \"rated\": {\n          name: 'rated',\n          type: 'boolean',\n          default: false\n        },\n        \"id\": {\n          name: 'id',\n          type: 'number'\n        },\n      },\n      relations: {\n      }\n    }\n  }\n}\n","/* tslint:disable */\n\ndeclare var Object: any;\nexport interface CarSpecialOfferInterface {\n  \"startDate\": Date;\n  \"endDate\": Date;\n  \"basePrice\": number;\n  \"discount\": number;\n  \"registration\": string;\n  \"carsId\": string;\n  \"myuserId\"?: string;\n  \"rentalServiceId\": string;\n  \"carReservationsId\": string;\n  \"id\"?: number;\n}\n\nexport class CarSpecialOffer implements CarSpecialOfferInterface {\n  \"startDate\": Date;\n  \"endDate\": Date;\n  \"basePrice\": number;\n  \"discount\": number;\n  \"registration\": string;\n  \"carsId\": string;\n  \"myuserId\": string;\n  \"rentalServiceId\": string;\n  \"carReservationsId\": string;\n  \"id\": number;\n  constructor(data?: CarSpecialOfferInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `CarSpecialOffer`.\n   */\n  public static getModelName() {\n    return \"CarSpecialOffer\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of CarSpecialOffer for dynamic purposes.\n  **/\n  public static factory(data: CarSpecialOfferInterface): CarSpecialOffer{\n    return new CarSpecialOffer(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'CarSpecialOffer',\n      plural: 'CarSpecialOffers',\n      path: 'CarSpecialOffers',\n      idName: 'id',\n      properties: {\n        \"startDate\": {\n          name: 'startDate',\n          type: 'Date'\n        },\n        \"endDate\": {\n          name: 'endDate',\n          type: 'Date'\n        },\n        \"basePrice\": {\n          name: 'basePrice',\n          type: 'number'\n        },\n        \"discount\": {\n          name: 'discount',\n          type: 'number'\n        },\n        \"registration\": {\n          name: 'registration',\n          type: 'string'\n        },\n        \"carsId\": {\n          name: 'carsId',\n          type: 'string'\n        },\n        \"myuserId\": {\n          name: 'myuserId',\n          type: 'string'\n        },\n        \"rentalServiceId\": {\n          name: 'rentalServiceId',\n          type: 'string'\n        },\n        \"carReservationsId\": {\n          name: 'carReservationsId',\n          type: 'string'\n        },\n        \"id\": {\n          name: 'id',\n          type: 'number'\n        },\n      },\n      relations: {\n      }\n    }\n  }\n}\n","/* tslint:disable */\nimport {\n  Car\n} from '../index';\n\ndeclare var Object: any;\nexport interface CaridInterface {\n  \"id\"?: number;\n  \"carId\"?: any;\n  car?: Car;\n}\n\nexport class Carid implements CaridInterface {\n  \"id\": number;\n  \"carId\": any;\n  car: Car;\n  constructor(data?: CaridInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `Carid`.\n   */\n  public static getModelName() {\n    return \"Carid\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of Carid for dynamic purposes.\n  **/\n  public static factory(data: CaridInterface): Carid{\n    return new Carid(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'Carid',\n      plural: 'Carids',\n      path: 'Carids',\n      idName: 'id',\n      properties: {\n        \"id\": {\n          name: 'id',\n          type: 'number'\n        },\n        \"carId\": {\n          name: 'carId',\n          type: 'any'\n        },\n      },\n      relations: {\n        car: {\n          name: 'car',\n          type: 'Car',\n          model: 'Car',\n          relationType: 'belongsTo',\n                  keyFrom: 'carId',\n          keyTo: 'id'\n        },\n      }\n    }\n  }\n}\n","/* tslint:disable */\n\ndeclare var Object: any;\nexport interface EmailInterface {\n  \"to\": string;\n  \"from\": string;\n  \"subject\": string;\n  \"text\"?: string;\n  \"html\"?: string;\n  \"id\"?: number;\n}\n\nexport class Email implements EmailInterface {\n  \"to\": string;\n  \"from\": string;\n  \"subject\": string;\n  \"text\": string;\n  \"html\": string;\n  \"id\": number;\n  constructor(data?: EmailInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `Email`.\n   */\n  public static getModelName() {\n    return \"Email\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of Email for dynamic purposes.\n  **/\n  public static factory(data: EmailInterface): Email{\n    return new Email(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'Email',\n      plural: 'Emails',\n      path: 'Emails',\n      idName: 'id',\n      properties: {\n        \"to\": {\n          name: 'to',\n          type: 'string'\n        },\n        \"from\": {\n          name: 'from',\n          type: 'string'\n        },\n        \"subject\": {\n          name: 'subject',\n          type: 'string'\n        },\n        \"text\": {\n          name: 'text',\n          type: 'string'\n        },\n        \"html\": {\n          name: 'html',\n          type: 'string'\n        },\n        \"id\": {\n          name: 'id',\n          type: 'number'\n        },\n      },\n      relations: {\n      }\n    }\n  }\n}\n","/* tslint:disable */\nimport { FireLoopRef } from './index';\n\nexport class FireLoop {\n\n  private references: any = {};\n\n  constructor(private socket: any, private models: { get: Function }) {}\n\n  public ref<T>(model: any): FireLoopRef<T> {\n    let name: string = model.getModelName();\n    model.models = this.models;\n    this.references[name] = new FireLoopRef<T>(model, this.socket);\n    return this.references[name];\n  }\n}\n","/* tslint:disable */\nimport { merge, Observable, Subject } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { LoopBackFilter, StatFilter } from './index';\nimport { SocketConnection } from '../sockets/socket.connections';\n/**\n * @class FireLoopRef<T>\n * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n * @license MIT\n * @description\n * This class allows to create FireLoop References which will be in sync with\n * Server. It also allows to create FireLoop Reference Childs, that allows to\n * persist data according the generic model relationships.\n **/\nexport class FireLoopRef<T> {\n  // Reference ID\n  private id: number = this.buildId();\n  // Model Instance (For child references, empty on root references)\n  private instance: any;\n  // Model Childs\n  private childs: any = {};\n  // Disposable Events\n  private disposable: { [key: string]: any } = {};\n  /**\n  * @method constructor\n  * @param {any} model The model we want to create a reference\n  * @param {SocketConnection} socket Socket connection to handle events\n  * @param {FireLoopRef<any>} parent Parent FireLoop model reference\n  * @param {string} relationship The defined model relationship\n  * @description\n  * The constructor will receive the required parameters and then will register this reference\n  * into the server, needed to allow multiple references for the same model.\n  * This ids are referenced into this specific client connection and won't have issues\n  * with other client ids.\n  **/\n  constructor(\n    private model: any,\n    private socket: SocketConnection,\n    private parent: FireLoopRef<any> = null,\n    private relationship: string = null\n  ) {\n    this.socket.emit(\n      `Subscribe.${!parent ? model.getModelName() : parent.model.getModelName()}`,\n      { id: this.id, scope: model.getModelName(), relationship: relationship }\n    );\n    return this;\n  }\n  /**\n  * @method dispose\n  * @return {void}\n  * @description\n  * This method is super important to avoid memory leaks in the server.\n  * This method requires to be called on components destroy\n  *\n  * ngOnDestroy() {\n  *  this.someRef.dispose() \n  * }\n  **/\n  public dispose(): void {\n    const subscription = this.operation('dispose', {}).subscribe(() => {\n      Object.keys(this.disposable).forEach((channel: string) => {\n        this.socket.removeListener(channel, this.disposable[channel]);\n        this.socket.removeAllListeners(channel);\n      });\n      subscription.unsubscribe();\n    });\n  }\n  /**\n  * @method upsert\n  * @param {T} data Persisted model instance\n  * @return {Observable<T>}\n  * @description\n  * Operation wrapper for upsert function.\n  **/\n  public upsert(data: T): Observable<T> {\n    return this.operation('upsert', data);\n  }\n  /**\n  * @method create\n  * @param {T} data Persisted model instance\n  * @return {Observable<T>}\n  * @description\n  * Operation wrapper for create function.\n  **/\n  public create(data: T): Observable<T> {\n    return this.operation('create', data);\n  }\n  /**\n  * @method remove\n  * @param {T} data Persisted model instance\n  * @return {Observable<T>}\n  * @description\n  * Operation wrapper for remove function.\n  **/\n  public remove(data: T): Observable<T> {\n    return this.operation('remove', data);\n  }\n  /**\n  * @method remote\n  * @param {string} method Remote method name\n  * @param {any[]=} params Parameters to be applied into the remote method\n  * @param {boolean} broadcast Flag to define if the method results should be broadcasted\n  * @return {Observable<any>}\n  * @description\n  * This method calls for any remote method. It is flexible enough to\n  * allow you call either built-in or custom remote methods.\n  *\n  * FireLoop provides this interface to enable calling remote methods\n  * but also to optionally send any defined accept params that will be\n  * applied within the server.\n  **/\n  public remote(method: string, params?: any[], broadcast: boolean = false): Observable<any> {\n    return this.operation('remote', { method, params, broadcast });\n  }\n  /**\n  * @method onRemote\n  * @param {string} method Remote method name\n  * @return {Observable<any>}\n  * @description\n  * This method listen for public broadcasted remote method results. If the remote method\n  * execution is not public only the owner will receive the result data.\n  **/\n  public onRemote(method: string): Observable<any> {\n    let event: string = 'remote';\n    if (!this.relationship) {\n      event = `${this.model.getModelName()}.${event}`;\n    } else {\n      event = `${this.parent.model.getModelName()}.${this.relationship}.${event}`;\n    }\n    return this.broadcasts(event, {});\n  }\n  /**\n  * @method on\n  * @param {string} event Event name\n  * @param {LoopBackFilter} filter LoopBack query filter\n  * @return {Observable<T>}\n  * @description\n  * Listener for different type of events. Valid events are:\n  *   - change (Triggers on any model change -create, update, remove-)\n  *   - value (Triggers on new entries)\n  *   - child_added (Triggers when a child is added)\n  *   - child_updated (Triggers when a child is updated)\n  *   - child_removed (Triggers when a child is removed)\n  **/\n  public on(event: string, filter: LoopBackFilter = { limit: 100, order: 'id DESC' }): Observable<T | T[]> {\n    if (event === 'remote') {\n      throw new Error('The \"remote\" event is not allowed using \"on()\" method, use \"onRemote()\" instead');\n    }\n    let request: any;\n    if (!this.relationship) {\n      event = `${this.model.getModelName()}.${event}`;\n      request = { filter };\n    } else {\n      event = `${this.parent.model.getModelName()}.${this.relationship}.${event}`;\n      request = { filter, parent: this.parent.instance };\n    }\n    if (event.match(/(value|change|stats)/)) {\n      return merge(\n        this.pull(event, request),\n        this.broadcasts(event, request)\n      );\n    } else {\n      return this.broadcasts(event, request);\n    }\n  }\n  /**\n  * @method stats\n  * @param {LoopBackFilter=} filter LoopBack query filter\n  * @return {Observable<T>}\n  * @description\n  * Listener for real-time statistics, will trigger on every\n  * statistic modification.\n  * TIP: You can improve performance by adding memcached to LoopBack models.\n  **/\n  public stats(filter?: StatFilter): Observable<T | T[]> {\n    return this.on('stats', filter);\n  }\n  /**\n  * @method make\n  * @param {any} instance Persisted model instance reference\n  * @return {Observable<T>}\n  * @description\n  * This method will set a model instance into this a new FireLoop Reference.\n  * This allows to persiste parentship when creating related instances.\n  *\n  * It also allows to have multiple different persisted instance references to same model.\n  * otherwise if using singleton will replace a previous instance for a new instance, when\n  * we actually want to have more than 1 instance of same model.\n  **/\n  public make(instance: any): FireLoopRef<T> {\n    let reference: FireLoopRef<T> = new FireLoopRef<T>(this.model, this.socket);\n    reference.instance = instance;\n    return reference;\n  }\n  /**\n  * @method child\n  * @param {string} relationship A defined model relationship\n  * @return {FireLoopRef<T>}\n  * @description\n  * This method creates child references, which will persist related model\n  * instances. e.g. Room.messages, where messages belongs to a specific Room.\n  **/\n  public child<T>(relationship: string): FireLoopRef<T> {\n    // Return singleton instance\n    if (this.childs[relationship]) { return this.childs[relationship]; }\n    // Try to get relation settings from current model\n    let settings: any = this.model.getModelDefinition().relations[relationship];\n    // Verify the relationship actually exists\n    if (!settings) {\n      throw new Error(`Invalid model relationship ${this.model.getModelName()} <-> ${relationship}, verify your model settings.`);\n    }\n    // Verify if the relationship model is public\n    if (settings.model === '') {\n      throw new Error(`Relationship model is private, cam't use ${relationship} unless you set your model as public.`);\n    }\n    // Lets get a model reference and add a reference for all of the models\n    let model: any = this.model.models.get(settings.model);\n    model.models = this.model.models;\n    // If everything goes well, we will store a child reference and return it.\n    this.childs[relationship] = new FireLoopRef<T>(model, this.socket, this, relationship);\n    return this.childs[relationship];\n  }\n  /**\n  * @method pull\n  * @param {string} event Event name\n  * @param {any} request Type of request, can be LB-only filter or FL+LB filter\n  * @return {Observable<T>}\n  * @description\n  * This method will pull initial data from server\n  **/\n  private pull(event: string, request: any): Observable<T> {\n    let sbj: Subject<T> = new Subject<T>();\n    let that: FireLoopRef<T> = this;\n    let nowEvent: any = `${event}.pull.requested.${this.id}`;\n    this.socket.emit(`${event}.pull.request.${this.id}`, request);\n    function pullNow(data: any) {\n      if (that.socket.removeListener) {\n        that.socket.removeListener(nowEvent, pullNow);\n      }\n      sbj.next(data);\n    };\n    this.socket.on(nowEvent, pullNow);\n    return sbj.asObservable();\n  }\n  /**\n  * @method broadcasts\n  * @param {string} event Event name\n  * @param {any} request Type of request, can be LB-only filter or FL+LB filter\n  * @return {Observable<T>}\n  * @description\n  * This will listen for public broadcasts announces and then request\n  * for data according a specific client request, not shared with other clients.\n  **/\n  private broadcasts(event: string, request: any): Observable<T> {\n    let sbj: Subject<T> = new Subject<T>();\n    let channels: { announce: string, broadcast: string } = {\n      announce: `${event}.broadcast.announce.${this.id}`,\n      broadcast: `${event}.broadcast.${this.id}`\n    };\n    let that = this;\n    // Announces Handler\n    this.disposable[channels.announce] = function (res: T) {\n      that.socket.emit(`${event}.broadcast.request.${that.id}`, request)\n    };\n    // Broadcasts Handler\n    this.disposable[channels.broadcast] = function (data: any) {\n      sbj.next(data);\n    };\n    this.socket.on(channels.announce, this.disposable[channels.announce]);\n    this.socket.on(channels.broadcast, this.disposable[channels.broadcast]);\n    return sbj.asObservable();\n  }\n  /**\n  * @method operation\n  * @param {string} event Event name\n  * @param {any} data Any type of data sent to the server\n  * @return {Observable<T>}\n  * @description\n  * This internal method will run operations depending on current context \n  **/\n  private operation(event: string, data: any): Observable<T> {\n    if (!this.relationship) {\n      event = `${this.model.getModelName()}.${event}.${this.id}`;\n    } else {\n      event = `${this.parent.model.getModelName()}.${this.relationship}.${event}.${this.id}`;\n    }\n    let subject: Subject<T> = new Subject<T>();\n    let config: { data: any, parent: any } = {\n      data,\n      parent: this.parent && this.parent.instance ? this.parent.instance : null\n    };\n    this.socket.emit(event, config);\n    let resultEvent: string = '';\n    if (!this.relationship) {\n      resultEvent = `${this.model.getModelName()}.value.result.${this.id}`;\n    } else {\n      resultEvent = `${this.parent.model.getModelName()}.${this.relationship}.value.result.${this.id}`;\n    }\n    this.socket.on(resultEvent, (res: any) => {\n      if (res.error) {\n        subject.error(res);\n      } else {\n        subject.next(res);\n      }\n    });\n    if (event.match('dispose')) {\n      setTimeout(() => subject.next());\n    }\n    // This event listener will be wiped within socket.connections\n    this.socket.sharedObservables.sharedOnDisconnect.subscribe(() => subject.complete());\n    return subject.asObservable().pipe(catchError((error: any) => Observable.throw(error)));\n  }\n  /**\n  * @method buildId\n  * @return {number}\n  * @description\n  * This internal method build an ID for this reference, this allows to have\n  * multiple references for the same model or relationships.\n  **/\n  private buildId(): number {\n    return Date.now() + Math.floor(Math.random() * 100800) *\n      Math.floor(Math.random() * 100700) *\n      Math.floor(Math.random() * 198500);\n  }\n}\n","/* tslint:disable */\nimport {\n  Airline,\n  Seat\n} from '../index';\n\ndeclare var Object: any;\nexport interface FlightInterface {\n  \"origin\": string;\n  \"destination\": string;\n  \"takeoffDate\": Date;\n  \"landingDate\": Date;\n  \"duration\"?: number;\n  \"length\"?: number;\n  \"layover\"?: string;\n  \"price\": number;\n  \"id\"?: any;\n  \"airlineId\"?: any;\n  airline?: Airline;\n  seats?: Seat[];\n}\n\nexport class Flight implements FlightInterface {\n  \"origin\": string;\n  \"destination\": string;\n  \"takeoffDate\": Date;\n  \"landingDate\": Date;\n  \"duration\": number;\n  \"length\": number;\n  \"layover\": string;\n  \"price\": number;\n  \"id\": any;\n  \"airlineId\": any;\n  airline: Airline;\n  seats: Seat[];\n  constructor(data?: FlightInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `Flight`.\n   */\n  public static getModelName() {\n    return \"Flight\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of Flight for dynamic purposes.\n  **/\n  public static factory(data: FlightInterface): Flight{\n    return new Flight(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'Flight',\n      plural: 'Flights',\n      path: 'Flights',\n      idName: 'id',\n      properties: {\n        \"origin\": {\n          name: 'origin',\n          type: 'string'\n        },\n        \"destination\": {\n          name: 'destination',\n          type: 'string'\n        },\n        \"takeoffDate\": {\n          name: 'takeoffDate',\n          type: 'Date'\n        },\n        \"landingDate\": {\n          name: 'landingDate',\n          type: 'Date'\n        },\n        \"duration\": {\n          name: 'duration',\n          type: 'number'\n        },\n        \"length\": {\n          name: 'length',\n          type: 'number'\n        },\n        \"layover\": {\n          name: 'layover',\n          type: 'string'\n        },\n        \"price\": {\n          name: 'price',\n          type: 'number'\n        },\n        \"id\": {\n          name: 'id',\n          type: 'any'\n        },\n        \"airlineId\": {\n          name: 'airlineId',\n          type: 'any'\n        },\n      },\n      relations: {\n        airline: {\n          name: 'airline',\n          type: 'Airline',\n          model: 'Airline',\n          relationType: 'belongsTo',\n                  keyFrom: 'airlineId',\n          keyTo: 'id'\n        },\n        seats: {\n          name: 'seats',\n          type: 'Seat[]',\n          model: 'Seat',\n          relationType: 'hasMany',\n                  keyFrom: 'id',\n          keyTo: 'flightId'\n        },\n      }\n    }\n  }\n}\n","/* tslint:disable */\n\ndeclare var Object: any;\nexport interface FriendshipInterface {\n  \"firstUserId\": string;\n  \"secondUserId\": string;\n  \"accepted\": boolean;\n  \"id\"?: any;\n}\n\nexport class Friendship implements FriendshipInterface {\n  \"firstUserId\": string;\n  \"secondUserId\": string;\n  \"accepted\": boolean;\n  \"id\": any;\n  constructor(data?: FriendshipInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `Friendship`.\n   */\n  public static getModelName() {\n    return \"Friendship\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of Friendship for dynamic purposes.\n  **/\n  public static factory(data: FriendshipInterface): Friendship{\n    return new Friendship(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'Friendship',\n      plural: 'Friendships',\n      path: 'Friendships',\n      idName: 'id',\n      properties: {\n        \"firstUserId\": {\n          name: 'firstUserId',\n          type: 'string'\n        },\n        \"secondUserId\": {\n          name: 'secondUserId',\n          type: 'string'\n        },\n        \"accepted\": {\n          name: 'accepted',\n          type: 'boolean',\n          default: false\n        },\n        \"id\": {\n          name: 'id',\n          type: 'any'\n        },\n      },\n      relations: {\n      }\n    }\n  }\n}\n","/* tslint:disable */\r\nimport {\r\n  Room,\r\n  RoomPrice,\r\n  HotelSpecialOffer,\r\n  HotelDiscount,\r\n  Location\r\n} from '../index';\r\n\r\ndeclare var Object: any;\r\nexport interface HotelInterface {\r\n  \"name\": string;\r\n  \"address\": string;\r\n  \"latitude\"?: number;\r\n  \"longitude\"?: number;\r\n  \"description\"?: string;\r\n  \"ratingCount\"?: number;\r\n  \"rating\"?: number;\r\n  \"id\"?: any;\r\n  \"myuserId\"?: any;\r\n  \"locationId\"?: any;\r\n  rooms?: Room[];\r\n  roomPrices?: RoomPrice[];\r\n  hotelSpecialOffers?: HotelSpecialOffer[];\r\n  hotelDiscounts?: HotelDiscount[];\r\n  location?: Location;\r\n}\r\n\r\nexport class Hotel implements HotelInterface {\r\n  \"name\": string;\r\n  \"address\": string;\r\n  \"latitude\": number;\r\n  \"longitude\": number;\r\n  \"description\": string;\r\n  \"ratingCount\": number;\r\n  \"rating\": number;\r\n  \"id\": any;\r\n  \"myuserId\": any;\r\n  \"locationId\": any;\r\n  rooms: Room[];\r\n  roomPrices: RoomPrice[];\r\n  hotelSpecialOffers: HotelSpecialOffer[];\r\n  hotelDiscounts: HotelDiscount[];\r\n  location: Location;\r\n  constructor(data?: HotelInterface) {\r\n    Object.assign(this, data);\r\n  }\r\n  /**\r\n   * The name of the model represented by this $resource,\r\n   * i.e. `Hotel`.\r\n   */\r\n  public static getModelName() {\r\n    return \"Hotel\";\r\n  }\r\n  /**\r\n  * @method factory\r\n  * @author Jonathan Casarrubias\r\n  * @license MIT\r\n  * This method creates an instance of Hotel for dynamic purposes.\r\n  **/\r\n  public static factory(data: HotelInterface): Hotel{\r\n    return new Hotel(data);\r\n  }\r\n  /**\r\n  * @method getModelDefinition\r\n  * @author Julien Ledun\r\n  * @license MIT\r\n  * This method returns an object that represents some of the model\r\n  * definitions.\r\n  **/\r\n  public static getModelDefinition() {\r\n    return {\r\n      name: 'Hotel',\r\n      plural: 'Hotels',\r\n      path: 'Hotels',\r\n      idName: 'id',\r\n      properties: {\r\n        \"name\": {\r\n          name: 'name',\r\n          type: 'string'\r\n        },\r\n        \"address\": {\r\n          name: 'address',\r\n          type: 'string'\r\n        },\r\n        \"latitude\": {\r\n          name: 'latitude',\r\n          type: 'number'\r\n        },\r\n        \"longitude\": {\r\n          name: 'longitude',\r\n          type: 'number'\r\n        },\r\n        \"description\": {\r\n          name: 'description',\r\n          type: 'string'\r\n        },\r\n        \"ratingCount\": {\r\n          name: 'ratingCount',\r\n          type: 'number',\r\n          default: 0\r\n        },\r\n        \"rating\": {\r\n          name: 'rating',\r\n          type: 'number',\r\n          default: 0\r\n        },\r\n        \"id\": {\r\n          name: 'id',\r\n          type: 'any'\r\n        },\r\n        \"myuserId\": {\r\n          name: 'myuserId',\r\n          type: 'any'\r\n        },\r\n        \"locationId\": {\r\n          name: 'locationId',\r\n          type: 'any'\r\n        },\r\n      },\r\n      relations: {\r\n        rooms: {\r\n          name: 'rooms',\r\n          type: 'Room[]',\r\n          model: 'Room',\r\n          relationType: 'hasMany',\r\n                  keyFrom: 'id',\r\n          keyTo: 'hotelId'\r\n        },\r\n        roomPrices: {\r\n          name: 'roomPrices',\r\n          type: 'RoomPrice[]',\r\n          model: 'RoomPrice',\r\n          relationType: 'hasMany',\r\n                  keyFrom: 'id',\r\n          keyTo: 'hotelId'\r\n        },\r\n        hotelSpecialOffers: {\r\n          name: 'hotelSpecialOffers',\r\n          type: 'HotelSpecialOffer[]',\r\n          model: 'HotelSpecialOffer',\r\n          relationType: 'hasMany',\r\n                  keyFrom: 'id',\r\n          keyTo: 'hotelId'\r\n        },\r\n        hotelDiscounts: {\r\n          name: 'hotelDiscounts',\r\n          type: 'HotelDiscount[]',\r\n          model: 'HotelDiscount',\r\n          relationType: 'hasMany',\r\n                  keyFrom: 'id',\r\n          keyTo: 'hotelId'\r\n        },\r\n        location: {\r\n          name: 'location',\r\n          type: 'Location',\r\n          model: 'Location',\r\n          relationType: 'belongsTo',\r\n                  keyFrom: 'locationId',\r\n          keyTo: 'id'\r\n        },\r\n      }\r\n    }\r\n  }\r\n}\r\n","/* tslint:disable */\nimport {\n  Hotel,\n  Room\n} from '../index';\n\ndeclare var Object: any;\nexport interface HotelDiscountInterface {\n  \"discount\": number;\n  \"startDate\": Date;\n  \"endDate\": Date;\n  \"reservationId\"?: number;\n  \"id\"?: any;\n  \"hotelId\"?: any;\n  \"roomId\"?: any;\n  hotel?: Hotel;\n  room?: Room;\n}\n\nexport class HotelDiscount implements HotelDiscountInterface {\n  \"discount\": number;\n  \"startDate\": Date;\n  \"endDate\": Date;\n  \"reservationId\": number;\n  \"id\": any;\n  \"hotelId\": any;\n  \"roomId\": any;\n  hotel: Hotel;\n  room: Room;\n  constructor(data?: HotelDiscountInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `HotelDiscount`.\n   */\n  public static getModelName() {\n    return \"HotelDiscount\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of HotelDiscount for dynamic purposes.\n  **/\n  public static factory(data: HotelDiscountInterface): HotelDiscount{\n    return new HotelDiscount(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'HotelDiscount',\n      plural: 'HotelDiscounts',\n      path: 'HotelDiscounts',\n      idName: 'id',\n      properties: {\n        \"discount\": {\n          name: 'discount',\n          type: 'number'\n        },\n        \"startDate\": {\n          name: 'startDate',\n          type: 'Date'\n        },\n        \"endDate\": {\n          name: 'endDate',\n          type: 'Date'\n        },\n        \"reservationId\": {\n          name: 'reservationId',\n          type: 'number'\n        },\n        \"id\": {\n          name: 'id',\n          type: 'any'\n        },\n        \"hotelId\": {\n          name: 'hotelId',\n          type: 'any'\n        },\n        \"roomId\": {\n          name: 'roomId',\n          type: 'any'\n        },\n      },\n      relations: {\n        hotel: {\n          name: 'hotel',\n          type: 'Hotel',\n          model: 'Hotel',\n          relationType: 'belongsTo',\n                  keyFrom: 'hotelId',\n          keyTo: 'id'\n        },\n        room: {\n          name: 'room',\n          type: 'Room',\n          model: 'Room',\n          relationType: 'belongsTo',\n                  keyFrom: 'roomId',\n          keyTo: 'id'\n        },\n      }\n    }\n  }\n}\n","/* tslint:disable */\nimport {\n  Hotel\n} from '../index';\n\ndeclare var Object: any;\nexport interface HotelSpecialOfferInterface {\n  \"name\": string;\n  \"price\": number;\n  \"id\"?: any;\n  \"hotelId\"?: any;\n  hotel?: Hotel;\n}\n\nexport class HotelSpecialOffer implements HotelSpecialOfferInterface {\n  \"name\": string;\n  \"price\": number;\n  \"id\": any;\n  \"hotelId\": any;\n  hotel: Hotel;\n  constructor(data?: HotelSpecialOfferInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `HotelSpecialOffer`.\n   */\n  public static getModelName() {\n    return \"HotelSpecialOffer\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of HotelSpecialOffer for dynamic purposes.\n  **/\n  public static factory(data: HotelSpecialOfferInterface): HotelSpecialOffer{\n    return new HotelSpecialOffer(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'HotelSpecialOffer',\n      plural: 'HotelSpecialOffers',\n      path: 'HotelSpecialOffers',\n      idName: 'id',\n      properties: {\n        \"name\": {\n          name: 'name',\n          type: 'string'\n        },\n        \"price\": {\n          name: 'price',\n          type: 'number',\n          default: 0\n        },\n        \"id\": {\n          name: 'id',\n          type: 'any'\n        },\n        \"hotelId\": {\n          name: 'hotelId',\n          type: 'any'\n        },\n      },\n      relations: {\n        hotel: {\n          name: 'hotel',\n          type: 'Hotel',\n          model: 'Hotel',\n          relationType: 'belongsTo',\n                  keyFrom: 'hotelId',\n          keyTo: 'id'\n        },\n      }\n    }\n  }\n}\n","/* tslint:disable */\r\n\r\ndeclare var Object: any;\r\nexport interface LocationInterface {\r\n  \"country\": string;\r\n  \"city\": string;\r\n  \"id\"?: any;\r\n}\r\n\r\nexport class Location implements LocationInterface {\r\n  \"country\": string;\r\n  \"city\": string;\r\n  \"id\": any;\r\n  constructor(data?: LocationInterface) {\r\n    Object.assign(this, data);\r\n  }\r\n  /**\r\n   * The name of the model represented by this $resource,\r\n   * i.e. `Location`.\r\n   */\r\n  public static getModelName() {\r\n    return \"Location\";\r\n  }\r\n  /**\r\n  * @method factory\r\n  * @author Jonathan Casarrubias\r\n  * @license MIT\r\n  * This method creates an instance of Location for dynamic purposes.\r\n  **/\r\n  public static factory(data: LocationInterface): Location{\r\n    return new Location(data);\r\n  }\r\n  /**\r\n  * @method getModelDefinition\r\n  * @author Julien Ledun\r\n  * @license MIT\r\n  * This method returns an object that represents some of the model\r\n  * definitions.\r\n  **/\r\n  public static getModelDefinition() {\r\n    return {\r\n      name: 'Location',\r\n      plural: 'Locations',\r\n      path: 'Locations',\r\n      idName: 'id',\r\n      properties: {\r\n        \"country\": {\r\n          name: 'country',\r\n          type: 'string'\r\n        },\r\n        \"city\": {\r\n          name: 'city',\r\n          type: 'string'\r\n        },\r\n        \"id\": {\r\n          name: 'id',\r\n          type: 'any'\r\n        },\r\n      },\r\n      relations: {\r\n      }\r\n    }\r\n  }\r\n}\r\n","/* tslint:disable */\r\nimport {\r\n  Hotel,\r\n  Airline,\r\n  RentalService\r\n} from '../index';\r\n\r\ndeclare var Object: any;\r\nexport interface MyuserInterface {\r\n  \"type\": string;\r\n  \"bonusPoints\"?: number;\r\n  \"realm\"?: string;\r\n  \"username\"?: string;\r\n  \"email\": string;\r\n  \"emailVerified\"?: boolean;\r\n  \"id\"?: any;\r\n  \"password\"?: string;\r\n  accessTokens?: any[];\r\n  hotel?: Hotel;\r\n  airline?: Airline;\r\n  rentalService?: RentalService;\r\n}\r\n\r\nexport class Myuser implements MyuserInterface {\r\n  \"type\": string;\r\n  \"bonusPoints\": number;\r\n  \"realm\": string;\r\n  \"username\": string;\r\n  \"email\": string;\r\n  \"emailVerified\": boolean;\r\n  \"id\": any;\r\n  \"password\": string;\r\n  accessTokens: any[];\r\n  hotel: Hotel;\r\n  airline: Airline;\r\n  rentalService: RentalService;\r\n  constructor(data?: MyuserInterface) {\r\n    Object.assign(this, data);\r\n  }\r\n  /**\r\n   * The name of the model represented by this $resource,\r\n   * i.e. `Myuser`.\r\n   */\r\n  public static getModelName() {\r\n    return \"Myuser\";\r\n  }\r\n  /**\r\n  * @method factory\r\n  * @author Jonathan Casarrubias\r\n  * @license MIT\r\n  * This method creates an instance of Myuser for dynamic purposes.\r\n  **/\r\n  public static factory(data: MyuserInterface): Myuser{\r\n    return new Myuser(data);\r\n  }\r\n  /**\r\n  * @method getModelDefinition\r\n  * @author Julien Ledun\r\n  * @license MIT\r\n  * This method returns an object that represents some of the model\r\n  * definitions.\r\n  **/\r\n  public static getModelDefinition() {\r\n    return {\r\n      name: 'Myuser',\r\n      plural: 'Myusers',\r\n      path: 'Myusers',\r\n      idName: 'id',\r\n      properties: {\r\n        \"type\": {\r\n          name: 'type',\r\n          type: 'string',\r\n          default: 'registeredUser'\r\n        },\r\n        \"bonusPoints\": {\r\n          name: 'bonusPoints',\r\n          type: 'number',\r\n          default: 0\r\n        },\r\n        \"realm\": {\r\n          name: 'realm',\r\n          type: 'string'\r\n        },\r\n        \"username\": {\r\n          name: 'username',\r\n          type: 'string'\r\n        },\r\n        \"email\": {\r\n          name: 'email',\r\n          type: 'string'\r\n        },\r\n        \"emailVerified\": {\r\n          name: 'emailVerified',\r\n          type: 'boolean'\r\n        },\r\n        \"id\": {\r\n          name: 'id',\r\n          type: 'any'\r\n        },\r\n        \"password\": {\r\n          name: 'password',\r\n          type: 'string'\r\n        },\r\n      },\r\n      relations: {\r\n        accessTokens: {\r\n          name: 'accessTokens',\r\n          type: 'any[]',\r\n          model: '',\r\n          relationType: 'hasMany',\r\n                  keyFrom: 'id',\r\n          keyTo: 'userId'\r\n        },\r\n        hotel: {\r\n          name: 'hotel',\r\n          type: 'Hotel',\r\n          model: 'Hotel',\r\n          relationType: 'hasOne',\r\n                  keyFrom: 'id',\r\n          keyTo: 'myuserId'\r\n        },\r\n        airline: {\r\n          name: 'airline',\r\n          type: 'Airline',\r\n          model: 'Airline',\r\n          relationType: 'hasOne',\r\n                  keyFrom: 'id',\r\n          keyTo: 'myuserId'\r\n        },\r\n        rentalService: {\r\n          name: 'rentalService',\r\n          type: 'RentalService',\r\n          model: 'RentalService',\r\n          relationType: 'hasOne',\r\n                  keyFrom: 'id',\r\n          keyTo: 'myuserId'\r\n        },\r\n      }\r\n    }\r\n  }\r\n}\r\n","/* tslint:disable */\n\ndeclare var Object: any;\nexport interface QuickFlightReservationInterface {\n  \"discount\": number;\n  \"seatReservationId\": string;\n  \"id\"?: number;\n}\n\nexport class QuickFlightReservation implements QuickFlightReservationInterface {\n  \"discount\": number;\n  \"seatReservationId\": string;\n  \"id\": number;\n  constructor(data?: QuickFlightReservationInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `QuickFlightReservation`.\n   */\n  public static getModelName() {\n    return \"QuickFlightReservation\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of QuickFlightReservation for dynamic purposes.\n  **/\n  public static factory(data: QuickFlightReservationInterface): QuickFlightReservation{\n    return new QuickFlightReservation(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'QuickFlightReservation',\n      plural: 'QuickFlightReservations',\n      path: 'QuickFlightReservations',\n      idName: 'id',\n      properties: {\n        \"discount\": {\n          name: 'discount',\n          type: 'number'\n        },\n        \"seatReservationId\": {\n          name: 'seatReservationId',\n          type: 'string'\n        },\n        \"id\": {\n          name: 'id',\n          type: 'number'\n        },\n      },\n      relations: {\n      }\n    }\n  }\n}\n","/* tslint:disable */\r\nimport {\r\n  Branch,\r\n  Car,\r\n  CarPrice,\r\n  Location\r\n} from '../index';\r\n\r\ndeclare var Object: any;\r\nexport interface RentalServiceInterface {\r\n  \"name\": string;\r\n  \"address\": string;\r\n  \"latitude\"?: number;\r\n  \"longitude\"?: number;\r\n  \"description\": string;\r\n  \"rating\"?: number;\r\n  \"ratingCount\"?: number;\r\n  \"id\"?: any;\r\n  \"myuserId\"?: any;\r\n  \"locationId\"?: any;\r\n  branches?: Branch[];\r\n  cars?: Car[];\r\n  carPrices?: CarPrice[];\r\n  location?: Location;\r\n}\r\n\r\nexport class RentalService implements RentalServiceInterface {\r\n  \"name\": string;\r\n  \"address\": string;\r\n  \"latitude\": number;\r\n  \"longitude\": number;\r\n  \"description\": string;\r\n  \"rating\": number;\r\n  \"ratingCount\": number;\r\n  \"id\": any;\r\n  \"myuserId\": any;\r\n  \"locationId\": any;\r\n  branches: Branch[];\r\n  cars: Car[];\r\n  carPrices: CarPrice[];\r\n  location: Location;\r\n  constructor(data?: RentalServiceInterface) {\r\n    Object.assign(this, data);\r\n  }\r\n  /**\r\n   * The name of the model represented by this $resource,\r\n   * i.e. `RentalService`.\r\n   */\r\n  public static getModelName() {\r\n    return \"RentalService\";\r\n  }\r\n  /**\r\n  * @method factory\r\n  * @author Jonathan Casarrubias\r\n  * @license MIT\r\n  * This method creates an instance of RentalService for dynamic purposes.\r\n  **/\r\n  public static factory(data: RentalServiceInterface): RentalService{\r\n    return new RentalService(data);\r\n  }\r\n  /**\r\n  * @method getModelDefinition\r\n  * @author Julien Ledun\r\n  * @license MIT\r\n  * This method returns an object that represents some of the model\r\n  * definitions.\r\n  **/\r\n  public static getModelDefinition() {\r\n    return {\r\n      name: 'RentalService',\r\n      plural: 'RentalServices',\r\n      path: 'RentalServices',\r\n      idName: 'id',\r\n      properties: {\r\n        \"name\": {\r\n          name: 'name',\r\n          type: 'string'\r\n        },\r\n        \"address\": {\r\n          name: 'address',\r\n          type: 'string'\r\n        },\r\n        \"latitude\": {\r\n          name: 'latitude',\r\n          type: 'number'\r\n        },\r\n        \"longitude\": {\r\n          name: 'longitude',\r\n          type: 'number'\r\n        },\r\n        \"description\": {\r\n          name: 'description',\r\n          type: 'string'\r\n        },\r\n        \"rating\": {\r\n          name: 'rating',\r\n          type: 'number',\r\n          default: 0\r\n        },\r\n        \"ratingCount\": {\r\n          name: 'ratingCount',\r\n          type: 'number',\r\n          default: 0\r\n        },\r\n        \"id\": {\r\n          name: 'id',\r\n          type: 'any'\r\n        },\r\n        \"myuserId\": {\r\n          name: 'myuserId',\r\n          type: 'any'\r\n        },\r\n        \"locationId\": {\r\n          name: 'locationId',\r\n          type: 'any'\r\n        },\r\n      },\r\n      relations: {\r\n        branches: {\r\n          name: 'branches',\r\n          type: 'Branch[]',\r\n          model: 'Branch',\r\n          relationType: 'hasMany',\r\n                  keyFrom: 'id',\r\n          keyTo: 'rentalServiceId'\r\n        },\r\n        cars: {\r\n          name: 'cars',\r\n          type: 'Car[]',\r\n          model: 'Car',\r\n          relationType: 'hasMany',\r\n                  keyFrom: 'id',\r\n          keyTo: 'rentalServiceId'\r\n        },\r\n        carPrices: {\r\n          name: 'carPrices',\r\n          type: 'CarPrice[]',\r\n          model: 'CarPrice',\r\n          relationType: 'hasMany',\r\n                  keyFrom: 'id',\r\n          keyTo: 'rentalServiceId'\r\n        },\r\n        location: {\r\n          name: 'location',\r\n          type: 'Location',\r\n          model: 'Location',\r\n          relationType: 'belongsTo',\r\n                  keyFrom: 'locationId',\r\n          keyTo: 'id'\r\n        },\r\n      }\r\n    }\r\n  }\r\n}\r\n","/* tslint:disable */\n\ndeclare var Object: any;\nexport interface ReservationOfferInterface {\n  \"roomReservationId\": number;\n  \"specialOfferId\": string;\n  \"id\"?: any;\n}\n\nexport class ReservationOffer implements ReservationOfferInterface {\n  \"roomReservationId\": number;\n  \"specialOfferId\": string;\n  \"id\": any;\n  constructor(data?: ReservationOfferInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `ReservationOffer`.\n   */\n  public static getModelName() {\n    return \"ReservationOffer\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of ReservationOffer for dynamic purposes.\n  **/\n  public static factory(data: ReservationOfferInterface): ReservationOffer{\n    return new ReservationOffer(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'ReservationOffer',\n      plural: 'ReservationOffers',\n      path: 'ReservationOffers',\n      idName: 'id',\n      properties: {\n        \"roomReservationId\": {\n          name: 'roomReservationId',\n          type: 'number'\n        },\n        \"specialOfferId\": {\n          name: 'specialOfferId',\n          type: 'string'\n        },\n        \"id\": {\n          name: 'id',\n          type: 'any'\n        },\n      },\n      relations: {\n      }\n    }\n  }\n}\n","/* tslint:disable */\nimport {\n  Hotel,\n  RoomPrice,\n  HotelDiscount\n} from '../index';\n\ndeclare var Object: any;\nexport interface RoomInterface {\n  \"number\": number;\n  \"description\": string;\n  \"beds\": number;\n  \"active\": boolean;\n  \"ratingCount\"?: number;\n  \"rating\"?: number;\n  \"id\"?: any;\n  \"hotelId\"?: any;\n  hotel?: Hotel;\n  roomPrices?: RoomPrice[];\n  hotelDiscounts?: HotelDiscount[];\n}\n\nexport class Room implements RoomInterface {\n  \"number\": number;\n  \"description\": string;\n  \"beds\": number;\n  \"active\": boolean;\n  \"ratingCount\": number;\n  \"rating\": number;\n  \"id\": any;\n  \"hotelId\": any;\n  hotel: Hotel;\n  roomPrices: RoomPrice[];\n  hotelDiscounts: HotelDiscount[];\n  constructor(data?: RoomInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `Room`.\n   */\n  public static getModelName() {\n    return \"Room\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of Room for dynamic purposes.\n  **/\n  public static factory(data: RoomInterface): Room{\n    return new Room(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'Room',\n      plural: 'Rooms',\n      path: 'Rooms',\n      idName: 'id',\n      properties: {\n        \"number\": {\n          name: 'number',\n          type: 'number'\n        },\n        \"description\": {\n          name: 'description',\n          type: 'string'\n        },\n        \"beds\": {\n          name: 'beds',\n          type: 'number',\n          default: 1\n        },\n        \"active\": {\n          name: 'active',\n          type: 'boolean',\n          default: true\n        },\n        \"ratingCount\": {\n          name: 'ratingCount',\n          type: 'number',\n          default: 0\n        },\n        \"rating\": {\n          name: 'rating',\n          type: 'number',\n          default: 0\n        },\n        \"id\": {\n          name: 'id',\n          type: 'any'\n        },\n        \"hotelId\": {\n          name: 'hotelId',\n          type: 'any'\n        },\n      },\n      relations: {\n        hotel: {\n          name: 'hotel',\n          type: 'Hotel',\n          model: 'Hotel',\n          relationType: 'belongsTo',\n                  keyFrom: 'hotelId',\n          keyTo: 'id'\n        },\n        roomPrices: {\n          name: 'roomPrices',\n          type: 'RoomPrice[]',\n          model: 'RoomPrice',\n          relationType: 'hasMany',\n                  keyFrom: 'id',\n          keyTo: 'roomId'\n        },\n        hotelDiscounts: {\n          name: 'hotelDiscounts',\n          type: 'HotelDiscount[]',\n          model: 'HotelDiscount',\n          relationType: 'hasMany',\n                  keyFrom: 'id',\n          keyTo: 'roomId'\n        },\n      }\n    }\n  }\n}\n","/* tslint:disable */\nimport {\n  Hotel,\n  Room\n} from '../index';\n\ndeclare var Object: any;\nexport interface RoomPriceInterface {\n  \"price\": number;\n  \"startDate\": Date;\n  \"id\"?: any;\n  \"hotelId\"?: any;\n  \"roomId\"?: any;\n  hotel?: Hotel;\n  room?: Room;\n}\n\nexport class RoomPrice implements RoomPriceInterface {\n  \"price\": number;\n  \"startDate\": Date;\n  \"id\": any;\n  \"hotelId\": any;\n  \"roomId\": any;\n  hotel: Hotel;\n  room: Room;\n  constructor(data?: RoomPriceInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `RoomPrice`.\n   */\n  public static getModelName() {\n    return \"RoomPrice\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of RoomPrice for dynamic purposes.\n  **/\n  public static factory(data: RoomPriceInterface): RoomPrice{\n    return new RoomPrice(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'RoomPrice',\n      plural: 'RoomPrices',\n      path: 'RoomPrices',\n      idName: 'id',\n      properties: {\n        \"price\": {\n          name: 'price',\n          type: 'number'\n        },\n        \"startDate\": {\n          name: 'startDate',\n          type: 'Date'\n        },\n        \"id\": {\n          name: 'id',\n          type: 'any'\n        },\n        \"hotelId\": {\n          name: 'hotelId',\n          type: 'any'\n        },\n        \"roomId\": {\n          name: 'roomId',\n          type: 'any'\n        },\n      },\n      relations: {\n        hotel: {\n          name: 'hotel',\n          type: 'Hotel',\n          model: 'Hotel',\n          relationType: 'belongsTo',\n                  keyFrom: 'hotelId',\n          keyTo: 'id'\n        },\n        room: {\n          name: 'room',\n          type: 'Room',\n          model: 'Room',\n          relationType: 'belongsTo',\n                  keyFrom: 'roomId',\n          keyTo: 'id'\n        },\n      }\n    }\n  }\n}\n","/* tslint:disable */\n\ndeclare var Object: any;\nexport interface RoomReservationInterface {\n  \"startDate\": Date;\n  \"endDate\": Date;\n  \"price\": number;\n  \"roomId\": string;\n  \"hotelId\": string;\n  \"myuserId\"?: string;\n  \"hotelDiscountId\"?: string;\n  \"rated\"?: boolean;\n  \"id\"?: number;\n}\n\nexport class RoomReservation implements RoomReservationInterface {\n  \"startDate\": Date;\n  \"endDate\": Date;\n  \"price\": number;\n  \"roomId\": string;\n  \"hotelId\": string;\n  \"myuserId\": string;\n  \"hotelDiscountId\": string;\n  \"rated\": boolean;\n  \"id\": number;\n  constructor(data?: RoomReservationInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `RoomReservation`.\n   */\n  public static getModelName() {\n    return \"RoomReservation\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of RoomReservation for dynamic purposes.\n  **/\n  public static factory(data: RoomReservationInterface): RoomReservation{\n    return new RoomReservation(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'RoomReservation',\n      plural: 'RoomReservations',\n      path: 'RoomReservations',\n      idName: 'id',\n      properties: {\n        \"startDate\": {\n          name: 'startDate',\n          type: 'Date'\n        },\n        \"endDate\": {\n          name: 'endDate',\n          type: 'Date'\n        },\n        \"price\": {\n          name: 'price',\n          type: 'number'\n        },\n        \"roomId\": {\n          name: 'roomId',\n          type: 'string'\n        },\n        \"hotelId\": {\n          name: 'hotelId',\n          type: 'string'\n        },\n        \"myuserId\": {\n          name: 'myuserId',\n          type: 'string'\n        },\n        \"hotelDiscountId\": {\n          name: 'hotelDiscountId',\n          type: 'string'\n        },\n        \"rated\": {\n          name: 'rated',\n          type: 'boolean',\n          default: false\n        },\n        \"id\": {\n          name: 'id',\n          type: 'number'\n        },\n      },\n      relations: {\n      }\n    }\n  }\n}\n","/* tslint:disable */\nimport {\n  Room\n} from '../index';\n\ndeclare var Object: any;\nexport interface RoomidInterface {\n  \"id\"?: number;\n  \"roomId\"?: any;\n  room?: Room;\n}\n\nexport class Roomid implements RoomidInterface {\n  \"id\": number;\n  \"roomId\": any;\n  room: Room;\n  constructor(data?: RoomidInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `Roomid`.\n   */\n  public static getModelName() {\n    return \"Roomid\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of Roomid for dynamic purposes.\n  **/\n  public static factory(data: RoomidInterface): Roomid{\n    return new Roomid(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'Roomid',\n      plural: 'Roomids',\n      path: 'Roomids',\n      idName: 'id',\n      properties: {\n        \"id\": {\n          name: 'id',\n          type: 'number'\n        },\n        \"roomId\": {\n          name: 'roomId',\n          type: 'any'\n        },\n      },\n      relations: {\n        room: {\n          name: 'room',\n          type: 'Room',\n          model: 'Room',\n          relationType: 'belongsTo',\n                  keyFrom: 'roomId',\n          keyTo: 'id'\n        },\n      }\n    }\n  }\n}\n","/* tslint:disable */\nimport {\n  Flight\n} from '../index';\n\ndeclare var Object: any;\nexport interface SeatInterface {\n  \"row\": number;\n  \"column\": string;\n  \"classType\": string;\n  \"id\"?: any;\n  \"flightId\"?: any;\n  flight?: Flight;\n}\n\nexport class Seat implements SeatInterface {\n  \"row\": number;\n  \"column\": string;\n  \"classType\": string;\n  \"id\": any;\n  \"flightId\": any;\n  flight: Flight;\n  constructor(data?: SeatInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `Seat`.\n   */\n  public static getModelName() {\n    return \"Seat\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of Seat for dynamic purposes.\n  **/\n  public static factory(data: SeatInterface): Seat{\n    return new Seat(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'Seat',\n      plural: 'Seats',\n      path: 'Seats',\n      idName: 'id',\n      properties: {\n        \"row\": {\n          name: 'row',\n          type: 'number'\n        },\n        \"column\": {\n          name: 'column',\n          type: 'string'\n        },\n        \"classType\": {\n          name: 'classType',\n          type: 'string'\n        },\n        \"id\": {\n          name: 'id',\n          type: 'any'\n        },\n        \"flightId\": {\n          name: 'flightId',\n          type: 'any'\n        },\n      },\n      relations: {\n        flight: {\n          name: 'flight',\n          type: 'Flight',\n          model: 'Flight',\n          relationType: 'belongsTo',\n                  keyFrom: 'flightId',\n          keyTo: 'id'\n        },\n      }\n    }\n  }\n}\n","/* tslint:disable */\nimport {\n  Seat\n} from '../index';\n\ndeclare var Object: any;\nexport interface SeatIdInterface {\n  \"id\"?: number;\n  \"seatId\"?: any;\n  seat?: Seat;\n}\n\nexport class SeatId implements SeatIdInterface {\n  \"id\": number;\n  \"seatId\": any;\n  seat: Seat;\n  constructor(data?: SeatIdInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `SeatId`.\n   */\n  public static getModelName() {\n    return \"SeatId\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of SeatId for dynamic purposes.\n  **/\n  public static factory(data: SeatIdInterface): SeatId{\n    return new SeatId(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'SeatId',\n      plural: 'SeatIds',\n      path: 'SeatIds',\n      idName: 'id',\n      properties: {\n        \"id\": {\n          name: 'id',\n          type: 'number'\n        },\n        \"seatId\": {\n          name: 'seatId',\n          type: 'any'\n        },\n      },\n      relations: {\n        seat: {\n          name: 'seat',\n          type: 'Seat',\n          model: 'Seat',\n          relationType: 'belongsTo',\n                  keyFrom: 'seatId',\n          keyTo: 'id'\n        },\n      }\n    }\n  }\n}\n","/* tslint:disable */\n\ndeclare var Object: any;\nexport interface SeatReservationInterface {\n  \"price\": number;\n  \"myuserId\": string;\n  \"seatId\": string;\n  \"id\"?: number;\n}\n\nexport class SeatReservation implements SeatReservationInterface {\n  \"price\": number;\n  \"myuserId\": string;\n  \"seatId\": string;\n  \"id\": number;\n  constructor(data?: SeatReservationInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `SeatReservation`.\n   */\n  public static getModelName() {\n    return \"SeatReservation\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of SeatReservation for dynamic purposes.\n  **/\n  public static factory(data: SeatReservationInterface): SeatReservation{\n    return new SeatReservation(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'SeatReservation',\n      plural: 'SeatReservations',\n      path: 'SeatReservations',\n      idName: 'id',\n      properties: {\n        \"price\": {\n          name: 'price',\n          type: 'number'\n        },\n        \"myuserId\": {\n          name: 'myuserId',\n          type: 'string'\n        },\n        \"seatId\": {\n          name: 'seatId',\n          type: 'string'\n        },\n        \"id\": {\n          name: 'id',\n          type: 'number'\n        },\n      },\n      relations: {\n      }\n    }\n  }\n}\n","/* tslint:disable */\n\ndeclare var Object: any;\nexport interface UserInterface {\n  \"realm\"?: string;\n  \"username\"?: string;\n  \"email\": string;\n  \"emailVerified\"?: boolean;\n  \"id\"?: any;\n  \"password\"?: string;\n  accessTokens?: any[];\n}\n\nexport class User implements UserInterface {\n  \"realm\": string;\n  \"username\": string;\n  \"email\": string;\n  \"emailVerified\": boolean;\n  \"id\": any;\n  \"password\": string;\n  accessTokens: any[];\n  constructor(data?: UserInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `User`.\n   */\n  public static getModelName() {\n    return \"User\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of User for dynamic purposes.\n  **/\n  public static factory(data: UserInterface): User{\n    return new User(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'User',\n      plural: 'Users',\n      path: 'Users',\n      idName: 'id',\n      properties: {\n        \"realm\": {\n          name: 'realm',\n          type: 'string'\n        },\n        \"username\": {\n          name: 'username',\n          type: 'string'\n        },\n        \"email\": {\n          name: 'email',\n          type: 'string'\n        },\n        \"emailVerified\": {\n          name: 'emailVerified',\n          type: 'boolean'\n        },\n        \"id\": {\n          name: 'id',\n          type: 'any'\n        },\n        \"password\": {\n          name: 'password',\n          type: 'string'\n        },\n      },\n      relations: {\n        accessTokens: {\n          name: 'accessTokens',\n          type: 'any[]',\n          model: '',\n          relationType: 'hasMany',\n                  keyFrom: 'id',\n          keyTo: 'userId'\n        },\n      }\n    }\n  }\n}\n","/* tslint:disable */\nimport {\n  Myuser\n} from '../index';\n\ndeclare var Object: any;\nexport interface UserInfoInterface {\n  \"firstName\"?: string;\n  \"lastName\"?: string;\n  \"dateOfBirth\"?: Date;\n  \"phoneNumber\"?: string;\n  \"gender\"?: string;\n  \"aboutMe\"?: string;\n  \"id\"?: any;\n  \"userIdId\"?: any;\n  userId?: Myuser;\n}\n\nexport class UserInfo implements UserInfoInterface {\n  \"firstName\": string;\n  \"lastName\": string;\n  \"dateOfBirth\": Date;\n  \"phoneNumber\": string;\n  \"gender\": string;\n  \"aboutMe\": string;\n  \"id\": any;\n  \"userIdId\": any;\n  userId: Myuser;\n  constructor(data?: UserInfoInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `UserInfo`.\n   */\n  public static getModelName() {\n    return \"UserInfo\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of UserInfo for dynamic purposes.\n  **/\n  public static factory(data: UserInfoInterface): UserInfo{\n    return new UserInfo(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'UserInfo',\n      plural: 'UserInfos',\n      path: 'UserInfos',\n      idName: 'id',\n      properties: {\n        \"firstName\": {\n          name: 'firstName',\n          type: 'string'\n        },\n        \"lastName\": {\n          name: 'lastName',\n          type: 'string'\n        },\n        \"dateOfBirth\": {\n          name: 'dateOfBirth',\n          type: 'Date'\n        },\n        \"phoneNumber\": {\n          name: 'phoneNumber',\n          type: 'string'\n        },\n        \"gender\": {\n          name: 'gender',\n          type: 'string'\n        },\n        \"aboutMe\": {\n          name: 'aboutMe',\n          type: 'string'\n        },\n        \"id\": {\n          name: 'id',\n          type: 'any'\n        },\n        \"userIdId\": {\n          name: 'userIdId',\n          type: 'any'\n        },\n      },\n      relations: {\n        userId: {\n          name: 'userId',\n          type: 'Myuser',\n          model: 'Myuser',\n          relationType: 'belongsTo',\n                  keyFrom: 'userIdId',\n          keyTo: 'id'\n        },\n      }\n    }\n  }\n}\n","/* tslint:disable */\r\nexport * from './User';\r\nexport * from './Hotel';\r\nexport * from './Room';\r\nexport * from './RentalService';\r\nexport * from './Branch';\r\nexport * from './Car';\r\nexport * from './Airline';\r\nexport * from './Flight';\r\nexport * from './RoomPrice';\r\nexport * from './HotelSpecialOffer';\r\nexport * from './HotelDiscount';\r\nexport * from './CarPrice';\r\nexport * from './Email';\r\nexport * from './Myuser';\r\nexport * from './CarReservation';\r\nexport * from './Carid';\r\nexport * from './Roomid';\r\nexport * from './RoomReservation';\r\nexport * from './UserInfo';\r\nexport * from './Seat';\r\nexport * from './SeatId';\r\nexport * from './SeatReservation';\r\nexport * from './CarSpecialOffer';\r\nexport * from './QuickFlightReservation';\r\nexport * from './Friendship';\r\nexport * from './ReservationOffer';\r\nexport * from './Location';\r\nexport * from './BaseModels';\r\nexport * from './FireLoopRef';\r\n","/* tslint:disable */\ndeclare var Object: any;\nimport { Injectable, Inject } from '@angular/core';\nimport { InternalStorage } from '../../storage/storage.swaps';\nimport { SDKToken } from '../../models/BaseModels';\n/**\n* @author Jonathan Casarrubias <twitter:@johncasarrubias> <github:@mean-expert-official>\n* @module SocketConnection\n* @license MIT\n* @description\n* This module handle socket connections and return singleton instances for each\n* connection, it will use the SDK Socket Driver Available currently supporting\n* Angular 2 for web, NativeScript 2 and Angular Universal.\n**/\n@Injectable()\nexport class LoopBackAuth {\n  /**\n   * @type {SDKToken}\n   **/\n  private token: SDKToken = new SDKToken();\n  /**\n   * @type {string}\n   **/\n  protected prefix: string = '$LoopBackSDK$';\n  /**\n   * @method constructor\n   * @param {InternalStorage} storage Internal Storage Driver\n   * @description\n   * The constructor will initialize the token loading data from storage\n   **/\n  constructor(@Inject(InternalStorage) protected storage: InternalStorage) {\n    this.token.id = this.load('id');\n    this.token.user = this.load('user');\n    this.token.userId = this.load('userId');\n    this.token.created = this.load('created');\n    this.token.ttl = this.load('ttl');\n    this.token.rememberMe = this.load('rememberMe');\n  }\n  /**\n   * @method setRememberMe\n   * @param {boolean} value Flag to remember credentials\n   * @return {void}\n   * @description\n   * This method will set a flag in order to remember the current credentials\n   **/\n  public setRememberMe(value: boolean): void {\n    this.token.rememberMe = value;\n  }\n  /**\n   * @method setUser\n   * @param {any} user Any type of user model\n   * @return {void}\n   * @description\n   * This method will update the user information and persist it if the\n   * rememberMe flag is set.\n   **/\n  public setUser(user: any) {\n    this.token.user = user;\n    this.save();\n  }\n  /**\n   * @method setToken\n   * @param {SDKToken} token SDKToken or casted AccessToken instance\n   * @return {void}\n   * @description\n   * This method will set a flag in order to remember the current credentials\n   **/\n  public setToken(token: SDKToken): void {\n    this.token = Object.assign({}, this.token, token);\n    this.save();\n  }\n  /**\n   * @method getToken\n   * @return {void}\n   * @description\n   * This method will set a flag in order to remember the current credentials.\n   **/\n  public getToken(): SDKToken {\n    return <SDKToken>this.token;\n  }\n  /**\n   * @method getAccessTokenId\n   * @return {string}\n   * @description\n   * This method will return the actual token string, not the object instance.\n   **/\n  public getAccessTokenId(): string {\n    return this.token.id;\n  }\n  /**\n   * @method getCurrentUserId\n   * @return {any}\n   * @description\n   * This method will return the current user id, it can be number or string.\n   **/\n  public getCurrentUserId(): any {\n    return this.token.userId;\n  }\n  /**\n   * @method getCurrentUserData\n   * @return {any}\n   * @description\n   * This method will return the current user instance.\n   **/\n  public getCurrentUserData(): any {\n    return (typeof this.token.user === 'string') ? JSON.parse(this.token.user) : this.token.user;\n  }\n  /**\n   * @method save\n   * @return {boolean} Whether or not the information was saved\n   * @description\n   * This method will save in either local storage or cookies the current credentials.\n   * But only if rememberMe is enabled.\n   **/\n  public save(): boolean {\n      let today = new Date();\n      let expires = new Date(today.getTime() + (this.token.ttl * 1000));\n      this.persist('id', this.token.id, expires);\n      this.persist('user', this.token.user, expires);\n      this.persist('userId', this.token.userId, expires);\n      this.persist('created', this.token.created, expires);\n      this.persist('ttl', this.token.ttl, expires);\n      this.persist('rememberMe', this.token.rememberMe, expires);\n      return true;\n  };\n  /**\n   * @method load\n   * @param {string} prop Property name\n   * @return {any} Any information persisted in storage\n   * @description\n   * This method will load either from local storage or cookies the provided property.\n   **/\n  protected load(prop: string): any {\n    return this.storage.get(`${this.prefix}${prop}`);\n  }\n  /**\n   * @method clear\n   * @return {void}\n   * @description\n   * This method will clear cookies or the local storage.\n   **/\n  public clear(): void {\n    Object.keys(this.token).forEach((prop: string) => this.storage.remove(`${this.prefix}${prop}`));\n    this.token = new SDKToken();\n  }\n  /**\n   * @method persist\n   * @return {void}\n   * @description\n   * This method saves values to storage\n   **/\n  protected persist(prop: string, value: any, expires?: Date): void {\n    try {\n      this.storage.set(\n        `${this.prefix}${prop}`,\n        (typeof value === 'object') ? JSON.stringify(value) : value,\n        this.token.rememberMe?expires:null\n      );\n    }\n    catch (err) {\n      console.error('Cannot access local/session storage:', err);\n    }\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpRequest, HttpParams, HttpResponse, HttpParameterCodec } from '@angular/common/http';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\nimport { ErrorHandler } from './error.service';\nimport { LoopBackAuth } from './auth.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackFilter, AccessToken } from '../../models/BaseModels';\nimport { SDKModels } from '../custom/SDKModels';\nimport { Observable, Subject } from 'rxjs';\nimport { catchError, map, filter } from 'rxjs/operators';\nimport { SocketConnection } from '../../sockets/socket.connections';\n// Making Sure EventSource Type is available to avoid compilation issues.\ndeclare var EventSource: any;\nclass CustomQueryEncoderHelper implements HttpParameterCodec {\n  encodeKey(k: string): string {\n      return encodeURIComponent(k);\n  }\n\n  encodeValue(v: string): string {\n      return encodeURIComponent(v);\n  }\n\n  decodeKey(k: string): string {\n      return decodeURIComponent(k);\n  }\n\n  decodeValue(v: string): string {\n      return decodeURIComponent(v);\n  }\n}\n/**\n* @module BaseLoopBackApi\n* @author Jonathan Casarrubias <@johncasarrubias> <github:jonathan-casarrubias>\n* @author Nikolay Matiushenkov <https://github.com/mnvx>\n* @license MIT\n* @description\n* Abstract class that will be implemented in every custom service automatically built\n* by the sdk builder.\n* It provides the core functionallity for every API call, either by HTTP Calls or by\n* WebSockets.\n**/\n@Injectable()\nexport abstract class BaseLoopBackApi {\n\n  protected path: string;\n  protected model: any;\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    this.model = this.models.get(this.getModelName());\n  }\n  /**\n   * @method request\n   * @param {string}  method      Request method (GET, POST, PUT)\n   * @param {string}  url         Request url (my-host/my-url/:id)\n   * @param {any}     routeParams Values of url parameters\n   * @param {any}     urlParams   Parameters for building url (filter and other)\n   * @param {any}     postBody    Request postBody\n   * @return {Observable<any>}\n   * @description\n   * This is a core method, every HTTP Call will be done from here, every API Service will\n   * extend this class and use this method to get RESTful communication.\n   **/\n  public request(\n    method         : string,\n    url            : string,\n    routeParams    : any = {},\n    urlParams      : any = {},\n    postBody       : any = {},\n    pubsub         : boolean = false,\n    customHeaders? : Function\n  ): Observable<any> {\n    // Transpile route variables to the actual request Values\n    Object.keys(routeParams).forEach((key: string) => {\n      url = url.replace(new RegExp(\":\" + key + \"(\\/|$)\", \"g\"), routeParams[key] + \"$1\")\n    });\n    if (pubsub) {\n      if (url.match(/fk/)) {\n        let arr = url.split('/'); arr.pop();\n        url = arr.join('/');\n      }\n      let event: string = (`[${method}]${url}`).replace(/\\?/, '');\n      let subject: Subject<any> = new Subject<any>();\n      this.connection.on(event, (res: any) => subject.next(res));\n      return subject.asObservable();\n    } else {\n      let httpParams = new HttpParams({ encoder: new CustomQueryEncoderHelper() });\n      // Headers to be sent\n      let headers: HttpHeaders = new HttpHeaders();\n      headers = headers.append('Content-Type', 'application/json');\n      // Authenticate request\n      headers = this.authenticate(url, headers);\n      // Body fix for built in remote methods using \"data\", \"options\" or \"credentials\n      // that are the actual body, Custom remote method properties are different and need\n      // to be wrapped into a body object\n      let body: any;\n      let postBodyKeys = typeof postBody === 'object' ? Object.keys(postBody) : []\n      if (postBodyKeys.length === 1) {\n        body = postBody[postBodyKeys.shift()];\n      } else {\n        body = postBody;\n      }\n      \n      let queryString: string = '';\n\n      // Separate filter object from url params and add to search query\n      if (urlParams.filter) {\n        if (LoopBackConfig.isHeadersFilteringSet()) {\n          headers = headers.append('filter', JSON.stringify(urlParams.filter));\n        } else {\n          queryString = `?filter=${encodeURIComponent(JSON.stringify(urlParams.filter))}`;\n        }\n        delete urlParams.filter;\n      }\n\n      // Separate where object from url params and add to search query\n      if (urlParams.where) {\n        if (LoopBackConfig.isHeadersWhereSet()) {\n          /**\n          CODE BELOW WILL GENERATE THE FOLLOWING ISSUES:\n          - https://github.com/mean-expert-official/loopback-sdk-builder/issues/356\n          - https://github.com/mean-expert-official/loopback-sdk-builder/issues/328 \n          **/\n          headers = headers.append('where', JSON.stringify(urlParams.where));\n        } else {\n          queryString = `?where=${encodeURIComponent(JSON.stringify(urlParams.where))}`;\n        }\n        delete urlParams.where;\n      }\n    \n      if (typeof customHeaders === 'function') {\n        headers = customHeaders(headers);\n      }\n/* enhancement/configure-where-headers\n      this.searchParams.setJSON(urlParams);\n      let request: Request = new Request(\n        new RequestOptions({\n          headers        : headers,\n          method         : method,\n          url            : `${url}${queryString}`,\n          search         : Object.keys(urlParams).length > 0 ? this.searchParams.getURLSearchParams() : null,\n          body           : body ? JSON.stringify(body) : undefined,\n          withCredentials: LoopBackConfig.getRequestOptionsCredentials()\n        })\n      );\nTODO Fix Merge Conflict */\n      Object.keys(urlParams).forEach(paramKey => {\n        let paramValue = urlParams[paramKey];\n        paramValue = typeof paramValue === 'object' ? JSON.stringify(paramValue) : paramValue;\n        httpParams = httpParams.append(paramKey, paramValue);\n      });\n      let request = new HttpRequest(method, `${url}${queryString}`, body, {\n        headers        : headers,\n        params         : httpParams,\n        withCredentials: LoopBackConfig.getRequestOptionsCredentials()\n      });\n      return this.http.request(request).pipe(\n        filter(event => event instanceof HttpResponse),\n        map((res: HttpResponse<any>) => res.body),\n        catchError((e) => this.errorHandler.handleError(e))\n      );\n    }\n  }\n  /**\n   * @method authenticate\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @param {string} url Server URL\n   * @param {Headers} headers HTTP Headers\n   * @return {void}\n   * @description\n   * This method will try to authenticate using either an access_token or basic http auth\n   */\n  public authenticate<T>(url: string, headers: HttpHeaders): HttpHeaders {\n    if (this.auth.getAccessTokenId()) {\n      headers = headers.append(\n        'Authorization',\n        LoopBackConfig.getAuthPrefix() + this.auth.getAccessTokenId()\n      );\n    }\n\n    return headers;\n  }\n  /**\n   * @method create\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @param {T} data Generic data type\n   * @return {Observable<T>}\n   * @description\n   * Generic create method\n   */\n  public create<T>(data: T, customHeaders?: Function): Observable<T> {\n    return this.request('POST', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path\n    ].join('/'), undefined, undefined, { data }, null, customHeaders)\n    .pipe(map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method onCreate\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @param {T[]} data Generic data type array\n   * @return {Observable<T[]>}\n   * @description\n   * Generic pubsub oncreate many method\n   */\n  public onCreate<T>(data: T[]): Observable<T[]> {\n    return this.request('POST', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path\n    ].join('/'), undefined, undefined, { data }, true)\n    .pipe(map((datum: T[]) => datum.map((data: T) => this.model.factory(data))));\n  }\n  /**\n   * @method createMany\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @param {T[]} data Generic data type array\n   * @return {Observable<T[]>}\n   * @description\n   * Generic create many method\n   */\n  public createMany<T>(data: T[], customHeaders?: Function): Observable<T[]> {\n    return this.request('POST', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path\n    ].join('/'), undefined, undefined, { data }, null, customHeaders)\n    .pipe(map((datum: T[]) => datum.map((data: T) => this.model.factory(data))));\n  }\n  /**\n   * @method onCreateMany\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @param {T[]} data Generic data type array\n   * @return {Observable<T[]>}\n   * @description\n   * Generic create many method\n   */\n  public onCreateMany<T>(data: T[]): Observable<T[]> {\n    return this.request('POST', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path\n    ].join('/'), undefined, undefined, { data }, true)\n    .pipe(map((datum: T[]) => datum.map((data: T) => this.model.factory(data))));\n  }\n  /**\n   * @method findById\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @param {any} data Generic data type\n   * @return {Observable<T>}\n   * @description\n   * Generic findById method\n   */\n  public findById<T>(id: any, filter: LoopBackFilter = {}, customHeaders?: Function): Observable<T> {\n    let _urlParams: any = {};\n    if (filter) _urlParams.filter = filter;\n    return this.request('GET', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      ':id'\n    ].join('/'), { id }, _urlParams, undefined, null, customHeaders)\n    .pipe(map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method find\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T[+>}\n   * @description\n   * Generic find method\n   */\n  public find<T>(filter: LoopBackFilter = {}, customHeaders?: Function): Observable<T[]> {\n    return this.request('GET', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path\n    ].join('/'), undefined, { filter }, undefined, null, customHeaders)\n    .pipe(map((datum: T[]) => datum.map((data: T) => this.model.factory(data))));\n  }\n  /**\n   * @method exists\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T[]>}\n   * @description\n   * Generic exists method\n   */\n  public exists<T>(id: any, customHeaders?: Function): Observable<T> {\n    return this.request('GET', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      ':id/exists'\n    ].join('/'), { id }, undefined, undefined, null, customHeaders);\n  }\n  /**\n   * @method findOne\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic findOne method\n   */\n  public findOne<T>(filter: LoopBackFilter = {}, customHeaders?: Function): Observable<T> {\n    return this.request('GET', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      'findOne'\n    ].join('/'), undefined, { filter }, undefined, null, customHeaders)\n    .pipe(map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method updateAll\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T[]>}\n   * @description\n   * Generic updateAll method\n   */\n  public updateAll<T>(where: any = {}, data: T, customHeaders?: Function): Observable<{ count: 'number' }> {\n    let _urlParams: any = {};\n    if (where) _urlParams.where = where;\n    return this.request('POST', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      'update'\n    ].join('/'), undefined, _urlParams, { data }, null, customHeaders);\n  }\n  /**\n   * @method onUpdateAll\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T[]>}\n   * @description\n   * Generic pubsub onUpdateAll method\n   */\n  public onUpdateAll<T>(where: any = {}, data: T): Observable<{ count: 'number' }> {\n    let _urlParams: any = {};\n    if (where) _urlParams.where = where;\n    return this.request('POST', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      'update'\n    ].join('/'), undefined, _urlParams, { data }, true);\n  }\n  /**\n   * @method deleteById\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic deleteById method\n   */\n  public deleteById<T>(id: any, customHeaders?: Function): Observable<T> {\n    return this.request('DELETE', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      ':id'\n    ].join('/'), { id }, undefined, undefined, null, customHeaders)\n    .pipe(map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method onDeleteById\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic pubsub onDeleteById method\n   */\n  public onDeleteById<T>(id: any): Observable<T> {\n    return this.request('DELETE', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      ':id'\n    ].join('/'), { id }, undefined, undefined, true)\n    .pipe(map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method count\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<{ count: number }>}\n   * @description\n   * Generic count method\n   */\n  public count(where: any = {}, customHeaders?: Function): Observable<{ count: number }> {\n    let _urlParams: any = {};\n    if (where) _urlParams.where = where;\n    return this.request('GET', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      'count'\n    ].join('/'), undefined, _urlParams, undefined, null, customHeaders);\n  }\n  /**\n   * @method updateAttributes\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic updateAttributes method\n   */\n  public updateAttributes<T>(id: any, data: T, customHeaders?: Function): Observable<T> {\n    return this.request('PUT', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      ':id'\n    ].join('/'), { id }, undefined, { data }, null, customHeaders)\n    .pipe(map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method onUpdateAttributes\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic onUpdateAttributes method\n   */\n  public onUpdateAttributes<T>(id: any, data: T): Observable<T> {\n    return this.request('PUT', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      ':id'\n    ].join('/'), { id }, undefined, { data }, true)\n    .pipe(map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method upsert\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic upsert method\n   */\n  public upsert<T>(data: any = {}, customHeaders?: Function): Observable<T> {\n    return this.request('PUT', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n    ].join('/'), undefined, undefined, { data }, null, customHeaders)\n    .pipe(map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method onUpsert\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic pubsub onUpsert method\n   */\n  public onUpsert<T>(data: any = {}): Observable<T> {\n    return this.request('PUT', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n    ].join('/'), undefined, undefined, { data }, true)\n    .pipe(map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method upsertPatch\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic upsert method using patch http method\n   */\n  public upsertPatch<T>(data: any = {}, customHeaders?: Function): Observable<T> {\n    return this.request('PATCH', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n    ].join('/'), undefined, undefined, { data }, null, customHeaders)\n    .pipe(map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method onUpsertPatch\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic pubsub onUpsertPatch method using patch http method\n   */\n  public onUpsertPatch<T>(data: any = {}): Observable<T> {\n    return this.request('PATCH', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n    ].join('/'), undefined, undefined, { data }, true)\n    .pipe(map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method upsertWithWhere\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic upsertWithWhere method\n   */\n  public upsertWithWhere<T>(where: any = {}, data: any = {}, customHeaders?: Function): Observable<T> {\n    let _urlParams: any = {};\n    if (where) _urlParams.where = where;\n    return this.request('POST', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      'upsertWithWhere'\n    ].join('/'), undefined, _urlParams, { data }, null, customHeaders)\n    .pipe(map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method onUpsertWithWhere\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic pubsub onUpsertWithWhere method\n   */\n  public onUpsertWithWhere<T>(where: any = {}, data: any = {}): Observable<T> {\n    let _urlParams: any = {};\n    if (where) _urlParams.where = where;\n    return this.request('POST', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      'upsertWithWhere'\n    ].join('/'), undefined, _urlParams, { data }, true)\n    .pipe(map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method replaceOrCreate\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic replaceOrCreate method\n   */\n  public replaceOrCreate<T>(data: any = {}, customHeaders?: Function): Observable<T> {\n    return this.request('POST', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      'replaceOrCreate'\n    ].join('/'), undefined, undefined, { data }, null, customHeaders)\n    .pipe(map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method onReplaceOrCreate\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic onReplaceOrCreate method\n   */\n  public onReplaceOrCreate<T>(data: any = {}): Observable<T> {\n    return this.request('POST', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      'replaceOrCreate'\n    ].join('/'), undefined, undefined, { data }, true)\n    .pipe(map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method replaceById\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic replaceById method\n   */\n  public replaceById<T>(id: any, data: any = {}, customHeaders?: Function): Observable<T> {\n    return this.request('POST', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      ':id', 'replace'\n    ].join('/'), { id }, undefined, { data }, null, customHeaders)\n    .pipe(map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method onReplaceById\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic onReplaceById method\n   */\n  public onReplaceById<T>(id: any, data: any = {}): Observable<T> {\n    return this.request('POST', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      ':id', 'replace'\n    ].join('/'), { id }, undefined, { data }, true)\n    .pipe(map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method createChangeStream\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<any>}\n   * @description\n   * Generic createChangeStream method\n   */\n  public createChangeStream(): Observable<any> {\n    let subject = new Subject();\n    if (typeof EventSource !== 'undefined') {\n      let emit   = (msg: any) => subject.next(JSON.parse(msg.data));\n      var source = new EventSource([\n        LoopBackConfig.getPath(),\n        LoopBackConfig.getApiVersion(),\n        this.model.getModelDefinition().path,\n        'change-stream'\n      ].join('/'));\n      source.addEventListener('data', emit);\n      source.onerror = emit;\n    } else {\n      console.warn('SDK Builder: EventSource is not supported'); \n    }\n    return subject.asObservable();\n  }\n  /**\n   * @method getModelName\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {string}\n   * @description\n   * Abstract getModelName method\n   */\n  abstract getModelName(): string;\n}\n","/* tslint:disable */\nimport { Injectable } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\n/**\n * Default error handler\n */\n@Injectable()\nexport class ErrorHandler {\n  public handleError(errorResponse: HttpErrorResponse): Observable<never> {\n    return throwError(errorResponse.error.error || 'Server error');\n  }\n}\n","/* tslint:disable */\nexport * from './auth.service';\nexport * from './error.service';\nexport * from './base.service';\nexport * from './real.time';\n","/* tslint:disable */\nimport { Observable, Subject } from 'rxjs';\n\nexport class IO {\n\n  private socket: any;\n  private observables: any = {};\n\n  constructor(socket: any) { this.socket = socket; }\n\n  emit(event: string, data: any): void {\n    this.socket.emit('ME:RT:1://event', {\n        event : event,\n        data  : data\n    });\n  }\n\n  on(event: string): Observable<any> {\n    if (this.observables[event]) { return this.observables[event]; }\n    let subject: Subject<any> = new Subject<any>();\n    this.socket.on(event, (res: any) => subject.next(res));\n    this.observables[event] = subject.asObservable();\n    return this.observables[event];\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject } from '@angular/core';\nimport { IO } from './io.service';\nimport { LoopBackAuth } from './auth.service';\nimport { FireLoop } from '../../models/FireLoop';\nimport { SocketConnection } from '../../sockets/socket.connections';\nimport { SDKModels } from '../custom/SDKModels';\nimport { Observable, Subject, Subscription } from 'rxjs';\nimport { share } from 'rxjs/operators';\n/**\n* @author Jonathan Casarrubias <twitter:@johncasarrubias> <github:@johncasarrubias>\n* @module RealTime\n* @license MIT\n* @description\n* This module is a real-time interface for using socket connections, its main purpose\n* is to make sure that when there is a valid connection, it will create instances\n* of the different real-time functionalities like FireLoop, PubSub and IO.\n**/\n@Injectable()\nexport class RealTime {\n  public IO: IO;\n  public FireLoop: FireLoop;\n  private connecting: boolean = false;\n  private onReadySubject: Subject<string> = new Subject<string>();\n  private sharedOnReady: Observable<string> = this.onReadySubject.asObservable().pipe(share());\n  /**\n  * @method constructor\n  * @param {SocketConnection} connection WebSocket connection service\n  * @param {SDKModels} models Model provider service\n  * @param {LoopBackAuth} auth LoopBack authentication service\n  * @description\n  * It will intialize the shared on ready communication channel.\n  **/\n  constructor(\n    @Inject(SocketConnection) public connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth\n  ) {\n    this.sharedOnReady.subscribe();\n  }\n  /**\n  * @method onDisconnect\n  * @return {Observable<any>} \n  * @description\n  * Will trigger when Real-Time Service is disconnected from server.\n  **/\n  onDisconnect(): Observable<any> {\n    return this.connection.sharedObservables.sharedOnDisconnect;\n  }\n  /**\n  * @method onAuthenticated\n  * @return {Observable<any>} \n  * @description\n  * Will trigger when Real-Time Service is authenticated with the server.\n  **/\n  onAuthenticated(): Observable<any> {\n    return this.connection.sharedObservables.sharedOnAuthenticated;\n  }\n  /**\n  * @method onUnAuthorized\n  * @return {Observable<any>} \n  * @description\n  * Will trigger when Real-Time Service is not authorized to connect with the server.\n  **/\n  onUnAuthorized(): Observable<any> {\n    return this.connection.sharedObservables.sharedOnUnAuthorized;\n  }\n  /**\n  * @method onReady\n  * @return {Observable<any>} \n  * @description\n  * Will trigger when Real-Time Service is Ready for broadcasting.\n  * and will register connection flow events to notify subscribers.\n  **/\n  public onReady(): Observable<any> {\n    // If there is a valid connection, then we just send back to the EventLoop\n    // Or next will be executed before the actual subscription.\n    if (this.connection.isConnected()) {\n      let to = setTimeout(() => {\n        this.onReadySubject.next('shared-connection');\n        clearTimeout(to);\n      });\n    // Else if there is a current attempt of connection we wait for the prior\n    // process that started the connection flow.\n    } else if (this.connecting) {\n      let ti = setInterval(() => {\n        if (this.connection.isConnected()) {\n          this.onReadySubject.next('shared-connection');\n          clearInterval(ti);\n        }\n      }, 500);\n    // If there is not valid connection or attempt, then we start the connection flow\n    // and make sure we notify all the onReady subscribers when done.\n    // Also it will listen for desconnections so we unsubscribe and avoid both:\n    // Memory leaks and duplicated triggered events.\n    } else {\n      this.connecting = true;\n      this.connection.connect(this.auth.getToken());\n      this.IO       = new IO(this.connection);\n      this.FireLoop = new FireLoop(this.connection, this.models);\n      // Fire event for those subscribed \n      let s1: Subscription = this.connection.sharedObservables.sharedOnConnect.subscribe(() => {\n        console.log('Real-Time connection has been established');\n        this.connecting = false;\n        this.onReadySubject.next('connected');\n        let s2: Subscription = this.connection.sharedObservables.sharedOnDisconnect.subscribe(() => {\n          s1.unsubscribe();\n          s2.unsubscribe();\n        });\n      });\n    }\n    return this.sharedOnReady;\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Airline } from '../../models/Airline';\nimport { SocketConnection } from '../../sockets/socket.connections';\nimport { Flight } from '../../models/Flight';\n\n\n/**\n * Api services for the `Airline` model.\n */\n@Injectable()\nexport class AirlineApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * Find a related item by id for flights.\n   *\n   * @param {any} id airline id\n   *\n   * @param {any} fk Foreign key for flights\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Airline` object.)\n   * </em>\n   */\n  public findByIdFlights(id: any, fk: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/airlines/:id/flights/:fk\";\n    let _routeParams: any = {\n      id: id,\n      fk: fk\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Delete a related item by id for flights.\n   *\n   * @param {any} id airline id\n   *\n   * @param {any} fk Foreign key for flights\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * This method returns no data.\n   */\n  public destroyByIdFlights(id: any, fk: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"DELETE\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/airlines/:id/flights/:fk\";\n    let _routeParams: any = {\n      id: id,\n      fk: fk\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Update a related item by id for flights.\n   *\n   * @param {any} id airline id\n   *\n   * @param {any} fk Foreign key for flights\n   *\n   * @param {object} data Request data.\n   *\n   * This method expects a subset of model properties as request parameters.\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Airline` object.)\n   * </em>\n   */\n  public updateByIdFlights(id: any, fk: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PUT\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/airlines/:id/flights/:fk\";\n    let _routeParams: any = {\n      id: id,\n      fk: fk\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Queries flights of airline.\n   *\n   * @param {any} id airline id\n   *\n   * @param {object} filter \n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Airline` object.)\n   * </em>\n   */\n  public getFlights(id: any, filter: LoopBackFilter = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/airlines/:id/flights\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof filter !== 'undefined' && filter !== null) _urlParams.filter = filter;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Creates a new instance in flights of this model.\n   *\n   * @param {any} id airline id\n   *\n   * @param {object} data Request data.\n   *\n   * This method expects a subset of model properties as request parameters.\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Airline` object.)\n   * </em>\n   */\n  public createFlights(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/airlines/:id/flights\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Deletes all flights of this model.\n   *\n   * @param {any} id airline id\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * This method returns no data.\n   */\n  public deleteFlights(id: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"DELETE\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/airlines/:id/flights\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Counts flights of airline.\n   *\n   * @param {any} id airline id\n   *\n   * @param {object} where Criteria to match model instances\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * Data properties:\n   *\n   *  - `count` – `{number}` - \n   */\n  public countFlights(id: any, where: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/airlines/:id/flights/count\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof where !== 'undefined' && where !== null) _urlParams.where = where;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Patch an existing model instance or insert a new one into the data source.\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - Model instance data\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Airline` object.)\n   * </em>\n   */\n  public patchOrCreate(data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/airlines\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Patch attributes for a model instance and persist it into the data source.\n   *\n   * @param {any} id airline id\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - An object of model property name/value pairs\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Airline` object.)\n   * </em>\n   */\n  public patchAttributes(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/airlines/:id\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Creates a new instance in flights of this model.\n   *\n   * @param {any} id airline id\n   *\n   * @param {object} data Request data.\n   *\n   * This method expects a subset of model properties as request parameters.\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Airline` object.)\n   * </em>\n   */\n  public createManyFlights(id: any, data: any[] = [], customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/airlines/:id/flights\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `Airline`.\n   */\n  public getModelName() {\n    return \"Airline\";\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Branch } from '../../models/Branch';\nimport { SocketConnection } from '../../sockets/socket.connections';\nimport { RentalService } from '../../models/RentalService';\n\n\n/**\n * Api services for the `Branch` model.\n */\n@Injectable()\nexport class BranchApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * Fetches belongsTo relation rentalService.\n   *\n   * @param {any} id branch id\n   *\n   * @param {boolean} refresh \n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Branch` object.)\n   * </em>\n   */\n  public getRentalService(id: any, refresh: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/branches/:id/rentalService\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof refresh !== 'undefined' && refresh !== null) _urlParams.refresh = refresh;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Patch an existing model instance or insert a new one into the data source.\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - Model instance data\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Branch` object.)\n   * </em>\n   */\n  public patchOrCreate(data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/branches\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Patch attributes for a model instance and persist it into the data source.\n   *\n   * @param {any} id branch id\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - An object of model property name/value pairs\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Branch` object.)\n   * </em>\n   */\n  public patchAttributes(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/branches/:id\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `Branch`.\n   */\n  public getModelName() {\n    return \"Branch\";\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Car } from '../../models/Car';\nimport { SocketConnection } from '../../sockets/socket.connections';\nimport { RentalService } from '../../models/RentalService';\n\n\n/**\n * Api services for the `Car` model.\n */\n@Injectable()\nexport class CarApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * Fetches belongsTo relation rentalService.\n   *\n   * @param {any} id car id\n   *\n   * @param {boolean} refresh \n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Car` object.)\n   * </em>\n   */\n  public getRentalService(id: any, refresh: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/cars/:id/rentalService\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof refresh !== 'undefined' && refresh !== null) _urlParams.refresh = refresh;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Patch an existing model instance or insert a new one into the data source.\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - Model instance data\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Car` object.)\n   * </em>\n   */\n  public patchOrCreate(data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/cars\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Patch attributes for a model instance and persist it into the data source.\n   *\n   * @param {any} id car id\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - An object of model property name/value pairs\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Car` object.)\n   * </em>\n   */\n  public patchAttributes(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/cars/:id\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * <em>\n         * (The remote method definition does not provide any description.)\n         * </em>\n   *\n   * @param {object} data Request data.\n   *\n   *  - `startDate` – `{date}` - \n   *\n   *  - `endDate` – `{date}` - \n   *\n   *  - `make` – `{string}` - \n   *\n   *  - `seats` – `{number}` - \n   *\n   *  - `rentalservice` – `{string}` - \n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * Data properties:\n   *\n   *  - `retval` – `{object}` - \n   */\n  public searchCars(startDate: any, endDate: any, make: any = {}, seats: any = {}, rentalservice: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/cars/searchCars\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof startDate !== 'undefined' && startDate !== null) _urlParams.startDate = startDate;\n    if (typeof endDate !== 'undefined' && endDate !== null) _urlParams.endDate = endDate;\n    if (typeof make !== 'undefined' && make !== null) _urlParams.make = make;\n    if (typeof seats !== 'undefined' && seats !== null) _urlParams.seats = seats;\n    if (typeof rentalservice !== 'undefined' && rentalservice !== null) _urlParams.rentalservice = rentalservice;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `Car`.\n   */\n  public getModelName() {\n    return \"Car\";\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { CarPrice } from '../../models/CarPrice';\nimport { SocketConnection } from '../../sockets/socket.connections';\nimport { RentalService } from '../../models/RentalService';\n\n\n/**\n * Api services for the `CarPrice` model.\n */\n@Injectable()\nexport class CarPriceApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * Fetches belongsTo relation rentalService.\n   *\n   * @param {any} id CarPrice id\n   *\n   * @param {boolean} refresh \n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `CarPrice` object.)\n   * </em>\n   */\n  public getRentalService(id: any, refresh: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/CarPrices/:id/rentalService\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof refresh !== 'undefined' && refresh !== null) _urlParams.refresh = refresh;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Patch an existing model instance or insert a new one into the data source.\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - Model instance data\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `CarPrice` object.)\n   * </em>\n   */\n  public patchOrCreate(data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/CarPrices\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Patch attributes for a model instance and persist it into the data source.\n   *\n   * @param {any} id CarPrice id\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - An object of model property name/value pairs\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `CarPrice` object.)\n   * </em>\n   */\n  public patchAttributes(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/CarPrices/:id\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `CarPrice`.\n   */\n  public getModelName() {\n    return \"CarPrice\";\n  }\n}\n","/* tslint:disable */\r\nimport { Injectable, Inject, Optional } from '@angular/core';\r\nimport { HttpClient, HttpResponse } from '@angular/common/http';\r\nimport { SDKModels } from './SDKModels';\r\nimport { BaseLoopBackApi } from '../core/base.service';\r\nimport { LoopBackConfig } from '../../lb.config';\r\nimport { LoopBackAuth } from '../core/auth.service';\r\nimport { LoopBackFilter,  } from '../../models/BaseModels';\r\nimport { ErrorHandler } from '../core/error.service';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { CarReservation } from '../../models/CarReservation';\r\nimport { SocketConnection } from '../../sockets/socket.connections';\r\n\r\n\r\n/**\r\n * Api services for the `CarReservation` model.\r\n */\r\n@Injectable()\r\nexport class CarReservationApi extends BaseLoopBackApi {\r\n\r\n  constructor(\r\n    @Inject(HttpClient) protected http: HttpClient,\r\n    @Inject(SocketConnection) protected connection: SocketConnection,\r\n    @Inject(SDKModels) protected models: SDKModels,\r\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\r\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\r\n  ) {\r\n    super(http,  connection,  models, auth, errorHandler);\r\n  }\r\n\r\n  /**\r\n   * Patch an existing model instance or insert a new one into the data source.\r\n   *\r\n   * @param {object} data Request data.\r\n   *\r\n   *  - `data` – `{object}` - Model instance data\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `CarReservation` object.)\r\n   * </em>\r\n   */\r\n  public patchOrCreate(data: any = {}, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"PATCH\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/carReservations\";\r\n    let _routeParams: any = {};\r\n    let _postBody: any = {\r\n      data: data\r\n    };\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Patch attributes for a model instance and persist it into the data source.\r\n   *\r\n   * @param {any} id carReservation id\r\n   *\r\n   * @param {object} data Request data.\r\n   *\r\n   *  - `data` – `{object}` - An object of model property name/value pairs\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `CarReservation` object.)\r\n   * </em>\r\n   */\r\n  public patchAttributes(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"PATCH\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/carReservations/:id\";\r\n    let _routeParams: any = {\r\n      id: id\r\n    };\r\n    let _postBody: any = {\r\n      data: data\r\n    };\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * <em>\r\n         * (The remote method definition does not provide any description.)\r\n         * </em>\r\n   *\r\n   * @param {object} data Request data.\r\n   *\r\n   *  - `startDate` – `{date}` - \r\n   *\r\n   *  - `endDate` – `{date}` - \r\n   *\r\n   *  - `carId` – `{string}` - \r\n   *\r\n   *  - `userId` – `{string}` - \r\n   *\r\n   *  - `price` – `{number}` - \r\n   *\r\n   *  - `rentalid` – `{string}` - \r\n   *\r\n   *  - `usePoints` – `{boolean}` - \r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * Data properties:\r\n   *\r\n   *  - `retval` – `{object}` - \r\n   */\r\n  public makeReservation(startDate: any, endDate: any, carId: any, userId: any, price: any, rentalid: any, usePoints: any, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"POST\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/carReservations/makeReservation\";\r\n    let _routeParams: any = {};\r\n    let _postBody: any = {};\r\n    let _urlParams: any = {};\r\n    if (typeof startDate !== 'undefined' && startDate !== null) _urlParams.startDate = startDate;\r\n    if (typeof endDate !== 'undefined' && endDate !== null) _urlParams.endDate = endDate;\r\n    if (typeof carId !== 'undefined' && carId !== null) _urlParams.carId = carId;\r\n    if (typeof userId !== 'undefined' && userId !== null) _urlParams.userId = userId;\r\n    if (typeof price !== 'undefined' && price !== null) _urlParams.price = price;\r\n    if (typeof rentalid !== 'undefined' && rentalid !== null) _urlParams.rentalid = rentalid;\r\n    if (typeof usePoints !== 'undefined' && usePoints !== null) _urlParams.usePoints = usePoints;\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * <em>\r\n         * (The remote method definition does not provide any description.)\r\n         * </em>\r\n   *\r\n   * @param {object} data Request data.\r\n   *\r\n   *  - `id` – `{number}` - \r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * Data properties:\r\n   *\r\n   *  - `retval` – `{object}` - \r\n   */\r\n  public cancel(id: any, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"POST\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/carReservations/cancel\";\r\n    let _routeParams: any = {\r\n\r\n    };\r\n    let _postBody: any = {};\r\n\tlet _urlParams: any = { id: id };\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * <em>\r\n         * (The remote method definition does not provide any description.)\r\n         * </em>\r\n   *\r\n   * @param {object} data Request data.\r\n   *\r\n   *  - `id` – `{number}` - \r\n   *\r\n   *  - `carRate` – `{number}` - \r\n   *\r\n   *  - `rentalRate` – `{number}` - \r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * Data properties:\r\n   *\r\n   *  - `retval` – `{object}` - \r\n   */\r\n  public rateServiceAndCar(id: any, carRate: any, rentalRate: any, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"POST\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/carReservations/rateServiceAndCar\";\r\n    let _routeParams: any = {\r\n\r\n    };\r\n    let _postBody: any = {};\r\n\tlet _urlParams: any = { id: id };\r\n    if (typeof carRate !== 'undefined' && carRate !== null) _urlParams.carRate = carRate;\r\n    if (typeof rentalRate !== 'undefined' && rentalRate !== null) _urlParams.rentalRate = rentalRate;\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * <em>\r\n         * (The remote method definition does not provide any description.)\r\n         * </em>\r\n   *\r\n   * @param {date} startDate \r\n   *\r\n   * @param {date} endDate \r\n   *\r\n   * @param {string} rentalServiceId \r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * Data properties:\r\n   *\r\n   *  - `retval` – `{object}` - \r\n   */\r\n  public getYearlyReport(startDate: any, endDate: any, rentalServiceId: any, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"GET\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/carReservations/getYearlyReport\";\r\n    let _routeParams: any = {};\r\n    let _postBody: any = {};\r\n    let _urlParams: any = {};\r\n    if (typeof startDate !== 'undefined' && startDate !== null) _urlParams.startDate = startDate;\r\n    if (typeof endDate !== 'undefined' && endDate !== null) _urlParams.endDate = endDate;\r\n    if (typeof rentalServiceId !== 'undefined' && rentalServiceId !== null) _urlParams.rentalServiceId = rentalServiceId;\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * <em>\r\n         * (The remote method definition does not provide any description.)\r\n         * </em>\r\n   *\r\n   * @param {object} data Request data.\r\n   *\r\n   *  - `startDate` – `{date}` - \r\n   *\r\n   *  - `endDate` – `{date}` - \r\n   *\r\n   *  - `rentalServiceId` – `{string}` - \r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * Data properties:\r\n   *\r\n   *  - `retval` – `{objects}` - \r\n   */\r\n  public getMonthlyReport(startDate: any, endDate: any, rentalServiceId: any, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"POST\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/carReservations/getMonthlyReport\";\r\n    let _routeParams: any = {};\r\n    let _postBody: any = {};\r\n    let _urlParams: any = {};\r\n    if (typeof startDate !== 'undefined' && startDate !== null) _urlParams.startDate = startDate;\r\n    if (typeof endDate !== 'undefined' && endDate !== null) _urlParams.endDate = endDate;\r\n    if (typeof rentalServiceId !== 'undefined' && rentalServiceId !== null) _urlParams.rentalServiceId = rentalServiceId;\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * <em>\r\n         * (The remote method definition does not provide any description.)\r\n         * </em>\r\n   *\r\n   * @param {object} data Request data.\r\n   *\r\n   *  - `startDate` – `{date}` - \r\n   *\r\n   *  - `endDate` – `{date}` - \r\n   *\r\n   *  - `rentalServiceId` – `{string}` - \r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * Data properties:\r\n   *\r\n   *  - `retval` – `{objects}` - \r\n   */\r\n  public getWeeklyReport(startDate: any, endDate: any, rentalServiceId: any, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"POST\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/carReservations/getWeeklyReport\";\r\n    let _routeParams: any = {};\r\n    let _postBody: any = {};\r\n    let _urlParams: any = {};\r\n    if (typeof startDate !== 'undefined' && startDate !== null) _urlParams.startDate = startDate;\r\n    if (typeof endDate !== 'undefined' && endDate !== null) _urlParams.endDate = endDate;\r\n    if (typeof rentalServiceId !== 'undefined' && rentalServiceId !== null) _urlParams.rentalServiceId = rentalServiceId;\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * <em>\r\n         * (The remote method definition does not provide any description.)\r\n         * </em>\r\n   *\r\n   * @param {date} startDate \r\n   *\r\n   * @param {date} endDate \r\n   *\r\n   * @param {string} rentalServiceId \r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * Data properties:\r\n   *\r\n   *  - `retval` – `{objects}` - \r\n   */\r\n  public getOccupancyReport(startDate: any, endDate: any, rentalServiceId: any, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"GET\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/carReservations/getOccupancyReport\";\r\n    let _routeParams: any = {};\r\n    let _postBody: any = {};\r\n    let _urlParams: any = {};\r\n    if (typeof startDate !== 'undefined' && startDate !== null) _urlParams.startDate = startDate;\r\n    if (typeof endDate !== 'undefined' && endDate !== null) _urlParams.endDate = endDate;\r\n    if (typeof rentalServiceId !== 'undefined' && rentalServiceId !== null) _urlParams.rentalServiceId = rentalServiceId;\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * <em>\r\n         * (The remote method definition does not provide any description.)\r\n         * </em>\r\n   *\r\n   * @param {string} rentalServiceId \r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * Data properties:\r\n   *\r\n   *  - `retval` – `{objects}` - \r\n   */\r\n  public getRatingReport(rentalServiceId: any, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"GET\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/carReservations/getRatingReport\";\r\n    let _routeParams: any = {};\r\n    let _postBody: any = {};\r\n    let _urlParams: any = {};\r\n    if (typeof rentalServiceId !== 'undefined' && rentalServiceId !== null) _urlParams.rentalServiceId = rentalServiceId;\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * The name of the model represented by this $resource,\r\n   * i.e. `CarReservation`.\r\n   */\r\n  public getModelName() {\r\n    return \"CarReservation\";\r\n  }\r\n}\r\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { CarSpecialOffer } from '../../models/CarSpecialOffer';\nimport { SocketConnection } from '../../sockets/socket.connections';\n\n\n/**\n * Api services for the `CarSpecialOffer` model.\n */\n@Injectable()\nexport class CarSpecialOfferApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * Patch an existing model instance or insert a new one into the data source.\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - Model instance data\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `CarSpecialOffer` object.)\n   * </em>\n   */\n  public patchOrCreate(data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/carSpecialOffers\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Patch attributes for a model instance and persist it into the data source.\n   *\n   * @param {any} id carSpecialOffer id\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - An object of model property name/value pairs\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `CarSpecialOffer` object.)\n   * </em>\n   */\n  public patchAttributes(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/carSpecialOffers/:id\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * <em>\n         * (The remote method definition does not provide any description.)\n         * </em>\n   *\n   * @param {object} data Request data.\n   *\n   *  - `startDate` – `{date}` - \n   *\n   *  - `endDate` – `{date}` - \n   *\n   *  - `carId` – `{string}` - \n   *\n   *  - `price` – `{number}` - \n   *\n   *  - `rentalid` – `{string}` - \n   *\n   *  - `discount` – `{number}` - \n   *\n   *  - `registration` – `{string}` - \n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * Data properties:\n   *\n   *  - `retval` – `{object}` - \n   */\n  public makeSpecialOffer(startDate: any, endDate: any, carId: any, price: any, rentalid: any, discount: any, registration: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/carSpecialOffers/makeSpecialOffer\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof startDate !== 'undefined' && startDate !== null) _urlParams.startDate = startDate;\n    if (typeof endDate !== 'undefined' && endDate !== null) _urlParams.endDate = endDate;\n    if (typeof carId !== 'undefined' && carId !== null) _urlParams.carId = carId;\n    if (typeof price !== 'undefined' && price !== null) _urlParams.price = price;\n    if (typeof rentalid !== 'undefined' && rentalid !== null) _urlParams.rentalid = rentalid;\n    if (typeof discount !== 'undefined' && discount !== null) _urlParams.discount = discount;\n    if (typeof registration !== 'undefined' && registration !== null) _urlParams.registration = registration;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * <em>\n         * (The remote method definition does not provide any description.)\n         * </em>\n   *\n   * @param {object} data Request data.\n   *\n   *  - `carId` – `{string}` - \n   *\n   *  - `specialOfferId` – `{string}` - \n   *\n   *  - `userId` – `{string}` - \n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * Data properties:\n   *\n   *  - `retval` – `{object}` - \n   */\n  public quicklyReserve(carId: any, specialOfferId: any, userId: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/carSpecialOffers/quicklyReserve\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof carId !== 'undefined' && carId !== null) _urlParams.carId = carId;\n    if (typeof specialOfferId !== 'undefined' && specialOfferId !== null) _urlParams.specialOfferId = specialOfferId;\n    if (typeof userId !== 'undefined' && userId !== null) _urlParams.userId = userId;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * <em>\n         * (The remote method definition does not provide any description.)\n         * </em>\n   *\n   * @param {date} startDate \n   *\n   * @param {string} registration \n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * Data properties:\n   *\n   *  - `retval` – `{object}` - \n   */\n  public removeOffer(startDate: any, registration: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"DELETE\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/carSpecialOffers/removeSpecialOffer\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof startDate !== 'undefined' && startDate !== null) _urlParams.startDate = startDate;\n    if (typeof registration !== 'undefined' && registration !== null) _urlParams.registration = registration;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * <em>\n         * (The remote method definition does not provide any description.)\n         * </em>\n   *\n   * @param {object} data Request data.\n   *\n   *  - `startDate` – `{date}` - \n   *\n   *  - `registration` – `{string}` - \n   *\n   *  - `newDiscount` – `{number}` - \n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * Data properties:\n   *\n   *  - `retval` – `{object}` - \n   */\n  public changeOffer(startDate: any, registration: any, newDiscount: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PUT\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/carSpecialOffers/changeSpecialOffer\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof startDate !== 'undefined' && startDate !== null) _urlParams.startDate = startDate;\n    if (typeof registration !== 'undefined' && registration !== null) _urlParams.registration = registration;\n    if (typeof newDiscount !== 'undefined' && newDiscount !== null) _urlParams.newDiscount = newDiscount;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `CarSpecialOffer`.\n   */\n  public getModelName() {\n    return \"CarSpecialOffer\";\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Carid } from '../../models/Carid';\nimport { SocketConnection } from '../../sockets/socket.connections';\nimport { Car } from '../../models/Car';\n\n\n/**\n * Api services for the `Carid` model.\n */\n@Injectable()\nexport class CaridApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * Fetches belongsTo relation car.\n   *\n   * @param {any} id carid id\n   *\n   * @param {boolean} refresh \n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Carid` object.)\n   * </em>\n   */\n  public getCar(id: any, refresh: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/carids/:id/car\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof refresh !== 'undefined' && refresh !== null) _urlParams.refresh = refresh;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Patch an existing model instance or insert a new one into the data source.\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - Model instance data\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Carid` object.)\n   * </em>\n   */\n  public patchOrCreate(data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/carids\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Patch attributes for a model instance and persist it into the data source.\n   *\n   * @param {any} id carid id\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - An object of model property name/value pairs\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Carid` object.)\n   * </em>\n   */\n  public patchAttributes(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/carids/:id\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `Carid`.\n   */\n  public getModelName() {\n    return \"Carid\";\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Email } from '../../models/Email';\nimport { SocketConnection } from '../../sockets/socket.connections';\n\n\n/**\n * Api services for the `Email` model.\n */\n@Injectable()\nexport class EmailApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `Email`.\n   */\n  public getModelName() {\n    return \"Email\";\n  }\n}\n","/* tslint:disable */\r\nimport { Injectable, Inject, Optional } from '@angular/core';\r\nimport { HttpClient, HttpResponse } from '@angular/common/http';\r\nimport { SDKModels } from './SDKModels';\r\nimport { BaseLoopBackApi } from '../core/base.service';\r\nimport { LoopBackConfig } from '../../lb.config';\r\nimport { LoopBackAuth } from '../core/auth.service';\r\nimport { LoopBackFilter,  } from '../../models/BaseModels';\r\nimport { ErrorHandler } from '../core/error.service';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { Flight } from '../../models/Flight';\r\nimport { SocketConnection } from '../../sockets/socket.connections';\r\nimport { Airline } from '../../models/Airline';\r\nimport { Seat } from '../../models/Seat';\r\n\r\n\r\n/**\r\n * Api services for the `Flight` model.\r\n */\r\n@Injectable()\r\nexport class FlightApi extends BaseLoopBackApi {\r\n\r\n  constructor(\r\n    @Inject(HttpClient) protected http: HttpClient,\r\n    @Inject(SocketConnection) protected connection: SocketConnection,\r\n    @Inject(SDKModels) protected models: SDKModels,\r\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\r\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\r\n  ) {\r\n    super(http,  connection,  models, auth, errorHandler);\r\n  }\r\n\r\n  /**\r\n   * Fetches belongsTo relation airline.\r\n   *\r\n   * @param {any} id flight id\r\n   *\r\n   * @param {boolean} refresh \r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `Flight` object.)\r\n   * </em>\r\n   */\r\n  public getAirline(id: any, refresh: any = {}, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"GET\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/flights/:id/airline\";\r\n    let _routeParams: any = {\r\n      id: id\r\n    };\r\n    let _postBody: any = {};\r\n    let _urlParams: any = {};\r\n    if (typeof refresh !== 'undefined' && refresh !== null) _urlParams.refresh = refresh;\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Find a related item by id for seats.\r\n   *\r\n   * @param {any} id flight id\r\n   *\r\n   * @param {any} fk Foreign key for seats\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `Flight` object.)\r\n   * </em>\r\n   */\r\n  public findByIdSeats(id: any, fk: any, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"GET\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/flights/:id/seats/:fk\";\r\n    let _routeParams: any = {\r\n      id: id,\r\n      fk: fk\r\n    };\r\n    let _postBody: any = {};\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Delete a related item by id for seats.\r\n   *\r\n   * @param {any} id flight id\r\n   *\r\n   * @param {any} fk Foreign key for seats\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * This method returns no data.\r\n   */\r\n  public destroyByIdSeats(id: any, fk: any, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"DELETE\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/flights/:id/seats/:fk\";\r\n    let _routeParams: any = {\r\n      id: id,\r\n      fk: fk\r\n    };\r\n    let _postBody: any = {};\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Update a related item by id for seats.\r\n   *\r\n   * @param {any} id flight id\r\n   *\r\n   * @param {any} fk Foreign key for seats\r\n   *\r\n   * @param {object} data Request data.\r\n   *\r\n   * This method expects a subset of model properties as request parameters.\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `Flight` object.)\r\n   * </em>\r\n   */\r\n  public updateByIdSeats(id: any, fk: any, data: any = {}, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"PUT\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/flights/:id/seats/:fk\";\r\n    let _routeParams: any = {\r\n      id: id,\r\n      fk: fk\r\n    };\r\n    let _postBody: any = {\r\n      data: data\r\n    };\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Queries seats of flight.\r\n   *\r\n   * @param {any} id flight id\r\n   *\r\n   * @param {object} filter \r\n   *\r\n   * @returns {object[]} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `Flight` object.)\r\n   * </em>\r\n   */\r\n  public getSeats(id: any, filter: LoopBackFilter = {}, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"GET\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/flights/:id/seats\";\r\n    let _routeParams: any = {\r\n      id: id\r\n    };\r\n    let _postBody: any = {};\r\n    let _urlParams: any = {};\r\n    if (typeof filter !== 'undefined' && filter !== null) _urlParams.filter = filter;\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Creates a new instance in seats of this model.\r\n   *\r\n   * @param {any} id flight id\r\n   *\r\n   * @param {object} data Request data.\r\n   *\r\n   * This method expects a subset of model properties as request parameters.\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `Flight` object.)\r\n   * </em>\r\n   */\r\n  public createSeats(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"POST\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/flights/:id/seats\";\r\n    let _routeParams: any = {\r\n      id: id\r\n    };\r\n    let _postBody: any = {\r\n      data: data\r\n    };\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Deletes all seats of this model.\r\n   *\r\n   * @param {any} id flight id\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * This method returns no data.\r\n   */\r\n  public deleteSeats(id: any, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"DELETE\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/flights/:id/seats\";\r\n    let _routeParams: any = {\r\n      id: id\r\n    };\r\n    let _postBody: any = {};\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Counts seats of flight.\r\n   *\r\n   * @param {any} id flight id\r\n   *\r\n   * @param {object} where Criteria to match model instances\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * Data properties:\r\n   *\r\n   *  - `count` – `{number}` - \r\n   */\r\n  public countSeats(id: any, where: any = {}, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"GET\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/flights/:id/seats/count\";\r\n    let _routeParams: any = {\r\n      id: id\r\n    };\r\n    let _postBody: any = {};\r\n    let _urlParams: any = {};\r\n    if (typeof where !== 'undefined' && where !== null) _urlParams.where = where;\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Patch an existing model instance or insert a new one into the data source.\r\n   *\r\n   * @param {object} data Request data.\r\n   *\r\n   *  - `data` – `{object}` - Model instance data\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `Flight` object.)\r\n   * </em>\r\n   */\r\n  public patchOrCreate(data: any = {}, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"PATCH\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/flights\";\r\n    let _routeParams: any = {};\r\n    let _postBody: any = {\r\n      data: data\r\n    };\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Patch attributes for a model instance and persist it into the data source.\r\n   *\r\n   * @param {any} id flight id\r\n   *\r\n   * @param {object} data Request data.\r\n   *\r\n   *  - `data` – `{object}` - An object of model property name/value pairs\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `Flight` object.)\r\n   * </em>\r\n   */\r\n  public patchAttributes(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"PATCH\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/flights/:id\";\r\n    let _routeParams: any = {\r\n      id: id\r\n    };\r\n    let _postBody: any = {\r\n      data: data\r\n    };\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * <em>\r\n         * (The remote method definition does not provide any description.)\r\n         * </em>\r\n   *\r\n   * @param {string} origin \r\n   *\r\n   * @param {string} destination \r\n   *\r\n   * @param {string} takeoffDate \r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * Data properties:\r\n   *\r\n   *  - `retval` – `{object}` - \r\n   */\r\n  public findAvailableFlights(origin: any, destination: any, takeoffDate: any, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"GET\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/flights/findAvailableFlights\";\r\n    let _routeParams: any = {};\r\n    let _postBody: any = {};\r\n    let _urlParams: any = {};\r\n    if (typeof origin !== 'undefined' && origin !== null) _urlParams.origin = origin;\r\n    if (typeof destination !== 'undefined' && destination !== null) _urlParams.destination = destination;\r\n    if (typeof takeoffDate !== 'undefined' && takeoffDate !== null) _urlParams.takeoffDate = takeoffDate;\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n\treturn result;\r\n  }\r\n\r\n  /**\r\n   * <em>\r\n         * (The remote method definition does not provide any description.)\r\n         * </em>\r\n   *\r\n   * @param {string} flightId \r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * Data properties:\r\n   *\r\n   *  - `retval` – `{object}` - \r\n   */\r\n  public findAvailableSeats(flightId: any, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"GET\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/flights/findAvailableSeats\";\r\n    let _routeParams: any = {};\r\n    let _postBody: any = {};\r\n    let _urlParams: any = {};\r\n    if (typeof flightId !== 'undefined' && flightId !== null) _urlParams.flightId = flightId;\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n\treturn result;\r\n  }\r\n\r\n  /**\r\n   * Creates a new instance in seats of this model.\r\n   *\r\n   * @param {any} id flight id\r\n   *\r\n   * @param {object} data Request data.\r\n   *\r\n   * This method expects a subset of model properties as request parameters.\r\n   *\r\n   * @returns {object[]} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `Flight` object.)\r\n   * </em>\r\n   */\r\n  public createManySeats(id: any, data: any[] = [], customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"POST\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/flights/:id/seats\";\r\n    let _routeParams: any = {\r\n      id: id\r\n    };\r\n    let _postBody: any = {\r\n      data: data\r\n    };\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * The name of the model represented by this $resource,\r\n   * i.e. `Flight`.\r\n   */\r\n  public getModelName() {\r\n    return \"Flight\";\r\n  }\r\n}\r\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Friendship } from '../../models/Friendship';\nimport { SocketConnection } from '../../sockets/socket.connections';\n\n\n/**\n * Api services for the `Friendship` model.\n */\n@Injectable()\nexport class FriendshipApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * Patch an existing model instance or insert a new one into the data source.\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - Model instance data\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Friendship` object.)\n   * </em>\n   */\n  public patchOrCreate(data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/friendships\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Patch attributes for a model instance and persist it into the data source.\n   *\n   * @param {any} id friendship id\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - An object of model property name/value pairs\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Friendship` object.)\n   * </em>\n   */\n  public patchAttributes(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/friendships/:id\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `Friendship`.\n   */\n  public getModelName() {\n    return \"Friendship\";\n  }\n}\n","/* tslint:disable */\r\nimport { Injectable, Inject, Optional } from '@angular/core';\r\nimport { HttpClient, HttpResponse } from '@angular/common/http';\r\nimport { SDKModels } from './SDKModels';\r\nimport { BaseLoopBackApi } from '../core/base.service';\r\nimport { LoopBackConfig } from '../../lb.config';\r\nimport { LoopBackAuth } from '../core/auth.service';\r\nimport { LoopBackFilter,  } from '../../models/BaseModels';\r\nimport { ErrorHandler } from '../core/error.service';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { Hotel } from '../../models/Hotel';\r\nimport { SocketConnection } from '../../sockets/socket.connections';\r\nimport { Room } from '../../models/Room';\r\nimport { RoomPrice } from '../../models/RoomPrice';\r\nimport { HotelSpecialOffer } from '../../models/HotelSpecialOffer';\r\nimport { HotelDiscount } from '../../models/HotelDiscount';\r\nimport { Location } from '../../models/Location';\r\n\r\n\r\n/**\r\n * Api services for the `Hotel` model.\r\n */\r\n@Injectable()\r\nexport class HotelApi extends BaseLoopBackApi {\r\n\r\n  constructor(\r\n    @Inject(HttpClient) protected http: HttpClient,\r\n    @Inject(SocketConnection) protected connection: SocketConnection,\r\n    @Inject(SDKModels) protected models: SDKModels,\r\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\r\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\r\n  ) {\r\n    super(http,  connection,  models, auth, errorHandler);\r\n  }\r\n\r\n  /**\r\n   * Find a related item by id for rooms.\r\n   *\r\n   * @param {any} id hotel id\r\n   *\r\n   * @param {any} fk Foreign key for rooms\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `Hotel` object.)\r\n   * </em>\r\n   */\r\n  public findByIdRooms(id: any, fk: any, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"GET\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/hotels/:id/rooms/:fk\";\r\n    let _routeParams: any = {\r\n      id: id,\r\n      fk: fk\r\n    };\r\n    let _postBody: any = {};\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Delete a related item by id for rooms.\r\n   *\r\n   * @param {any} id hotel id\r\n   *\r\n   * @param {any} fk Foreign key for rooms\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * This method returns no data.\r\n   */\r\n  public destroyByIdRooms(id: any, fk: any, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"DELETE\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/hotels/:id/rooms/:fk\";\r\n    let _routeParams: any = {\r\n      id: id,\r\n      fk: fk\r\n    };\r\n    let _postBody: any = {};\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Update a related item by id for rooms.\r\n   *\r\n   * @param {any} id hotel id\r\n   *\r\n   * @param {any} fk Foreign key for rooms\r\n   *\r\n   * @param {object} data Request data.\r\n   *\r\n   * This method expects a subset of model properties as request parameters.\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `Hotel` object.)\r\n   * </em>\r\n   */\r\n  public updateByIdRooms(id: any, fk: any, data: any = {}, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"PUT\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/hotels/:id/rooms/:fk\";\r\n    let _routeParams: any = {\r\n      id: id,\r\n      fk: fk\r\n    };\r\n    let _postBody: any = {\r\n      data: data\r\n    };\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Find a related item by id for roomPrices.\r\n   *\r\n   * @param {any} id hotel id\r\n   *\r\n   * @param {any} fk Foreign key for roomPrices\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `Hotel` object.)\r\n   * </em>\r\n   */\r\n  public findByIdRoomPrices(id: any, fk: any, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"GET\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/hotels/:id/roomPrices/:fk\";\r\n    let _routeParams: any = {\r\n      id: id,\r\n      fk: fk\r\n    };\r\n    let _postBody: any = {};\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Delete a related item by id for roomPrices.\r\n   *\r\n   * @param {any} id hotel id\r\n   *\r\n   * @param {any} fk Foreign key for roomPrices\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * This method returns no data.\r\n   */\r\n  public destroyByIdRoomPrices(id: any, fk: any, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"DELETE\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/hotels/:id/roomPrices/:fk\";\r\n    let _routeParams: any = {\r\n      id: id,\r\n      fk: fk\r\n    };\r\n    let _postBody: any = {};\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Update a related item by id for roomPrices.\r\n   *\r\n   * @param {any} id hotel id\r\n   *\r\n   * @param {any} fk Foreign key for roomPrices\r\n   *\r\n   * @param {object} data Request data.\r\n   *\r\n   * This method expects a subset of model properties as request parameters.\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `Hotel` object.)\r\n   * </em>\r\n   */\r\n  public updateByIdRoomPrices(id: any, fk: any, data: any = {}, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"PUT\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/hotels/:id/roomPrices/:fk\";\r\n    let _routeParams: any = {\r\n      id: id,\r\n      fk: fk\r\n    };\r\n    let _postBody: any = {\r\n      data: data\r\n    };\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Find a related item by id for hotelSpecialOffers.\r\n   *\r\n   * @param {any} id hotel id\r\n   *\r\n   * @param {any} fk Foreign key for hotelSpecialOffers\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `Hotel` object.)\r\n   * </em>\r\n   */\r\n  public findByIdHotelSpecialOffers(id: any, fk: any, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"GET\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/hotels/:id/hotelSpecialOffers/:fk\";\r\n    let _routeParams: any = {\r\n      id: id,\r\n      fk: fk\r\n    };\r\n    let _postBody: any = {};\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Delete a related item by id for hotelSpecialOffers.\r\n   *\r\n   * @param {any} id hotel id\r\n   *\r\n   * @param {any} fk Foreign key for hotelSpecialOffers\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * This method returns no data.\r\n   */\r\n  public destroyByIdHotelSpecialOffers(id: any, fk: any, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"DELETE\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/hotels/:id/hotelSpecialOffers/:fk\";\r\n    let _routeParams: any = {\r\n      id: id,\r\n      fk: fk\r\n    };\r\n    let _postBody: any = {};\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Update a related item by id for hotelSpecialOffers.\r\n   *\r\n   * @param {any} id hotel id\r\n   *\r\n   * @param {any} fk Foreign key for hotelSpecialOffers\r\n   *\r\n   * @param {object} data Request data.\r\n   *\r\n   * This method expects a subset of model properties as request parameters.\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `Hotel` object.)\r\n   * </em>\r\n   */\r\n  public updateByIdHotelSpecialOffers(id: any, fk: any, data: any = {}, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"PUT\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/hotels/:id/hotelSpecialOffers/:fk\";\r\n    let _routeParams: any = {\r\n      id: id,\r\n      fk: fk\r\n    };\r\n    let _postBody: any = {\r\n      data: data\r\n    };\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Find a related item by id for hotelDiscounts.\r\n   *\r\n   * @param {any} id hotel id\r\n   *\r\n   * @param {any} fk Foreign key for hotelDiscounts\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `Hotel` object.)\r\n   * </em>\r\n   */\r\n  public findByIdHotelDiscounts(id: any, fk: any, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"GET\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/hotels/:id/hotelDiscounts/:fk\";\r\n    let _routeParams: any = {\r\n      id: id,\r\n      fk: fk\r\n    };\r\n    let _postBody: any = {};\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Delete a related item by id for hotelDiscounts.\r\n   *\r\n   * @param {any} id hotel id\r\n   *\r\n   * @param {any} fk Foreign key for hotelDiscounts\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * This method returns no data.\r\n   */\r\n  public destroyByIdHotelDiscounts(id: any, fk: any, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"DELETE\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/hotels/:id/hotelDiscounts/:fk\";\r\n    let _routeParams: any = {\r\n      id: id,\r\n      fk: fk\r\n    };\r\n    let _postBody: any = {};\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Update a related item by id for hotelDiscounts.\r\n   *\r\n   * @param {any} id hotel id\r\n   *\r\n   * @param {any} fk Foreign key for hotelDiscounts\r\n   *\r\n   * @param {object} data Request data.\r\n   *\r\n   * This method expects a subset of model properties as request parameters.\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `Hotel` object.)\r\n   * </em>\r\n   */\r\n  public updateByIdHotelDiscounts(id: any, fk: any, data: any = {}, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"PUT\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/hotels/:id/hotelDiscounts/:fk\";\r\n    let _routeParams: any = {\r\n      id: id,\r\n      fk: fk\r\n    };\r\n    let _postBody: any = {\r\n      data: data\r\n    };\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Fetches belongsTo relation location.\r\n   *\r\n   * @param {any} id hotel id\r\n   *\r\n   * @param {boolean} refresh \r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `Hotel` object.)\r\n   * </em>\r\n   */\r\n  public getLocation(id: any, refresh: any = {}, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"GET\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/hotels/:id/location\";\r\n    let _routeParams: any = {\r\n      id: id\r\n    };\r\n    let _postBody: any = {};\r\n    let _urlParams: any = {};\r\n    if (typeof refresh !== 'undefined' && refresh !== null) _urlParams.refresh = refresh;\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Queries rooms of hotel.\r\n   *\r\n   * @param {any} id hotel id\r\n   *\r\n   * @param {object} filter \r\n   *\r\n   * @returns {object[]} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `Hotel` object.)\r\n   * </em>\r\n   */\r\n  public getRooms(id: any, filter: LoopBackFilter = {}, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"GET\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/hotels/:id/rooms\";\r\n    let _routeParams: any = {\r\n      id: id\r\n    };\r\n    let _postBody: any = {};\r\n    let _urlParams: any = {};\r\n    if (typeof filter !== 'undefined' && filter !== null) _urlParams.filter = filter;\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Creates a new instance in rooms of this model.\r\n   *\r\n   * @param {any} id hotel id\r\n   *\r\n   * @param {object} data Request data.\r\n   *\r\n   * This method expects a subset of model properties as request parameters.\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `Hotel` object.)\r\n   * </em>\r\n   */\r\n  public createRooms(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"POST\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/hotels/:id/rooms\";\r\n    let _routeParams: any = {\r\n      id: id\r\n    };\r\n    let _postBody: any = {\r\n      data: data\r\n    };\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Deletes all rooms of this model.\r\n   *\r\n   * @param {any} id hotel id\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * This method returns no data.\r\n   */\r\n  public deleteRooms(id: any, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"DELETE\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/hotels/:id/rooms\";\r\n    let _routeParams: any = {\r\n      id: id\r\n    };\r\n    let _postBody: any = {};\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Counts rooms of hotel.\r\n   *\r\n   * @param {any} id hotel id\r\n   *\r\n   * @param {object} where Criteria to match model instances\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * Data properties:\r\n   *\r\n   *  - `count` – `{number}` - \r\n   */\r\n  public countRooms(id: any, where: any = {}, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"GET\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/hotels/:id/rooms/count\";\r\n    let _routeParams: any = {\r\n      id: id\r\n    };\r\n    let _postBody: any = {};\r\n    let _urlParams: any = {};\r\n    if (typeof where !== 'undefined' && where !== null) _urlParams.where = where;\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Queries roomPrices of hotel.\r\n   *\r\n   * @param {any} id hotel id\r\n   *\r\n   * @param {object} filter \r\n   *\r\n   * @returns {object[]} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `Hotel` object.)\r\n   * </em>\r\n   */\r\n  public getRoomPrices(id: any, filter: LoopBackFilter = {}, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"GET\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/hotels/:id/roomPrices\";\r\n    let _routeParams: any = {\r\n      id: id\r\n    };\r\n    let _postBody: any = {};\r\n    let _urlParams: any = {};\r\n    if (typeof filter !== 'undefined' && filter !== null) _urlParams.filter = filter;\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Creates a new instance in roomPrices of this model.\r\n   *\r\n   * @param {any} id hotel id\r\n   *\r\n   * @param {object} data Request data.\r\n   *\r\n   * This method expects a subset of model properties as request parameters.\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `Hotel` object.)\r\n   * </em>\r\n   */\r\n  public createRoomPrices(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"POST\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/hotels/:id/roomPrices\";\r\n    let _routeParams: any = {\r\n      id: id\r\n    };\r\n    let _postBody: any = {\r\n      data: data\r\n    };\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Deletes all roomPrices of this model.\r\n   *\r\n   * @param {any} id hotel id\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * This method returns no data.\r\n   */\r\n  public deleteRoomPrices(id: any, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"DELETE\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/hotels/:id/roomPrices\";\r\n    let _routeParams: any = {\r\n      id: id\r\n    };\r\n    let _postBody: any = {};\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Counts roomPrices of hotel.\r\n   *\r\n   * @param {any} id hotel id\r\n   *\r\n   * @param {object} where Criteria to match model instances\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * Data properties:\r\n   *\r\n   *  - `count` – `{number}` - \r\n   */\r\n  public countRoomPrices(id: any, where: any = {}, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"GET\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/hotels/:id/roomPrices/count\";\r\n    let _routeParams: any = {\r\n      id: id\r\n    };\r\n    let _postBody: any = {};\r\n    let _urlParams: any = {};\r\n    if (typeof where !== 'undefined' && where !== null) _urlParams.where = where;\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Queries hotelSpecialOffers of hotel.\r\n   *\r\n   * @param {any} id hotel id\r\n   *\r\n   * @param {object} filter \r\n   *\r\n   * @returns {object[]} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `Hotel` object.)\r\n   * </em>\r\n   */\r\n  public getHotelSpecialOffers(id: any, filter: LoopBackFilter = {}, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"GET\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/hotels/:id/hotelSpecialOffers\";\r\n    let _routeParams: any = {\r\n      id: id\r\n    };\r\n    let _postBody: any = {};\r\n    let _urlParams: any = {};\r\n    if (typeof filter !== 'undefined' && filter !== null) _urlParams.filter = filter;\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Creates a new instance in hotelSpecialOffers of this model.\r\n   *\r\n   * @param {any} id hotel id\r\n   *\r\n   * @param {object} data Request data.\r\n   *\r\n   * This method expects a subset of model properties as request parameters.\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `Hotel` object.)\r\n   * </em>\r\n   */\r\n  public createHotelSpecialOffers(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"POST\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/hotels/:id/hotelSpecialOffers\";\r\n    let _routeParams: any = {\r\n      id: id\r\n    };\r\n    let _postBody: any = {\r\n      data: data\r\n    };\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Deletes all hotelSpecialOffers of this model.\r\n   *\r\n   * @param {any} id hotel id\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * This method returns no data.\r\n   */\r\n  public deleteHotelSpecialOffers(id: any, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"DELETE\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/hotels/:id/hotelSpecialOffers\";\r\n    let _routeParams: any = {\r\n      id: id\r\n    };\r\n    let _postBody: any = {};\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Counts hotelSpecialOffers of hotel.\r\n   *\r\n   * @param {any} id hotel id\r\n   *\r\n   * @param {object} where Criteria to match model instances\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * Data properties:\r\n   *\r\n   *  - `count` – `{number}` - \r\n   */\r\n  public countHotelSpecialOffers(id: any, where: any = {}, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"GET\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/hotels/:id/hotelSpecialOffers/count\";\r\n    let _routeParams: any = {\r\n      id: id\r\n    };\r\n    let _postBody: any = {};\r\n    let _urlParams: any = {};\r\n    if (typeof where !== 'undefined' && where !== null) _urlParams.where = where;\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Queries hotelDiscounts of hotel.\r\n   *\r\n   * @param {any} id hotel id\r\n   *\r\n   * @param {object} filter \r\n   *\r\n   * @returns {object[]} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `Hotel` object.)\r\n   * </em>\r\n   */\r\n  public getHotelDiscounts(id: any, filter: LoopBackFilter = {}, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"GET\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/hotels/:id/hotelDiscounts\";\r\n    let _routeParams: any = {\r\n      id: id\r\n    };\r\n    let _postBody: any = {};\r\n    let _urlParams: any = {};\r\n    if (typeof filter !== 'undefined' && filter !== null) _urlParams.filter = filter;\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Creates a new instance in hotelDiscounts of this model.\r\n   *\r\n   * @param {any} id hotel id\r\n   *\r\n   * @param {object} data Request data.\r\n   *\r\n   * This method expects a subset of model properties as request parameters.\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `Hotel` object.)\r\n   * </em>\r\n   */\r\n  public createHotelDiscounts(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"POST\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/hotels/:id/hotelDiscounts\";\r\n    let _routeParams: any = {\r\n      id: id\r\n    };\r\n    let _postBody: any = {\r\n      data: data\r\n    };\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Deletes all hotelDiscounts of this model.\r\n   *\r\n   * @param {any} id hotel id\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * This method returns no data.\r\n   */\r\n  public deleteHotelDiscounts(id: any, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"DELETE\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/hotels/:id/hotelDiscounts\";\r\n    let _routeParams: any = {\r\n      id: id\r\n    };\r\n    let _postBody: any = {};\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Counts hotelDiscounts of hotel.\r\n   *\r\n   * @param {any} id hotel id\r\n   *\r\n   * @param {object} where Criteria to match model instances\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * Data properties:\r\n   *\r\n   *  - `count` – `{number}` - \r\n   */\r\n  public countHotelDiscounts(id: any, where: any = {}, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"GET\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/hotels/:id/hotelDiscounts/count\";\r\n    let _routeParams: any = {\r\n      id: id\r\n    };\r\n    let _postBody: any = {};\r\n    let _urlParams: any = {};\r\n    if (typeof where !== 'undefined' && where !== null) _urlParams.where = where;\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Patch an existing model instance or insert a new one into the data source.\r\n   *\r\n   * @param {object} data Request data.\r\n   *\r\n   *  - `data` – `{object}` - Model instance data\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `Hotel` object.)\r\n   * </em>\r\n   */\r\n  public patchOrCreate(data: any = {}, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"PATCH\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/hotels\";\r\n    let _routeParams: any = {};\r\n    let _postBody: any = {\r\n      data: data\r\n    };\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Patch attributes for a model instance and persist it into the data source.\r\n   *\r\n   * @param {any} id hotel id\r\n   *\r\n   * @param {object} data Request data.\r\n   *\r\n   *  - `data` – `{object}` - An object of model property name/value pairs\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `Hotel` object.)\r\n   * </em>\r\n   */\r\n  public patchAttributes(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"PATCH\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/hotels/:id\";\r\n    let _routeParams: any = {\r\n      id: id\r\n    };\r\n    let _postBody: any = {\r\n      data: data\r\n    };\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Creates a new instance in rooms of this model.\r\n   *\r\n   * @param {any} id hotel id\r\n   *\r\n   * @param {object} data Request data.\r\n   *\r\n   * This method expects a subset of model properties as request parameters.\r\n   *\r\n   * @returns {object[]} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `Hotel` object.)\r\n   * </em>\r\n   */\r\n  public createManyRooms(id: any, data: any[] = [], customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"POST\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/hotels/:id/rooms\";\r\n    let _routeParams: any = {\r\n      id: id\r\n    };\r\n    let _postBody: any = {\r\n      data: data\r\n    };\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Creates a new instance in roomPrices of this model.\r\n   *\r\n   * @param {any} id hotel id\r\n   *\r\n   * @param {object} data Request data.\r\n   *\r\n   * This method expects a subset of model properties as request parameters.\r\n   *\r\n   * @returns {object[]} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `Hotel` object.)\r\n   * </em>\r\n   */\r\n  public createManyRoomPrices(id: any, data: any[] = [], customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"POST\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/hotels/:id/roomPrices\";\r\n    let _routeParams: any = {\r\n      id: id\r\n    };\r\n    let _postBody: any = {\r\n      data: data\r\n    };\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Creates a new instance in hotelSpecialOffers of this model.\r\n   *\r\n   * @param {any} id hotel id\r\n   *\r\n   * @param {object} data Request data.\r\n   *\r\n   * This method expects a subset of model properties as request parameters.\r\n   *\r\n   * @returns {object[]} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `Hotel` object.)\r\n   * </em>\r\n   */\r\n  public createManyHotelSpecialOffers(id: any, data: any[] = [], customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"POST\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/hotels/:id/hotelSpecialOffers\";\r\n    let _routeParams: any = {\r\n      id: id\r\n    };\r\n    let _postBody: any = {\r\n      data: data\r\n    };\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Creates a new instance in hotelDiscounts of this model.\r\n   *\r\n   * @param {any} id hotel id\r\n   *\r\n   * @param {object} data Request data.\r\n   *\r\n   * This method expects a subset of model properties as request parameters.\r\n   *\r\n   * @returns {object[]} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `Hotel` object.)\r\n   * </em>\r\n   */\r\n  public createManyHotelDiscounts(id: any, data: any[] = [], customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"POST\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/hotels/:id/hotelDiscounts\";\r\n    let _routeParams: any = {\r\n      id: id\r\n    };\r\n    let _postBody: any = {\r\n      data: data\r\n    };\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * The name of the model represented by this $resource,\r\n   * i.e. `Hotel`.\r\n   */\r\n  public getModelName() {\r\n    return \"Hotel\";\r\n  }\r\n}\r\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { HotelDiscount } from '../../models/HotelDiscount';\nimport { SocketConnection } from '../../sockets/socket.connections';\nimport { Hotel } from '../../models/Hotel';\nimport { Room } from '../../models/Room';\n\n\n/**\n * Api services for the `HotelDiscount` model.\n */\n@Injectable()\nexport class HotelDiscountApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * Fetches belongsTo relation hotel.\n   *\n   * @param {any} id hotelDiscount id\n   *\n   * @param {boolean} refresh \n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `HotelDiscount` object.)\n   * </em>\n   */\n  public getHotel(id: any, refresh: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/hotelDiscounts/:id/hotel\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof refresh !== 'undefined' && refresh !== null) _urlParams.refresh = refresh;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Fetches belongsTo relation room.\n   *\n   * @param {any} id hotelDiscount id\n   *\n   * @param {boolean} refresh \n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `HotelDiscount` object.)\n   * </em>\n   */\n  public getRoom(id: any, refresh: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/hotelDiscounts/:id/room\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof refresh !== 'undefined' && refresh !== null) _urlParams.refresh = refresh;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Patch an existing model instance or insert a new one into the data source.\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - Model instance data\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `HotelDiscount` object.)\n   * </em>\n   */\n  public patchOrCreate(data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/hotelDiscounts\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Patch attributes for a model instance and persist it into the data source.\n   *\n   * @param {any} id hotelDiscount id\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - An object of model property name/value pairs\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `HotelDiscount` object.)\n   * </em>\n   */\n  public patchAttributes(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/hotelDiscounts/:id\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `HotelDiscount`.\n   */\n  public getModelName() {\n    return \"HotelDiscount\";\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { HotelSpecialOffer } from '../../models/HotelSpecialOffer';\nimport { SocketConnection } from '../../sockets/socket.connections';\nimport { Hotel } from '../../models/Hotel';\n\n\n/**\n * Api services for the `HotelSpecialOffer` model.\n */\n@Injectable()\nexport class HotelSpecialOfferApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * Fetches belongsTo relation hotel.\n   *\n   * @param {any} id hotelSpecialOffer id\n   *\n   * @param {boolean} refresh \n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `HotelSpecialOffer` object.)\n   * </em>\n   */\n  public getHotel(id: any, refresh: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/hotelSpecialOffers/:id/hotel\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof refresh !== 'undefined' && refresh !== null) _urlParams.refresh = refresh;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Patch an existing model instance or insert a new one into the data source.\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - Model instance data\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `HotelSpecialOffer` object.)\n   * </em>\n   */\n  public patchOrCreate(data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/hotelSpecialOffers\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Patch attributes for a model instance and persist it into the data source.\n   *\n   * @param {any} id hotelSpecialOffer id\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - An object of model property name/value pairs\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `HotelSpecialOffer` object.)\n   * </em>\n   */\n  public patchAttributes(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/hotelSpecialOffers/:id\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `HotelSpecialOffer`.\n   */\n  public getModelName() {\n    return \"HotelSpecialOffer\";\n  }\n}\n","/* tslint:disable */\r\nimport { Injectable, Inject, Optional } from '@angular/core';\r\nimport { HttpClient, HttpResponse } from '@angular/common/http';\r\nimport { SDKModels } from './SDKModels';\r\nimport { BaseLoopBackApi } from '../core/base.service';\r\nimport { LoopBackConfig } from '../../lb.config';\r\nimport { LoopBackAuth } from '../core/auth.service';\r\nimport { LoopBackFilter,  } from '../../models/BaseModels';\r\nimport { ErrorHandler } from '../core/error.service';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { Location } from '../../models/Location';\r\nimport { SocketConnection } from '../../sockets/socket.connections';\r\n\r\n\r\n/**\r\n * Api services for the `Location` model.\r\n */\r\n@Injectable()\r\nexport class LocationApi extends BaseLoopBackApi {\r\n\r\n  constructor(\r\n    @Inject(HttpClient) protected http: HttpClient,\r\n    @Inject(SocketConnection) protected connection: SocketConnection,\r\n    @Inject(SDKModels) protected models: SDKModels,\r\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\r\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\r\n  ) {\r\n    super(http,  connection,  models, auth, errorHandler);\r\n  }\r\n\r\n  /**\r\n   * Patch an existing model instance or insert a new one into the data source.\r\n   *\r\n   * @param {object} data Request data.\r\n   *\r\n   *  - `data` – `{object}` - Model instance data\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `Location` object.)\r\n   * </em>\r\n   */\r\n  public patchOrCreate(data: any = {}, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"PATCH\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/locations\";\r\n    let _routeParams: any = {};\r\n    let _postBody: any = {\r\n      data: data\r\n    };\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Patch attributes for a model instance and persist it into the data source.\r\n   *\r\n   * @param {any} id location id\r\n   *\r\n   * @param {object} data Request data.\r\n   *\r\n   *  - `data` – `{object}` - An object of model property name/value pairs\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `Location` object.)\r\n   * </em>\r\n   */\r\n  public patchAttributes(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"PATCH\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/locations/:id\";\r\n    let _routeParams: any = {\r\n      id: id\r\n    };\r\n    let _postBody: any = {\r\n      data: data\r\n    };\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * The name of the model represented by this $resource,\r\n   * i.e. `Location`.\r\n   */\r\n  public getModelName() {\r\n    return \"Location\";\r\n  }\r\n}\r\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter, SDKToken, AccessToken } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Myuser } from '../../models/Myuser';\nimport { SocketConnection } from '../../sockets/socket.connections';\nimport { Hotel } from '../../models/Hotel';\nimport { Airline } from '../../models/Airline';\nimport { RentalService } from '../../models/RentalService';\n\n\n/**\n * Api services for the `Myuser` model.\n */\n@Injectable()\nexport class MyuserApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * Find a related item by id for accessTokens.\n   *\n   * @param {any} id myuser id\n   *\n   * @param {any} fk Foreign key for accessTokens\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Myuser` object.)\n   * </em>\n   */\n  public findByIdAccessTokens(id: any, fk: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/myusers/:id/accessTokens/:fk\";\n    let _routeParams: any = {\n      id: id,\n      fk: fk\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Delete a related item by id for accessTokens.\n   *\n   * @param {any} id myuser id\n   *\n   * @param {any} fk Foreign key for accessTokens\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * This method returns no data.\n   */\n  public destroyByIdAccessTokens(id: any, fk: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"DELETE\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/myusers/:id/accessTokens/:fk\";\n    let _routeParams: any = {\n      id: id,\n      fk: fk\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Update a related item by id for accessTokens.\n   *\n   * @param {any} id myuser id\n   *\n   * @param {any} fk Foreign key for accessTokens\n   *\n   * @param {object} data Request data.\n   *\n   * This method expects a subset of model properties as request parameters.\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Myuser` object.)\n   * </em>\n   */\n  public updateByIdAccessTokens(id: any, fk: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PUT\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/myusers/:id/accessTokens/:fk\";\n    let _routeParams: any = {\n      id: id,\n      fk: fk\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Fetches hasOne relation hotel.\n   *\n   * @param {any} id myuser id\n   *\n   * @param {boolean} refresh \n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Myuser` object.)\n   * </em>\n   */\n  public getHotel(id: any, refresh: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/myusers/:id/hotel\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof refresh !== 'undefined' && refresh !== null) _urlParams.refresh = refresh;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Creates a new instance in hotel of this model.\n   *\n   * @param {any} id myuser id\n   *\n   * @param {object} data Request data.\n   *\n   * This method expects a subset of model properties as request parameters.\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Myuser` object.)\n   * </em>\n   */\n  public createHotel(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/myusers/:id/hotel\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Update hotel of this model.\n   *\n   * @param {any} id myuser id\n   *\n   * @param {object} data Request data.\n   *\n   * This method expects a subset of model properties as request parameters.\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Myuser` object.)\n   * </em>\n   */\n  public updateHotel(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PUT\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/myusers/:id/hotel\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Deletes hotel of this model.\n   *\n   * @param {any} id myuser id\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * This method returns no data.\n   */\n  public destroyHotel(id: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"DELETE\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/myusers/:id/hotel\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Fetches hasOne relation airline.\n   *\n   * @param {any} id myuser id\n   *\n   * @param {boolean} refresh \n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Myuser` object.)\n   * </em>\n   */\n  public getAirline(id: any, refresh: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/myusers/:id/airline\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof refresh !== 'undefined' && refresh !== null) _urlParams.refresh = refresh;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Creates a new instance in airline of this model.\n   *\n   * @param {any} id myuser id\n   *\n   * @param {object} data Request data.\n   *\n   * This method expects a subset of model properties as request parameters.\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Myuser` object.)\n   * </em>\n   */\n  public createAirline(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/myusers/:id/airline\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Update airline of this model.\n   *\n   * @param {any} id myuser id\n   *\n   * @param {object} data Request data.\n   *\n   * This method expects a subset of model properties as request parameters.\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Myuser` object.)\n   * </em>\n   */\n  public updateAirline(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PUT\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/myusers/:id/airline\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Deletes airline of this model.\n   *\n   * @param {any} id myuser id\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * This method returns no data.\n   */\n  public destroyAirline(id: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"DELETE\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/myusers/:id/airline\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Fetches hasOne relation rentalService.\n   *\n   * @param {any} id myuser id\n   *\n   * @param {boolean} refresh \n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Myuser` object.)\n   * </em>\n   */\n  public getRentalService(id: any, refresh: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/myusers/:id/rentalService\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof refresh !== 'undefined' && refresh !== null) _urlParams.refresh = refresh;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Creates a new instance in rentalService of this model.\n   *\n   * @param {any} id myuser id\n   *\n   * @param {object} data Request data.\n   *\n   * This method expects a subset of model properties as request parameters.\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Myuser` object.)\n   * </em>\n   */\n  public createRentalService(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/myusers/:id/rentalService\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Update rentalService of this model.\n   *\n   * @param {any} id myuser id\n   *\n   * @param {object} data Request data.\n   *\n   * This method expects a subset of model properties as request parameters.\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Myuser` object.)\n   * </em>\n   */\n  public updateRentalService(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PUT\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/myusers/:id/rentalService\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Deletes rentalService of this model.\n   *\n   * @param {any} id myuser id\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * This method returns no data.\n   */\n  public destroyRentalService(id: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"DELETE\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/myusers/:id/rentalService\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Queries accessTokens of myuser.\n   *\n   * @param {any} id myuser id\n   *\n   * @param {object} filter \n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Myuser` object.)\n   * </em>\n   */\n  public getAccessTokens(id: any, filter: LoopBackFilter = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/myusers/:id/accessTokens\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof filter !== 'undefined' && filter !== null) _urlParams.filter = filter;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Creates a new instance in accessTokens of this model.\n   *\n   * @param {any} id myuser id\n   *\n   * @param {object} data Request data.\n   *\n   * This method expects a subset of model properties as request parameters.\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Myuser` object.)\n   * </em>\n   */\n  public createAccessTokens(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/myusers/:id/accessTokens\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Deletes all accessTokens of this model.\n   *\n   * @param {any} id myuser id\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * This method returns no data.\n   */\n  public deleteAccessTokens(id: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"DELETE\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/myusers/:id/accessTokens\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Counts accessTokens of myuser.\n   *\n   * @param {any} id myuser id\n   *\n   * @param {object} where Criteria to match model instances\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * Data properties:\n   *\n   *  - `count` – `{number}` - \n   */\n  public countAccessTokens(id: any, where: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/myusers/:id/accessTokens/count\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof where !== 'undefined' && where !== null) _urlParams.where = where;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Patch an existing model instance or insert a new one into the data source.\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - Model instance data\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Myuser` object.)\n   * </em>\n   */\n  public patchOrCreate(data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/myusers\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Patch attributes for a model instance and persist it into the data source.\n   *\n   * @param {any} id myuser id\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - An object of model property name/value pairs\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Myuser` object.)\n   * </em>\n   */\n  public patchAttributes(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/myusers/:id\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Login a user with username/email and password.\n   *\n   * @param {string} include Related objects to include in the response. See the description of return value for more details.\n   *   Default value: `user`.\n   *\n   *  - `rememberMe` - `boolean` - Whether the authentication credentials\n   *     should be remembered in localStorage across app/browser restarts.\n   *     Default: `true`.\n   *\n   * @param {object} data Request data.\n   *\n   * This method expects a subset of model properties as request parameters.\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * The response body contains properties of the AccessToken created on login.\n   * Depending on the value of `include` parameter, the body may contain additional properties:\n   * \n   *   - `user` - `U+007BUserU+007D` - Data of the currently logged in user. (`include=user`)\n   * \n   *\n   */\n  public login(credentials: any, include: any = 'user', rememberMe: boolean = true, customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/myusers/login\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      credentials: credentials\n    };\n    let _urlParams: any = {};\n    if (typeof include !== 'undefined' && include !== null) _urlParams.include = include;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders)\n      .pipe(\n        map(\n        (response: any) => {\n          response.ttl = parseInt(response.ttl);\n          response.rememberMe = rememberMe;\n          this.auth.setToken(response);\n          return response;\n        }\n      )\n      );\n      return result;\n      \n  }\n\n  /**\n   * Logout a user with access token.\n   *\n   * @param {object} data Request data.\n   *\n   * This method does not accept any data. Supply an empty object.\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * This method returns no data.\n   */\n  public logout(customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/myusers/logout\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n       _urlParams.access_token = this.auth.getAccessTokenId();\n    this.auth.clear(); \n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Trigger user's identity verification with configured verifyOptions\n   *\n   * @param {any} id myuser id\n   *\n   * @param {object} data Request data.\n   *\n   * This method does not accept any data. Supply an empty object.\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * This method returns no data.\n   */\n  public verify(id: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/myusers/:id/verify\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Confirm a user registration with identity verification token.\n   *\n   * @param {string} uid \n   *\n   * @param {string} token \n   *\n   * @param {string} redirect \n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * This method returns no data.\n   */\n  public confirm(uid: any, token: any, redirect: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/myusers/confirm\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof uid !== 'undefined' && uid !== null) _urlParams.uid = uid;\n    if (typeof token !== 'undefined' && token !== null) _urlParams.token = token;\n    if (typeof redirect !== 'undefined' && redirect !== null) _urlParams.redirect = redirect;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Reset password for a user with email.\n   *\n   * @param {object} data Request data.\n   *\n   * This method expects a subset of model properties as request parameters.\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * This method returns no data.\n   */\n  public resetPassword(options: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/myusers/reset\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      options: options\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Change a user's password.\n   *\n   * @param {object} data Request data.\n   *\n   *  - `oldPassword` – `{string}` - \n   *\n   *  - `newPassword` – `{string}` - \n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * This method returns no data.\n   */\n  public changePassword(oldPassword: any, newPassword: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/myusers/change-password\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: {\n        oldPassword: oldPassword,\n        newPassword: newPassword\n      }\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Reset user's password via a password-reset token.\n   *\n   * @param {object} data Request data.\n   *\n   *  - `newPassword` – `{string}` - \n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * This method returns no data.\n   */\n  public setPassword(newPassword: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/myusers/reset-password\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: {\n        newPassword: newPassword\n      }\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * <em>\n         * (The remote method definition does not provide any description.)\n         * </em>\n   *\n   * @param {object} data Request data.\n   *\n   *  - `username` – `{string}` - \n   *\n   *  - `password` – `{string}` - \n   *\n   *  - `type` – `{string}` - \n   *\n   *  - `email` – `{string}` - \n   *\n   *  - `realm` – `{string}` - \n   *\n   *  - `emailVerified` – `{boolean}` - \n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * Data properties:\n   *\n   *  - `retval` – `{object}` - \n   */\n  public registerAnAdmin(username: any, password: any, type: any, email: any, realm: any = {}, emailVerified: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/myusers/registerAnAdmin\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof username !== 'undefined' && username !== null) _urlParams.username = username;\n    if (typeof password !== 'undefined' && password !== null) _urlParams.password = password;\n    if (typeof type !== 'undefined' && type !== null) _urlParams.type = type;\n    if (typeof email !== 'undefined' && email !== null) _urlParams.email = email;\n    if (typeof realm !== 'undefined' && realm !== null) _urlParams.realm = realm;\n    if (typeof emailVerified !== 'undefined' && emailVerified !== null) _urlParams.emailVerified = emailVerified;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * <em>\n         * (The remote method definition does not provide any description.)\n         * </em>\n   *\n   * @param {string} userId \n   *\n   * @param {number} size \n   *\n   * @param {number} offset \n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * Data properties:\n   *\n   *  - `retval` – `{any}` - \n   */\n  public getRoomReservations(userId: any, size: any, offset: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/myusers/getRoomReservations\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof userId !== 'undefined' && userId !== null) _urlParams.userId = userId;\n    if (typeof size !== 'undefined' && size !== null) _urlParams.size = size;\n    if (typeof offset !== 'undefined' && offset !== null) _urlParams.offset = offset;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * <em>\n         * (The remote method definition does not provide any description.)\n         * </em>\n   *\n   * @param {string} userId \n   *\n   * @param {number} size \n   *\n   * @param {number} offset \n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * Data properties:\n   *\n   *  - `retval` – `{any}` - \n   */\n  public getCarReservations(userId: any, size: any, offset: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/myusers/getCarReservations\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof userId !== 'undefined' && userId !== null) _urlParams.userId = userId;\n    if (typeof size !== 'undefined' && size !== null) _urlParams.size = size;\n    if (typeof offset !== 'undefined' && offset !== null) _urlParams.offset = offset;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Creates a new instance in hotel of this model.\n   *\n   * @param {any} id myuser id\n   *\n   * @param {object} data Request data.\n   *\n   * This method expects a subset of model properties as request parameters.\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Myuser` object.)\n   * </em>\n   */\n  public createManyHotel(id: any, data: any[] = [], customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/myusers/:id/hotel\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Creates a new instance in airline of this model.\n   *\n   * @param {any} id myuser id\n   *\n   * @param {object} data Request data.\n   *\n   * This method expects a subset of model properties as request parameters.\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Myuser` object.)\n   * </em>\n   */\n  public createManyAirline(id: any, data: any[] = [], customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/myusers/:id/airline\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Creates a new instance in rentalService of this model.\n   *\n   * @param {any} id myuser id\n   *\n   * @param {object} data Request data.\n   *\n   * This method expects a subset of model properties as request parameters.\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Myuser` object.)\n   * </em>\n   */\n  public createManyRentalService(id: any, data: any[] = [], customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/myusers/:id/rentalService\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Creates a new instance in accessTokens of this model.\n   *\n   * @param {any} id myuser id\n   *\n   * @param {object} data Request data.\n   *\n   * This method expects a subset of model properties as request parameters.\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Myuser` object.)\n   * </em>\n   */\n  public createManyAccessTokens(id: any, data: any[] = [], customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/myusers/:id/accessTokens\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n  /**\n   * @ngdoc method\n   * @name sdk.Myuser#getCurrent\n   * @methodOf sdk.Myuser\n   *\n   * @description\n   *\n   * Get data of the currently logged user. Fail with HTTP result 401\n   * when there is no user logged in.\n   *\n   * @returns object An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   */\n  public getCurrent(filter: LoopBackFilter = {}): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() + \"/myusers\" + \"/:id\";\n    let id: any = this.auth.getCurrentUserId();\n    if (id == null)\n    id = '__anonymous__';\n    let _routeParams: any = { id: id };\n    let _urlParams: any = {};\n    let _postBody: any = {};\n    if (filter) _urlParams.filter = filter;\n    return this.request(_method, _url, _routeParams, _urlParams, _postBody);\n  }\n  /**\n   * Get data of the currently logged user that was returned by the last\n   * call to {@link sdk.Myuser#login} or\n   * {@link sdk.Myuser#getCurrent}. Return null when there\n   * is no user logged in or the data of the current user were not fetched\n   * yet.\n   *\n   * @returns object An Account instance.\n   */\n  public getCachedCurrent() {\n    return this.auth.getCurrentUserData();\n  }\n  /**\n   * Get data of the currently logged access tokern that was returned by the last\n   * call to {@link sdk.Myuser#login}\n   *\n   * @returns object An AccessToken instance.\n   */\n  public getCurrentToken(): AccessToken {\n    return this.auth.getToken();\n  }\n  /**\n   * @name sdk.Myuser#isAuthenticated\n   *\n   * @returns {boolean} True if the current user is authenticated (logged in).\n   */\n  public isAuthenticated() {\n    return !(this.getCurrentId() === '' || this.getCurrentId() == null || this.getCurrentId() == 'null');\n  }\n\n  /**\n   * @name sdk.Myuser#getCurrentId\n   *\n   * @returns object Id of the currently logged-in user or null.\n   */\n  public getCurrentId() {\n    return this.auth.getCurrentUserId();\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `Myuser`.\n   */\n  public getModelName() {\n    return \"Myuser\";\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { QuickFlightReservation } from '../../models/QuickFlightReservation';\nimport { SocketConnection } from '../../sockets/socket.connections';\n\n\n/**\n * Api services for the `QuickFlightReservation` model.\n */\n@Injectable()\nexport class QuickFlightReservationApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * Patch an existing model instance or insert a new one into the data source.\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - Model instance data\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `QuickFlightReservation` object.)\n   * </em>\n   */\n  public patchOrCreate(data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/quickFlightReservations\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Patch attributes for a model instance and persist it into the data source.\n   *\n   * @param {any} id quickFlightReservation id\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - An object of model property name/value pairs\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `QuickFlightReservation` object.)\n   * </em>\n   */\n  public patchAttributes(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/quickFlightReservations/:id\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `QuickFlightReservation`.\n   */\n  public getModelName() {\n    return \"QuickFlightReservation\";\n  }\n}\n","/* tslint:disable */\r\nimport { Injectable, Inject, Optional } from '@angular/core';\r\nimport { HttpClient, HttpResponse } from '@angular/common/http';\r\nimport { SDKModels } from './SDKModels';\r\nimport { BaseLoopBackApi } from '../core/base.service';\r\nimport { LoopBackConfig } from '../../lb.config';\r\nimport { LoopBackAuth } from '../core/auth.service';\r\nimport { LoopBackFilter,  } from '../../models/BaseModels';\r\nimport { ErrorHandler } from '../core/error.service';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { RentalService } from '../../models/RentalService';\r\nimport { SocketConnection } from '../../sockets/socket.connections';\r\nimport { Branch } from '../../models/Branch';\r\nimport { Car } from '../../models/Car';\r\nimport { CarPrice } from '../../models/CarPrice';\r\nimport { Location } from '../../models/Location';\r\n\r\n\r\n/**\r\n * Api services for the `RentalService` model.\r\n */\r\n@Injectable()\r\nexport class RentalServiceApi extends BaseLoopBackApi {\r\n\r\n  constructor(\r\n    @Inject(HttpClient) protected http: HttpClient,\r\n    @Inject(SocketConnection) protected connection: SocketConnection,\r\n    @Inject(SDKModels) protected models: SDKModels,\r\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\r\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\r\n  ) {\r\n    super(http,  connection,  models, auth, errorHandler);\r\n  }\r\n\r\n  /**\r\n   * Find a related item by id for branches.\r\n   *\r\n   * @param {any} id rentalService id\r\n   *\r\n   * @param {any} fk Foreign key for branches\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `RentalService` object.)\r\n   * </em>\r\n   */\r\n  public findByIdBranches(id: any, fk: any, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"GET\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/rentalServices/:id/branches/:fk\";\r\n    let _routeParams: any = {\r\n      id: id,\r\n      fk: fk\r\n    };\r\n    let _postBody: any = {};\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Delete a related item by id for branches.\r\n   *\r\n   * @param {any} id rentalService id\r\n   *\r\n   * @param {any} fk Foreign key for branches\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * This method returns no data.\r\n   */\r\n  public destroyByIdBranches(id: any, fk: any, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"DELETE\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/rentalServices/:id/branches/:fk\";\r\n    let _routeParams: any = {\r\n      id: id,\r\n      fk: fk\r\n    };\r\n    let _postBody: any = {};\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Update a related item by id for branches.\r\n   *\r\n   * @param {any} id rentalService id\r\n   *\r\n   * @param {any} fk Foreign key for branches\r\n   *\r\n   * @param {object} data Request data.\r\n   *\r\n   * This method expects a subset of model properties as request parameters.\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `RentalService` object.)\r\n   * </em>\r\n   */\r\n  public updateByIdBranches(id: any, fk: any, data: any = {}, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"PUT\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/rentalServices/:id/branches/:fk\";\r\n    let _routeParams: any = {\r\n      id: id,\r\n      fk: fk\r\n    };\r\n    let _postBody: any = {\r\n      data: data\r\n    };\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Find a related item by id for cars.\r\n   *\r\n   * @param {any} id rentalService id\r\n   *\r\n   * @param {any} fk Foreign key for cars\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `RentalService` object.)\r\n   * </em>\r\n   */\r\n  public findByIdCars(id: any, fk: any, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"GET\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/rentalServices/:id/cars/:fk\";\r\n    let _routeParams: any = {\r\n      id: id,\r\n      fk: fk\r\n    };\r\n    let _postBody: any = {};\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Delete a related item by id for cars.\r\n   *\r\n   * @param {any} id rentalService id\r\n   *\r\n   * @param {any} fk Foreign key for cars\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * This method returns no data.\r\n   */\r\n  public destroyByIdCars(id: any, fk: any, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"DELETE\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/rentalServices/:id/cars/:fk\";\r\n    let _routeParams: any = {\r\n      id: id,\r\n      fk: fk\r\n    };\r\n    let _postBody: any = {};\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Update a related item by id for cars.\r\n   *\r\n   * @param {any} id rentalService id\r\n   *\r\n   * @param {any} fk Foreign key for cars\r\n   *\r\n   * @param {object} data Request data.\r\n   *\r\n   * This method expects a subset of model properties as request parameters.\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `RentalService` object.)\r\n   * </em>\r\n   */\r\n  public updateByIdCars(id: any, fk: any, data: any = {}, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"PUT\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/rentalServices/:id/cars/:fk\";\r\n    let _routeParams: any = {\r\n      id: id,\r\n      fk: fk\r\n    };\r\n    let _postBody: any = {\r\n      data: data\r\n    };\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Find a related item by id for carPrices.\r\n   *\r\n   * @param {any} id rentalService id\r\n   *\r\n   * @param {any} fk Foreign key for carPrices\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `RentalService` object.)\r\n   * </em>\r\n   */\r\n  public findByIdCarPrices(id: any, fk: any, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"GET\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/rentalServices/:id/carPrices/:fk\";\r\n    let _routeParams: any = {\r\n      id: id,\r\n      fk: fk\r\n    };\r\n    let _postBody: any = {};\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Delete a related item by id for carPrices.\r\n   *\r\n   * @param {any} id rentalService id\r\n   *\r\n   * @param {any} fk Foreign key for carPrices\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * This method returns no data.\r\n   */\r\n  public destroyByIdCarPrices(id: any, fk: any, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"DELETE\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/rentalServices/:id/carPrices/:fk\";\r\n    let _routeParams: any = {\r\n      id: id,\r\n      fk: fk\r\n    };\r\n    let _postBody: any = {};\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Update a related item by id for carPrices.\r\n   *\r\n   * @param {any} id rentalService id\r\n   *\r\n   * @param {any} fk Foreign key for carPrices\r\n   *\r\n   * @param {object} data Request data.\r\n   *\r\n   * This method expects a subset of model properties as request parameters.\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `RentalService` object.)\r\n   * </em>\r\n   */\r\n  public updateByIdCarPrices(id: any, fk: any, data: any = {}, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"PUT\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/rentalServices/:id/carPrices/:fk\";\r\n    let _routeParams: any = {\r\n      id: id,\r\n      fk: fk\r\n    };\r\n    let _postBody: any = {\r\n      data: data\r\n    };\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Fetches belongsTo relation location.\r\n   *\r\n   * @param {any} id rentalService id\r\n   *\r\n   * @param {boolean} refresh \r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `RentalService` object.)\r\n   * </em>\r\n   */\r\n  public getLocation(id: any, refresh: any = {}, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"GET\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/rentalServices/:id/location\";\r\n    let _routeParams: any = {\r\n      id: id\r\n    };\r\n    let _postBody: any = {};\r\n    let _urlParams: any = {};\r\n    if (typeof refresh !== 'undefined' && refresh !== null) _urlParams.refresh = refresh;\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Queries branches of rentalService.\r\n   *\r\n   * @param {any} id rentalService id\r\n   *\r\n   * @param {object} filter \r\n   *\r\n   * @returns {object[]} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `RentalService` object.)\r\n   * </em>\r\n   */\r\n  public getBranches(id: any, filter: LoopBackFilter = {}, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"GET\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/rentalServices/:id/branches\";\r\n    let _routeParams: any = {\r\n      id: id\r\n    };\r\n    let _postBody: any = {};\r\n    let _urlParams: any = {};\r\n    if (typeof filter !== 'undefined' && filter !== null) _urlParams.filter = filter;\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Creates a new instance in branches of this model.\r\n   *\r\n   * @param {any} id rentalService id\r\n   *\r\n   * @param {object} data Request data.\r\n   *\r\n   * This method expects a subset of model properties as request parameters.\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `RentalService` object.)\r\n   * </em>\r\n   */\r\n  public createBranches(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"POST\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/rentalServices/:id/branches\";\r\n    let _routeParams: any = {\r\n      id: id\r\n    };\r\n    let _postBody: any = {\r\n      data: data\r\n    };\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Deletes all branches of this model.\r\n   *\r\n   * @param {any} id rentalService id\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * This method returns no data.\r\n   */\r\n  public deleteBranches(id: any, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"DELETE\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/rentalServices/:id/branches\";\r\n    let _routeParams: any = {\r\n      id: id\r\n    };\r\n    let _postBody: any = {};\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Counts branches of rentalService.\r\n   *\r\n   * @param {any} id rentalService id\r\n   *\r\n   * @param {object} where Criteria to match model instances\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * Data properties:\r\n   *\r\n   *  - `count` – `{number}` - \r\n   */\r\n  public countBranches(id: any, where: any = {}, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"GET\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/rentalServices/:id/branches/count\";\r\n    let _routeParams: any = {\r\n      id: id\r\n    };\r\n    let _postBody: any = {};\r\n    let _urlParams: any = {};\r\n    if (typeof where !== 'undefined' && where !== null) _urlParams.where = where;\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Queries cars of rentalService.\r\n   *\r\n   * @param {any} id rentalService id\r\n   *\r\n   * @param {object} filter \r\n   *\r\n   * @returns {object[]} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `RentalService` object.)\r\n   * </em>\r\n   */\r\n  public getCars(id: any, filter: LoopBackFilter = {}, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"GET\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/rentalServices/:id/cars\";\r\n    let _routeParams: any = {\r\n      id: id\r\n    };\r\n    let _postBody: any = {};\r\n    let _urlParams: any = {};\r\n    if (typeof filter !== 'undefined' && filter !== null) _urlParams.filter = filter;\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Creates a new instance in cars of this model.\r\n   *\r\n   * @param {any} id rentalService id\r\n   *\r\n   * @param {object} data Request data.\r\n   *\r\n   * This method expects a subset of model properties as request parameters.\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `RentalService` object.)\r\n   * </em>\r\n   */\r\n  public createCars(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"POST\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/rentalServices/:id/cars\";\r\n    let _routeParams: any = {\r\n      id: id\r\n    };\r\n    let _postBody: any = {\r\n      data: data\r\n    };\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Deletes all cars of this model.\r\n   *\r\n   * @param {any} id rentalService id\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * This method returns no data.\r\n   */\r\n  public deleteCars(id: any, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"DELETE\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/rentalServices/:id/cars\";\r\n    let _routeParams: any = {\r\n      id: id\r\n    };\r\n    let _postBody: any = {};\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Counts cars of rentalService.\r\n   *\r\n   * @param {any} id rentalService id\r\n   *\r\n   * @param {object} where Criteria to match model instances\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * Data properties:\r\n   *\r\n   *  - `count` – `{number}` - \r\n   */\r\n  public countCars(id: any, where: any = {}, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"GET\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/rentalServices/:id/cars/count\";\r\n    let _routeParams: any = {\r\n      id: id\r\n    };\r\n    let _postBody: any = {};\r\n    let _urlParams: any = {};\r\n    if (typeof where !== 'undefined' && where !== null) _urlParams.where = where;\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Queries carPrices of rentalService.\r\n   *\r\n   * @param {any} id rentalService id\r\n   *\r\n   * @param {object} filter \r\n   *\r\n   * @returns {object[]} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `RentalService` object.)\r\n   * </em>\r\n   */\r\n  public getCarPrices(id: any, filter: LoopBackFilter = {}, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"GET\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/rentalServices/:id/carPrices\";\r\n    let _routeParams: any = {\r\n      id: id\r\n    };\r\n    let _postBody: any = {};\r\n    let _urlParams: any = {};\r\n    if (typeof filter !== 'undefined' && filter !== null) _urlParams.filter = filter;\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Creates a new instance in carPrices of this model.\r\n   *\r\n   * @param {any} id rentalService id\r\n   *\r\n   * @param {object} data Request data.\r\n   *\r\n   * This method expects a subset of model properties as request parameters.\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `RentalService` object.)\r\n   * </em>\r\n   */\r\n  public createCarPrices(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"POST\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/rentalServices/:id/carPrices\";\r\n    let _routeParams: any = {\r\n      id: id\r\n    };\r\n    let _postBody: any = {\r\n      data: data\r\n    };\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Deletes all carPrices of this model.\r\n   *\r\n   * @param {any} id rentalService id\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * This method returns no data.\r\n   */\r\n  public deleteCarPrices(id: any, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"DELETE\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/rentalServices/:id/carPrices\";\r\n    let _routeParams: any = {\r\n      id: id\r\n    };\r\n    let _postBody: any = {};\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Counts carPrices of rentalService.\r\n   *\r\n   * @param {any} id rentalService id\r\n   *\r\n   * @param {object} where Criteria to match model instances\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * Data properties:\r\n   *\r\n   *  - `count` – `{number}` - \r\n   */\r\n  public countCarPrices(id: any, where: any = {}, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"GET\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/rentalServices/:id/carPrices/count\";\r\n    let _routeParams: any = {\r\n      id: id\r\n    };\r\n    let _postBody: any = {};\r\n    let _urlParams: any = {};\r\n    if (typeof where !== 'undefined' && where !== null) _urlParams.where = where;\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Patch an existing model instance or insert a new one into the data source.\r\n   *\r\n   * @param {object} data Request data.\r\n   *\r\n   *  - `data` – `{object}` - Model instance data\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `RentalService` object.)\r\n   * </em>\r\n   */\r\n  public patchOrCreate(data: any = {}, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"PATCH\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/rentalServices\";\r\n    let _routeParams: any = {};\r\n    let _postBody: any = {\r\n      data: data\r\n    };\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Patch attributes for a model instance and persist it into the data source.\r\n   *\r\n   * @param {any} id rentalService id\r\n   *\r\n   * @param {object} data Request data.\r\n   *\r\n   *  - `data` – `{object}` - An object of model property name/value pairs\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `RentalService` object.)\r\n   * </em>\r\n   */\r\n  public patchAttributes(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"PATCH\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/rentalServices/:id\";\r\n    let _routeParams: any = {\r\n      id: id\r\n    };\r\n    let _postBody: any = {\r\n      data: data\r\n    };\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * <em>\r\n         * (The remote method definition does not provide any description.)\r\n         * </em>\r\n   *\r\n   * @param {date} start \r\n   *\r\n   * @param {date} end \r\n   *\r\n   * @param {string} name \r\n   *\r\n   * @param {string} address \r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * Data properties:\r\n   *\r\n   *  - `retval` – `{object}` - \r\n   */\r\n  public getAvailableServices(start: any, end: any, name: any = {}, address: any = {}, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"GET\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/rentalServices/getAvailableServices\";\r\n    let _routeParams: any = {};\r\n    let _postBody: any = {};\r\n    let _urlParams: any = {};\r\n    if (typeof start !== 'undefined' && start !== null) _urlParams.start = start;\r\n    if (typeof end !== 'undefined' && end !== null) _urlParams.end = end;\r\n    if (typeof name !== 'undefined' && name !== null) _urlParams.name = name;\r\n    if (typeof address !== 'undefined' && address !== null) _urlParams.address = address;\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Creates a new instance in branches of this model.\r\n   *\r\n   * @param {any} id rentalService id\r\n   *\r\n   * @param {object} data Request data.\r\n   *\r\n   * This method expects a subset of model properties as request parameters.\r\n   *\r\n   * @returns {object[]} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `RentalService` object.)\r\n   * </em>\r\n   */\r\n  public createManyBranches(id: any, data: any[] = [], customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"POST\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/rentalServices/:id/branches\";\r\n    let _routeParams: any = {\r\n      id: id\r\n    };\r\n    let _postBody: any = {\r\n      data: data\r\n    };\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Creates a new instance in cars of this model.\r\n   *\r\n   * @param {any} id rentalService id\r\n   *\r\n   * @param {object} data Request data.\r\n   *\r\n   * This method expects a subset of model properties as request parameters.\r\n   *\r\n   * @returns {object[]} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `RentalService` object.)\r\n   * </em>\r\n   */\r\n  public createManyCars(id: any, data: any[] = [], customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"POST\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/rentalServices/:id/cars\";\r\n    let _routeParams: any = {\r\n      id: id\r\n    };\r\n    let _postBody: any = {\r\n      data: data\r\n    };\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Creates a new instance in carPrices of this model.\r\n   *\r\n   * @param {any} id rentalService id\r\n   *\r\n   * @param {object} data Request data.\r\n   *\r\n   * This method expects a subset of model properties as request parameters.\r\n   *\r\n   * @returns {object[]} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `RentalService` object.)\r\n   * </em>\r\n   */\r\n  public createManyCarPrices(id: any, data: any[] = [], customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"POST\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/rentalServices/:id/carPrices\";\r\n    let _routeParams: any = {\r\n      id: id\r\n    };\r\n    let _postBody: any = {\r\n      data: data\r\n    };\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * The name of the model represented by this $resource,\r\n   * i.e. `RentalService`.\r\n   */\r\n  public getModelName() {\r\n    return \"RentalService\";\r\n  }\r\n}\r\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { ReservationOffer } from '../../models/ReservationOffer';\nimport { SocketConnection } from '../../sockets/socket.connections';\n\n\n/**\n * Api services for the `ReservationOffer` model.\n */\n@Injectable()\nexport class ReservationOfferApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * Patch an existing model instance or insert a new one into the data source.\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - Model instance data\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `ReservationOffer` object.)\n   * </em>\n   */\n  public patchOrCreate(data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/reservationOffers\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Patch attributes for a model instance and persist it into the data source.\n   *\n   * @param {any} id reservationOffer id\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - An object of model property name/value pairs\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `ReservationOffer` object.)\n   * </em>\n   */\n  public patchAttributes(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/reservationOffers/:id\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `ReservationOffer`.\n   */\n  public getModelName() {\n    return \"ReservationOffer\";\n  }\n}\n","/* tslint:disable */\r\nimport { Injectable, Inject, Optional } from '@angular/core';\r\nimport { HttpClient, HttpResponse } from '@angular/common/http';\r\nimport { SDKModels } from './SDKModels';\r\nimport { BaseLoopBackApi } from '../core/base.service';\r\nimport { LoopBackConfig } from '../../lb.config';\r\nimport { LoopBackAuth } from '../core/auth.service';\r\nimport { LoopBackFilter,  } from '../../models/BaseModels';\r\nimport { ErrorHandler } from '../core/error.service';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { Room } from '../../models/Room';\r\nimport { SocketConnection } from '../../sockets/socket.connections';\r\nimport { Hotel } from '../../models/Hotel';\r\nimport { RoomPrice } from '../../models/RoomPrice';\r\nimport { HotelDiscount } from '../../models/HotelDiscount';\r\n\r\n\r\n/**\r\n * Api services for the `Room` model.\r\n */\r\n@Injectable()\r\nexport class RoomApi extends BaseLoopBackApi {\r\n\r\n  constructor(\r\n    @Inject(HttpClient) protected http: HttpClient,\r\n    @Inject(SocketConnection) protected connection: SocketConnection,\r\n    @Inject(SDKModels) protected models: SDKModels,\r\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\r\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\r\n  ) {\r\n    super(http,  connection,  models, auth, errorHandler);\r\n  }\r\n\r\n  /**\r\n   * Fetches belongsTo relation hotel.\r\n   *\r\n   * @param {any} id room id\r\n   *\r\n   * @param {boolean} refresh \r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `Room` object.)\r\n   * </em>\r\n   */\r\n  public getHotel(id: any, refresh: any = {}, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"GET\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/rooms/:id/hotel\";\r\n    let _routeParams: any = {\r\n      id: id\r\n    };\r\n    let _postBody: any = {};\r\n    let _urlParams: any = {};\r\n    if (typeof refresh !== 'undefined' && refresh !== null) _urlParams.refresh = refresh;\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Find a related item by id for roomPrices.\r\n   *\r\n   * @param {any} id room id\r\n   *\r\n   * @param {any} fk Foreign key for roomPrices\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `Room` object.)\r\n   * </em>\r\n   */\r\n  public findByIdRoomPrices(id: any, fk: any, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"GET\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/rooms/:id/roomPrices/:fk\";\r\n    let _routeParams: any = {\r\n      id: id,\r\n      fk: fk\r\n    };\r\n    let _postBody: any = {};\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Delete a related item by id for roomPrices.\r\n   *\r\n   * @param {any} id room id\r\n   *\r\n   * @param {any} fk Foreign key for roomPrices\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * This method returns no data.\r\n   */\r\n  public destroyByIdRoomPrices(id: any, fk: any, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"DELETE\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/rooms/:id/roomPrices/:fk\";\r\n    let _routeParams: any = {\r\n      id: id,\r\n      fk: fk\r\n    };\r\n    let _postBody: any = {};\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Update a related item by id for roomPrices.\r\n   *\r\n   * @param {any} id room id\r\n   *\r\n   * @param {any} fk Foreign key for roomPrices\r\n   *\r\n   * @param {object} data Request data.\r\n   *\r\n   * This method expects a subset of model properties as request parameters.\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `Room` object.)\r\n   * </em>\r\n   */\r\n  public updateByIdRoomPrices(id: any, fk: any, data: any = {}, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"PUT\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/rooms/:id/roomPrices/:fk\";\r\n    let _routeParams: any = {\r\n      id: id,\r\n      fk: fk\r\n    };\r\n    let _postBody: any = {\r\n      data: data\r\n    };\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Find a related item by id for hotelDiscounts.\r\n   *\r\n   * @param {any} id room id\r\n   *\r\n   * @param {any} fk Foreign key for hotelDiscounts\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `Room` object.)\r\n   * </em>\r\n   */\r\n  public findByIdHotelDiscounts(id: any, fk: any, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"GET\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/rooms/:id/hotelDiscounts/:fk\";\r\n    let _routeParams: any = {\r\n      id: id,\r\n      fk: fk\r\n    };\r\n    let _postBody: any = {};\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Delete a related item by id for hotelDiscounts.\r\n   *\r\n   * @param {any} id room id\r\n   *\r\n   * @param {any} fk Foreign key for hotelDiscounts\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * This method returns no data.\r\n   */\r\n  public destroyByIdHotelDiscounts(id: any, fk: any, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"DELETE\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/rooms/:id/hotelDiscounts/:fk\";\r\n    let _routeParams: any = {\r\n      id: id,\r\n      fk: fk\r\n    };\r\n    let _postBody: any = {};\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Update a related item by id for hotelDiscounts.\r\n   *\r\n   * @param {any} id room id\r\n   *\r\n   * @param {any} fk Foreign key for hotelDiscounts\r\n   *\r\n   * @param {object} data Request data.\r\n   *\r\n   * This method expects a subset of model properties as request parameters.\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `Room` object.)\r\n   * </em>\r\n   */\r\n  public updateByIdHotelDiscounts(id: any, fk: any, data: any = {}, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"PUT\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/rooms/:id/hotelDiscounts/:fk\";\r\n    let _routeParams: any = {\r\n      id: id,\r\n      fk: fk\r\n    };\r\n    let _postBody: any = {\r\n      data: data\r\n    };\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Queries roomPrices of room.\r\n   *\r\n   * @param {any} id room id\r\n   *\r\n   * @param {object} filter \r\n   *\r\n   * @returns {object[]} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `Room` object.)\r\n   * </em>\r\n   */\r\n  public getRoomPrices(id: any, filter: LoopBackFilter = {}, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"GET\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/rooms/:id/roomPrices\";\r\n    let _routeParams: any = {\r\n      id: id\r\n    };\r\n    let _postBody: any = {};\r\n    let _urlParams: any = {};\r\n    if (typeof filter !== 'undefined' && filter !== null) _urlParams.filter = filter;\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Creates a new instance in roomPrices of this model.\r\n   *\r\n   * @param {any} id room id\r\n   *\r\n   * @param {object} data Request data.\r\n   *\r\n   * This method expects a subset of model properties as request parameters.\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `Room` object.)\r\n   * </em>\r\n   */\r\n  public createRoomPrices(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"POST\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/rooms/:id/roomPrices\";\r\n    let _routeParams: any = {\r\n      id: id\r\n    };\r\n    let _postBody: any = {\r\n      data: data\r\n    };\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Deletes all roomPrices of this model.\r\n   *\r\n   * @param {any} id room id\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * This method returns no data.\r\n   */\r\n  public deleteRoomPrices(id: any, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"DELETE\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/rooms/:id/roomPrices\";\r\n    let _routeParams: any = {\r\n      id: id\r\n    };\r\n    let _postBody: any = {};\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Counts roomPrices of room.\r\n   *\r\n   * @param {any} id room id\r\n   *\r\n   * @param {object} where Criteria to match model instances\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * Data properties:\r\n   *\r\n   *  - `count` – `{number}` - \r\n   */\r\n  public countRoomPrices(id: any, where: any = {}, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"GET\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/rooms/:id/roomPrices/count\";\r\n    let _routeParams: any = {\r\n      id: id\r\n    };\r\n    let _postBody: any = {};\r\n    let _urlParams: any = {};\r\n    if (typeof where !== 'undefined' && where !== null) _urlParams.where = where;\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Queries hotelDiscounts of room.\r\n   *\r\n   * @param {any} id room id\r\n   *\r\n   * @param {object} filter \r\n   *\r\n   * @returns {object[]} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `Room` object.)\r\n   * </em>\r\n   */\r\n  public getHotelDiscounts(id: any, filter: LoopBackFilter = {}, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"GET\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/rooms/:id/hotelDiscounts\";\r\n    let _routeParams: any = {\r\n      id: id\r\n    };\r\n    let _postBody: any = {};\r\n    let _urlParams: any = {};\r\n    if (typeof filter !== 'undefined' && filter !== null) _urlParams.filter = filter;\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Creates a new instance in hotelDiscounts of this model.\r\n   *\r\n   * @param {any} id room id\r\n   *\r\n   * @param {object} data Request data.\r\n   *\r\n   * This method expects a subset of model properties as request parameters.\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `Room` object.)\r\n   * </em>\r\n   */\r\n  public createHotelDiscounts(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"POST\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/rooms/:id/hotelDiscounts\";\r\n    let _routeParams: any = {\r\n      id: id\r\n    };\r\n    let _postBody: any = {\r\n      data: data\r\n    };\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Deletes all hotelDiscounts of this model.\r\n   *\r\n   * @param {any} id room id\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * This method returns no data.\r\n   */\r\n  public deleteHotelDiscounts(id: any, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"DELETE\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/rooms/:id/hotelDiscounts\";\r\n    let _routeParams: any = {\r\n      id: id\r\n    };\r\n    let _postBody: any = {};\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Counts hotelDiscounts of room.\r\n   *\r\n   * @param {any} id room id\r\n   *\r\n   * @param {object} where Criteria to match model instances\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * Data properties:\r\n   *\r\n   *  - `count` – `{number}` - \r\n   */\r\n  public countHotelDiscounts(id: any, where: any = {}, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"GET\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/rooms/:id/hotelDiscounts/count\";\r\n    let _routeParams: any = {\r\n      id: id\r\n    };\r\n    let _postBody: any = {};\r\n    let _urlParams: any = {};\r\n    if (typeof where !== 'undefined' && where !== null) _urlParams.where = where;\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Patch an existing model instance or insert a new one into the data source.\r\n   *\r\n   * @param {object} data Request data.\r\n   *\r\n   *  - `data` – `{object}` - Model instance data\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `Room` object.)\r\n   * </em>\r\n   */\r\n  public patchOrCreate(data: any = {}, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"PATCH\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/rooms\";\r\n    let _routeParams: any = {};\r\n    let _postBody: any = {\r\n      data: data\r\n    };\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Patch attributes for a model instance and persist it into the data source.\r\n   *\r\n   * @param {any} id room id\r\n   *\r\n   * @param {object} data Request data.\r\n   *\r\n   *  - `data` – `{object}` - An object of model property name/value pairs\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `Room` object.)\r\n   * </em>\r\n   */\r\n  public patchAttributes(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"PATCH\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/rooms/:id\";\r\n    let _routeParams: any = {\r\n      id: id\r\n    };\r\n    let _postBody: any = {\r\n      data: data\r\n    };\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * <em>\r\n         * (The remote method definition does not provide any description.)\r\n         * </em>\r\n   *\r\n   * @param {date} start \r\n   *\r\n   * @param {date} end \r\n   *\r\n   * @param {string} location \r\n   *\r\n   * @param {number} price \r\n   *\r\n   * @param {number} beds \r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * Data properties:\r\n   *\r\n   *  - `retval` – `{object}` - \r\n   */\r\n  public findAvailableRooms(start: any, end: any, location: any = {}, price: any = {}, beds: any, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"GET\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/rooms/findAvailableRooms\";\r\n    let _routeParams: any = {};\r\n    let _postBody: any = {};\r\n    let _urlParams: any = {};\r\n    if (typeof start !== 'undefined' && start !== null) _urlParams.start = start;\r\n    if (typeof end !== 'undefined' && end !== null) _urlParams.end = end;\r\n    if (typeof location !== 'undefined' && location !== null) _urlParams.location = location;\r\n    if (typeof price !== 'undefined' && price !== null) _urlParams.price = price;\r\n    if (typeof beds !== 'undefined' && beds !== null) _urlParams.beds = beds;\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n\treturn result;\r\n  }\r\n\r\n  /**\r\n   * Creates a new instance in roomPrices of this model.\r\n   *\r\n   * @param {any} id room id\r\n   *\r\n   * @param {object} data Request data.\r\n   *\r\n   * This method expects a subset of model properties as request parameters.\r\n   *\r\n   * @returns {object[]} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `Room` object.)\r\n   * </em>\r\n   */\r\n  public createManyRoomPrices(id: any, data: any[] = [], customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"POST\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/rooms/:id/roomPrices\";\r\n    let _routeParams: any = {\r\n      id: id\r\n    };\r\n    let _postBody: any = {\r\n      data: data\r\n    };\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Creates a new instance in hotelDiscounts of this model.\r\n   *\r\n   * @param {any} id room id\r\n   *\r\n   * @param {object} data Request data.\r\n   *\r\n   * This method expects a subset of model properties as request parameters.\r\n   *\r\n   * @returns {object[]} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `Room` object.)\r\n   * </em>\r\n   */\r\n  public createManyHotelDiscounts(id: any, data: any[] = [], customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"POST\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/rooms/:id/hotelDiscounts\";\r\n    let _routeParams: any = {\r\n      id: id\r\n    };\r\n    let _postBody: any = {\r\n      data: data\r\n    };\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * The name of the model represented by this $resource,\r\n   * i.e. `Room`.\r\n   */\r\n  public getModelName() {\r\n    return \"Room\";\r\n  }\r\n}\r\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { RoomPrice } from '../../models/RoomPrice';\nimport { SocketConnection } from '../../sockets/socket.connections';\nimport { Hotel } from '../../models/Hotel';\nimport { Room } from '../../models/Room';\n\n\n/**\n * Api services for the `RoomPrice` model.\n */\n@Injectable()\nexport class RoomPriceApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * Fetches belongsTo relation hotel.\n   *\n   * @param {any} id roomPrice id\n   *\n   * @param {boolean} refresh \n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `RoomPrice` object.)\n   * </em>\n   */\n  public getHotel(id: any, refresh: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/roomPrices/:id/hotel\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof refresh !== 'undefined' && refresh !== null) _urlParams.refresh = refresh;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Fetches belongsTo relation room.\n   *\n   * @param {any} id roomPrice id\n   *\n   * @param {boolean} refresh \n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `RoomPrice` object.)\n   * </em>\n   */\n  public getRoom(id: any, refresh: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/roomPrices/:id/room\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof refresh !== 'undefined' && refresh !== null) _urlParams.refresh = refresh;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Patch an existing model instance or insert a new one into the data source.\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - Model instance data\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `RoomPrice` object.)\n   * </em>\n   */\n  public patchOrCreate(data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/roomPrices\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Patch attributes for a model instance and persist it into the data source.\n   *\n   * @param {any} id roomPrice id\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - An object of model property name/value pairs\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `RoomPrice` object.)\n   * </em>\n   */\n  public patchAttributes(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/roomPrices/:id\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `RoomPrice`.\n   */\n  public getModelName() {\n    return \"RoomPrice\";\n  }\n}\n","/* tslint:disable */\r\nimport { Injectable, Inject, Optional } from '@angular/core';\r\nimport { HttpClient, HttpResponse } from '@angular/common/http';\r\nimport { SDKModels } from './SDKModels';\r\nimport { BaseLoopBackApi } from '../core/base.service';\r\nimport { LoopBackConfig } from '../../lb.config';\r\nimport { LoopBackAuth } from '../core/auth.service';\r\nimport { LoopBackFilter,  } from '../../models/BaseModels';\r\nimport { ErrorHandler } from '../core/error.service';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { RoomReservation } from '../../models/RoomReservation';\r\nimport { SocketConnection } from '../../sockets/socket.connections';\r\n\r\n\r\n/**\r\n * Api services for the `RoomReservation` model.\r\n */\r\n@Injectable()\r\nexport class RoomReservationApi extends BaseLoopBackApi {\r\n\r\n  constructor(\r\n    @Inject(HttpClient) protected http: HttpClient,\r\n    @Inject(SocketConnection) protected connection: SocketConnection,\r\n    @Inject(SDKModels) protected models: SDKModels,\r\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\r\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\r\n  ) {\r\n    super(http,  connection,  models, auth, errorHandler);\r\n  }\r\n\r\n  /**\r\n   * Patch an existing model instance or insert a new one into the data source.\r\n   *\r\n   * @param {object} data Request data.\r\n   *\r\n   *  - `data` – `{object}` - Model instance data\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `RoomReservation` object.)\r\n   * </em>\r\n   */\r\n  public patchOrCreate(data: any = {}, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"PATCH\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/roomReservations\";\r\n    let _routeParams: any = {};\r\n    let _postBody: any = {\r\n      data: data\r\n    };\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Patch attributes for a model instance and persist it into the data source.\r\n   *\r\n   * @param {any} id roomReservation id\r\n   *\r\n   * @param {object} data Request data.\r\n   *\r\n   *  - `data` – `{object}` - An object of model property name/value pairs\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `RoomReservation` object.)\r\n   * </em>\r\n   */\r\n  public patchAttributes(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"PATCH\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/roomReservations/:id\";\r\n    let _routeParams: any = {\r\n      id: id\r\n    };\r\n    let _postBody: any = {\r\n      data: data\r\n    };\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * <em>\r\n         * (The remote method definition does not provide any description.)\r\n         * </em>\r\n   *\r\n   * @param {object} data Request data.\r\n   *\r\n   *  - `startDate` – `{date}` - \r\n   *\r\n   *  - `endDate` – `{date}` - \r\n   *\r\n   *  - `roomId` – `{string}` - \r\n   *\r\n   *  - `userId` – `{string}` - \r\n   *\r\n   *  - `price` – `{number}` - \r\n   *\r\n   *  - `hotelDiscountId` – `{string}` - \r\n   *\r\n   *  - `hotelId` – `{string}` - \r\n   *\r\n   *  - `usePoints` – `{boolean}` - \r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * Data properties:\r\n   *\r\n   *  - `retval` – `{object}` - \r\n   */\r\npublic makeReservation(startDate: any, endDate: any, roomId: any, userId: any = '', price: any, hotelDiscountId: any = '', hotelId: any, usePoints: any, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"POST\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/roomReservations/makeReservation\";\r\n    let _routeParams: any = {};\r\n    let _postBody: any = {};\r\n    let _urlParams: any = {};\r\n    if (typeof startDate !== 'undefined' && startDate !== null) _urlParams.startDate = startDate;\r\n    if (typeof endDate !== 'undefined' && endDate !== null) _urlParams.endDate = endDate;\r\n    if (typeof roomId !== 'undefined' && roomId !== null) _urlParams.roomId = roomId;\r\n    if (typeof userId !== 'undefined' && userId !== null) _urlParams.userId = userId;\r\n    if (typeof price !== 'undefined' && price !== null) _urlParams.price = price;\r\n    if (typeof hotelDiscountId !== 'undefined' && hotelDiscountId !== null) _urlParams.hotelDiscountId = hotelDiscountId;\r\n    if (typeof hotelId !== 'undefined' && hotelId !== null) _urlParams.hotelId = hotelId;\r\n    if (typeof usePoints !== 'undefined' && usePoints !== null) _urlParams.usePoints = usePoints;\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * <em>\r\n         * (The remote method definition does not provide any description.)\r\n         * </em>\r\n   *\r\n   * @param {object} data Request data.\r\n   *\r\n   *  - `reservationId` – `{number}` - \r\n   *\r\n   *  - `myuserId` – `{string}` - \r\n   *\r\n   *  - `roomId` – `{string}` - \r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * Data properties:\r\n   *\r\n   *  - `retval` – `{object}` - \r\n   */\r\n  public quickReservation(reservationId: any, myuserId: any, roomId: any, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"POST\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/roomReservations/quickReservation\";\r\n    let _routeParams: any = {};\r\n    let _postBody: any = {};\r\n    let _urlParams: any = {};\r\n    if (typeof reservationId !== 'undefined' && reservationId !== null) _urlParams.reservationId = reservationId;\r\n    if (typeof myuserId !== 'undefined' && myuserId !== null) _urlParams.myuserId = myuserId;\r\n    if (typeof roomId !== 'undefined' && roomId !== null) _urlParams.roomId = roomId;\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * <em>\r\n         * (The remote method definition does not provide any description.)\r\n         * </em>\r\n   *\r\n   * @param {object} data Request data.\r\n   *\r\n   *  - `id` – `{number}` - \r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * Data properties:\r\n   *\r\n   *  - `retval` – `{object}` - \r\n   */\r\n  public cancel(id: any, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"POST\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/roomReservations/cancel\";\r\n    let _routeParams: any = {\r\n\r\n    };\r\n    let _postBody: any = {};\r\n\t\tlet _urlParams: any = { id: id};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * <em>\r\n         * (The remote method definition does not provide any description.)\r\n         * </em>\r\n   *\r\n   * @param {object} data Request data.\r\n   *\r\n   *  - `id` – `{number}` - \r\n   *\r\n   *  - `roomRate` – `{number}` - \r\n   *\r\n   *  - `hotelRate` – `{number}` - \r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * Data properties:\r\n   *\r\n   *  - `retval` – `{object}` - \r\n   */\r\n  public rateHotelAndRoom(id: any, roomRate: any, hotelRate: any, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"POST\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/roomReservations/rateHotelAndRoom\";\r\n    let _routeParams: any = {\r\n\r\n    };\r\n    let _postBody: any = {};\r\n\tlet _urlParams: any = { id: id };\r\n    if (typeof roomRate !== 'undefined' && roomRate !== null) _urlParams.roomRate = roomRate;\r\n    if (typeof hotelRate !== 'undefined' && hotelRate !== null) _urlParams.hotelRate = hotelRate;\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * <em>\r\n         * (The remote method definition does not provide any description.)\r\n         * </em>\r\n   *\r\n   * @param {date} startDate \r\n   *\r\n   * @param {date} endDate \r\n   *\r\n   * @param {string} hotelId \r\n   *\r\n   * @param {number} type \r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * Data properties:\r\n   *\r\n   *  - `retval` – `{object}` - \r\n   */\r\n  public getYearlyReport(startDate: any, endDate: any, hotelId: any, type: any, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"GET\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/roomReservations/getYearlyReport\";\r\n    let _routeParams: any = {};\r\n    let _postBody: any = {};\r\n    let _urlParams: any = {};\r\n    if (typeof startDate !== 'undefined' && startDate !== null) _urlParams.startDate = startDate;\r\n    if (typeof endDate !== 'undefined' && endDate !== null) _urlParams.endDate = endDate;\r\n    if (typeof hotelId !== 'undefined' && hotelId !== null) _urlParams.hotelId = hotelId;\r\n    if (typeof type !== 'undefined' && type !== null) _urlParams.type = type;\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * <em>\r\n         * (The remote method definition does not provide any description.)\r\n         * </em>\r\n   *\r\n   * @param {date} startDate \r\n   *\r\n   * @param {date} endDate \r\n   *\r\n   * @param {string} hotelId \r\n   *\r\n   * @param {number} type \r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * Data properties:\r\n   *\r\n   *  - `retval` – `{object}` - \r\n   */\r\n  public getMonthlyReport(startDate: any, endDate: any, hotelId: any, type: any, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"GET\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/roomReservations/getMonthlyReport\";\r\n    let _routeParams: any = {};\r\n    let _postBody: any = {};\r\n    let _urlParams: any = {};\r\n    if (typeof startDate !== 'undefined' && startDate !== null) _urlParams.startDate = startDate;\r\n    if (typeof endDate !== 'undefined' && endDate !== null) _urlParams.endDate = endDate;\r\n    if (typeof hotelId !== 'undefined' && hotelId !== null) _urlParams.hotelId = hotelId;\r\n    if (typeof type !== 'undefined' && type !== null) _urlParams.type = type;\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * <em>\r\n         * (The remote method definition does not provide any description.)\r\n         * </em>\r\n   *\r\n   * @param {date} startDate \r\n   *\r\n   * @param {date} endDate \r\n   *\r\n   * @param {string} hotelId \r\n   *\r\n   * @param {number} type \r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * Data properties:\r\n   *\r\n   *  - `retval` – `{object}` - \r\n   */\r\n  public getWeeklyReport(startDate: any, endDate: any, hotelId: any, type: any, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"GET\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/roomReservations/getWeeklyReport\";\r\n    let _routeParams: any = {};\r\n    let _postBody: any = {};\r\n    let _urlParams: any = {};\r\n    if (typeof startDate !== 'undefined' && startDate !== null) _urlParams.startDate = startDate;\r\n    if (typeof endDate !== 'undefined' && endDate !== null) _urlParams.endDate = endDate;\r\n    if (typeof hotelId !== 'undefined' && hotelId !== null) _urlParams.hotelId = hotelId;\r\n    if (typeof type !== 'undefined' && type !== null) _urlParams.type = type;\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * <em>\r\n         * (The remote method definition does not provide any description.)\r\n         * </em>\r\n   *\r\n   * @param {string} hotelId \r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * Data properties:\r\n   *\r\n   *  - `retval` – `{objects}` - \r\n   */\r\n  public getRatingReport(hotelId: any, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"GET\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/roomReservations/getRatingReport\";\r\n    let _routeParams: any = {};\r\n    let _postBody: any = {};\r\n    let _urlParams: any = {};\r\n    if (typeof hotelId !== 'undefined' && hotelId !== null) _urlParams.hotelId = hotelId;\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * The name of the model represented by this $resource,\r\n   * i.e. `RoomReservation`.\r\n   */\r\n  public getModelName() {\r\n    return \"RoomReservation\";\r\n  }\r\n}\r\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Roomid } from '../../models/Roomid';\nimport { SocketConnection } from '../../sockets/socket.connections';\nimport { Room } from '../../models/Room';\n\n\n/**\n * Api services for the `Roomid` model.\n */\n@Injectable()\nexport class RoomidApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * Fetches belongsTo relation room.\n   *\n   * @param {any} id roomid id\n   *\n   * @param {boolean} refresh \n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Roomid` object.)\n   * </em>\n   */\n  public getRoom(id: any, refresh: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/roomids/:id/room\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof refresh !== 'undefined' && refresh !== null) _urlParams.refresh = refresh;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Patch an existing model instance or insert a new one into the data source.\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - Model instance data\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Roomid` object.)\n   * </em>\n   */\n  public patchOrCreate(data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/roomids\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Patch attributes for a model instance and persist it into the data source.\n   *\n   * @param {any} id roomid id\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - An object of model property name/value pairs\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Roomid` object.)\n   * </em>\n   */\n  public patchAttributes(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/roomids/:id\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `Roomid`.\n   */\n  public getModelName() {\n    return \"Roomid\";\n  }\n}\n","/* tslint:disable */\r\nimport { Injectable } from '@angular/core';\r\nimport { User } from '../../models/User';\r\nimport { Hotel } from '../../models/Hotel';\r\nimport { Room } from '../../models/Room';\r\nimport { RentalService } from '../../models/RentalService';\r\nimport { Branch } from '../../models/Branch';\r\nimport { Car } from '../../models/Car';\r\nimport { Airline } from '../../models/Airline';\r\nimport { Flight } from '../../models/Flight';\r\nimport { RoomPrice } from '../../models/RoomPrice';\r\nimport { HotelSpecialOffer } from '../../models/HotelSpecialOffer';\r\nimport { HotelDiscount } from '../../models/HotelDiscount';\r\nimport { CarPrice } from '../../models/CarPrice';\r\nimport { Email } from '../../models/Email';\r\nimport { Myuser } from '../../models/Myuser';\r\nimport { CarReservation } from '../../models/CarReservation';\r\nimport { Carid } from '../../models/Carid';\r\nimport { Roomid } from '../../models/Roomid';\r\nimport { RoomReservation } from '../../models/RoomReservation';\r\nimport { UserInfo } from '../../models/UserInfo';\r\nimport { Seat } from '../../models/Seat';\r\nimport { SeatId } from '../../models/SeatId';\r\nimport { SeatReservation } from '../../models/SeatReservation';\r\nimport { CarSpecialOffer } from '../../models/CarSpecialOffer';\r\nimport { QuickFlightReservation } from '../../models/QuickFlightReservation';\r\nimport { Friendship } from '../../models/Friendship';\r\nimport { ReservationOffer } from '../../models/ReservationOffer';\r\nimport { Location } from '../../models/Location';\r\n\r\nexport interface Models { [name: string]: any }\r\n\r\n@Injectable()\r\nexport class SDKModels {\r\n\r\n  private models: Models = {\r\n    User: User,\r\n    Hotel: Hotel,\r\n    Room: Room,\r\n    RentalService: RentalService,\r\n    Branch: Branch,\r\n    Car: Car,\r\n    Airline: Airline,\r\n    Flight: Flight,\r\n    RoomPrice: RoomPrice,\r\n    HotelSpecialOffer: HotelSpecialOffer,\r\n    HotelDiscount: HotelDiscount,\r\n    CarPrice: CarPrice,\r\n    Email: Email,\r\n    Myuser: Myuser,\r\n    CarReservation: CarReservation,\r\n    Carid: Carid,\r\n    Roomid: Roomid,\r\n    RoomReservation: RoomReservation,\r\n    UserInfo: UserInfo,\r\n    Seat: Seat,\r\n    SeatId: SeatId,\r\n    SeatReservation: SeatReservation,\r\n    CarSpecialOffer: CarSpecialOffer,\r\n    QuickFlightReservation: QuickFlightReservation,\r\n    Friendship: Friendship,\r\n    ReservationOffer: ReservationOffer,\r\n    Location: Location,\r\n    \r\n  };\r\n\r\n  public get(modelName: string): any {\r\n    return this.models[modelName];\r\n  }\r\n\r\n  public getAll(): Models {\r\n    return this.models;\r\n  }\r\n\r\n  public getModelNames(): string[] {\r\n    return Object.keys(this.models);\r\n  }\r\n}\r\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Seat } from '../../models/Seat';\nimport { SocketConnection } from '../../sockets/socket.connections';\nimport { Flight } from '../../models/Flight';\n\n\n/**\n * Api services for the `Seat` model.\n */\n@Injectable()\nexport class SeatApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * Fetches belongsTo relation flight.\n   *\n   * @param {any} id seat id\n   *\n   * @param {boolean} refresh \n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Seat` object.)\n   * </em>\n   */\n  public getFlight(id: any, refresh: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/seats/:id/flight\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof refresh !== 'undefined' && refresh !== null) _urlParams.refresh = refresh;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Patch an existing model instance or insert a new one into the data source.\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - Model instance data\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Seat` object.)\n   * </em>\n   */\n  public patchOrCreate(data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/seats\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Patch attributes for a model instance and persist it into the data source.\n   *\n   * @param {any} id seat id\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - An object of model property name/value pairs\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Seat` object.)\n   * </em>\n   */\n  public patchAttributes(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/seats/:id\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `Seat`.\n   */\n  public getModelName() {\n    return \"Seat\";\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { SeatId } from '../../models/SeatId';\nimport { SocketConnection } from '../../sockets/socket.connections';\nimport { Seat } from '../../models/Seat';\n\n\n/**\n * Api services for the `SeatId` model.\n */\n@Injectable()\nexport class SeatIdApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * Fetches belongsTo relation seat.\n   *\n   * @param {any} id seatId id\n   *\n   * @param {boolean} refresh \n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `SeatId` object.)\n   * </em>\n   */\n  public getSeat(id: any, refresh: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/seatIds/:id/seat\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof refresh !== 'undefined' && refresh !== null) _urlParams.refresh = refresh;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Patch an existing model instance or insert a new one into the data source.\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - Model instance data\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `SeatId` object.)\n   * </em>\n   */\n  public patchOrCreate(data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/seatIds\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Patch attributes for a model instance and persist it into the data source.\n   *\n   * @param {any} id seatId id\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - An object of model property name/value pairs\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `SeatId` object.)\n   * </em>\n   */\n  public patchAttributes(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/seatIds/:id\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `SeatId`.\n   */\n  public getModelName() {\n    return \"SeatId\";\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { SeatReservation } from '../../models/SeatReservation';\nimport { SocketConnection } from '../../sockets/socket.connections';\n\n\n/**\n * Api services for the `SeatReservation` model.\n */\n@Injectable()\nexport class SeatReservationApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * Patch an existing model instance or insert a new one into the data source.\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - Model instance data\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `SeatReservation` object.)\n   * </em>\n   */\n  public patchOrCreate(data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/seatReservations\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Patch attributes for a model instance and persist it into the data source.\n   *\n   * @param {any} id seatReservation id\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - An object of model property name/value pairs\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `SeatReservation` object.)\n   * </em>\n   */\n  public patchAttributes(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/seatReservations/:id\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * <em>\n         * (The remote method definition does not provide any description.)\n         * </em>\n   *\n   * @param {object} data Request data.\n   *\n   *  - `seatId` – `{string}` - \n   *\n   *  - `userId` – `{string}` - \n   *\n   *  - `price` – `{number}` - \n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * Data properties:\n   *\n   *  - `retval` – `{object}` - \n   */\n  public makeReservation(seatId: any, userId: any, price: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/seatReservations/makeReservation\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof seatId !== 'undefined' && seatId !== null) _urlParams.seatId = seatId;\n    if (typeof userId !== 'undefined' && userId !== null) _urlParams.userId = userId;\n    if (typeof price !== 'undefined' && price !== null) _urlParams.price = price;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `SeatReservation`.\n   */\n  public getModelName() {\n    return \"SeatReservation\";\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter, SDKToken, AccessToken } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { User } from '../../models/User';\nimport { SocketConnection } from '../../sockets/socket.connections';\n\n\n/**\n * Api services for the `User` model.\n */\n@Injectable()\nexport class UserApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * Find a related item by id for accessTokens.\n   *\n   * @param {any} id User id\n   *\n   * @param {any} fk Foreign key for accessTokens\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `User` object.)\n   * </em>\n   */\n  public findByIdAccessTokens(id: any, fk: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Users/:id/accessTokens/:fk\";\n    let _routeParams: any = {\n      id: id,\n      fk: fk\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Delete a related item by id for accessTokens.\n   *\n   * @param {any} id User id\n   *\n   * @param {any} fk Foreign key for accessTokens\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * This method returns no data.\n   */\n  public destroyByIdAccessTokens(id: any, fk: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"DELETE\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Users/:id/accessTokens/:fk\";\n    let _routeParams: any = {\n      id: id,\n      fk: fk\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Update a related item by id for accessTokens.\n   *\n   * @param {any} id User id\n   *\n   * @param {any} fk Foreign key for accessTokens\n   *\n   * @param {object} data Request data.\n   *\n   * This method expects a subset of model properties as request parameters.\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `User` object.)\n   * </em>\n   */\n  public updateByIdAccessTokens(id: any, fk: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PUT\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Users/:id/accessTokens/:fk\";\n    let _routeParams: any = {\n      id: id,\n      fk: fk\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Queries accessTokens of User.\n   *\n   * @param {any} id User id\n   *\n   * @param {object} filter \n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `User` object.)\n   * </em>\n   */\n  public getAccessTokens(id: any, filter: LoopBackFilter = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Users/:id/accessTokens\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof filter !== 'undefined' && filter !== null) _urlParams.filter = filter;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Creates a new instance in accessTokens of this model.\n   *\n   * @param {any} id User id\n   *\n   * @param {object} data Request data.\n   *\n   * This method expects a subset of model properties as request parameters.\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `User` object.)\n   * </em>\n   */\n  public createAccessTokens(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Users/:id/accessTokens\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Deletes all accessTokens of this model.\n   *\n   * @param {any} id User id\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * This method returns no data.\n   */\n  public deleteAccessTokens(id: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"DELETE\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Users/:id/accessTokens\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Counts accessTokens of User.\n   *\n   * @param {any} id User id\n   *\n   * @param {object} where Criteria to match model instances\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * Data properties:\n   *\n   *  - `count` – `{number}` - \n   */\n  public countAccessTokens(id: any, where: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Users/:id/accessTokens/count\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof where !== 'undefined' && where !== null) _urlParams.where = where;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Patch an existing model instance or insert a new one into the data source.\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - Model instance data\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `User` object.)\n   * </em>\n   */\n  public patchOrCreate(data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Users\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Patch attributes for a model instance and persist it into the data source.\n   *\n   * @param {any} id User id\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - An object of model property name/value pairs\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `User` object.)\n   * </em>\n   */\n  public patchAttributes(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Users/:id\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Login a user with username/email and password.\n   *\n   * @param {string} include Related objects to include in the response. See the description of return value for more details.\n   *   Default value: `user`.\n   *\n   *  - `rememberMe` - `boolean` - Whether the authentication credentials\n   *     should be remembered in localStorage across app/browser restarts.\n   *     Default: `true`.\n   *\n   * @param {object} data Request data.\n   *\n   * This method expects a subset of model properties as request parameters.\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * The response body contains properties of the AccessToken created on login.\n   * Depending on the value of `include` parameter, the body may contain additional properties:\n   * \n   *   - `user` - `U+007BUserU+007D` - Data of the currently logged in user. (`include=user`)\n   * \n   *\n   */\n  public login(credentials: any, include: any = 'user', rememberMe: boolean = true, customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Users/login\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      credentials: credentials\n    };\n    let _urlParams: any = {};\n    if (typeof include !== 'undefined' && include !== null) _urlParams.include = include;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders)\n      .pipe(\n        map(\n        (response: any) => {\n          response.ttl = parseInt(response.ttl);\n          response.rememberMe = rememberMe;\n          this.auth.setToken(response);\n          return response;\n        }\n      )\n      );\n      return result;\n      \n  }\n\n  /**\n   * Logout a user with access token.\n   *\n   * @param {object} data Request data.\n   *\n   * This method does not accept any data. Supply an empty object.\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * This method returns no data.\n   */\n  public logout(customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Users/logout\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n       _urlParams.access_token = this.auth.getAccessTokenId();\n    this.auth.clear(); \n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Trigger user's identity verification with configured verifyOptions\n   *\n   * @param {any} id User id\n   *\n   * @param {object} data Request data.\n   *\n   * This method does not accept any data. Supply an empty object.\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * This method returns no data.\n   */\n  public verify(id: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Users/:id/verify\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Confirm a user registration with identity verification token.\n   *\n   * @param {string} uid \n   *\n   * @param {string} token \n   *\n   * @param {string} redirect \n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * This method returns no data.\n   */\n  public confirm(uid: any, token: any, redirect: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Users/confirm\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof uid !== 'undefined' && uid !== null) _urlParams.uid = uid;\n    if (typeof token !== 'undefined' && token !== null) _urlParams.token = token;\n    if (typeof redirect !== 'undefined' && redirect !== null) _urlParams.redirect = redirect;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Reset password for a user with email.\n   *\n   * @param {object} data Request data.\n   *\n   * This method expects a subset of model properties as request parameters.\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * This method returns no data.\n   */\n  public resetPassword(options: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Users/reset\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      options: options\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Change a user's password.\n   *\n   * @param {object} data Request data.\n   *\n   *  - `oldPassword` – `{string}` - \n   *\n   *  - `newPassword` – `{string}` - \n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * This method returns no data.\n   */\n  public changePassword(oldPassword: any, newPassword: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Users/change-password\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: {\n        oldPassword: oldPassword,\n        newPassword: newPassword\n      }\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Reset user's password via a password-reset token.\n   *\n   * @param {object} data Request data.\n   *\n   *  - `newPassword` – `{string}` - \n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * This method returns no data.\n   */\n  public setPassword(newPassword: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Users/reset-password\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: {\n        newPassword: newPassword\n      }\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Creates a new instance in accessTokens of this model.\n   *\n   * @param {any} id User id\n   *\n   * @param {object} data Request data.\n   *\n   * This method expects a subset of model properties as request parameters.\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `User` object.)\n   * </em>\n   */\n  public createManyAccessTokens(id: any, data: any[] = [], customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Users/:id/accessTokens\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n  /**\n   * @ngdoc method\n   * @name sdk.User#getCurrent\n   * @methodOf sdk.User\n   *\n   * @description\n   *\n   * Get data of the currently logged user. Fail with HTTP result 401\n   * when there is no user logged in.\n   *\n   * @returns object An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   */\n  public getCurrent(filter: LoopBackFilter = {}): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() + \"/Users\" + \"/:id\";\n    let id: any = this.auth.getCurrentUserId();\n    if (id == null)\n    id = '__anonymous__';\n    let _routeParams: any = { id: id };\n    let _urlParams: any = {};\n    let _postBody: any = {};\n    if (filter) _urlParams.filter = filter;\n    return this.request(_method, _url, _routeParams, _urlParams, _postBody);\n  }\n  /**\n   * Get data of the currently logged user that was returned by the last\n   * call to {@link sdk.User#login} or\n   * {@link sdk.User#getCurrent}. Return null when there\n   * is no user logged in or the data of the current user were not fetched\n   * yet.\n   *\n   * @returns object An Account instance.\n   */\n  public getCachedCurrent() {\n    return this.auth.getCurrentUserData();\n  }\n  /**\n   * Get data of the currently logged access tokern that was returned by the last\n   * call to {@link sdk.User#login}\n   *\n   * @returns object An AccessToken instance.\n   */\n  public getCurrentToken(): AccessToken {\n    return this.auth.getToken();\n  }\n  /**\n   * @name sdk.User#isAuthenticated\n   *\n   * @returns {boolean} True if the current user is authenticated (logged in).\n   */\n  public isAuthenticated() {\n    return !(this.getCurrentId() === '' || this.getCurrentId() == null || this.getCurrentId() == 'null');\n  }\n\n  /**\n   * @name sdk.User#getCurrentId\n   *\n   * @returns object Id of the currently logged-in user or null.\n   */\n  public getCurrentId() {\n    return this.auth.getCurrentUserId();\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `User`.\n   */\n  public getModelName() {\n    return \"User\";\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { UserInfo } from '../../models/UserInfo';\nimport { SocketConnection } from '../../sockets/socket.connections';\nimport { Myuser } from '../../models/Myuser';\n\n\n/**\n * Api services for the `UserInfo` model.\n */\n@Injectable()\nexport class UserInfoApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * Fetches belongsTo relation userId.\n   *\n   * @param {any} id UserInfo id\n   *\n   * @param {boolean} refresh \n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `UserInfo` object.)\n   * </em>\n   */\n  public getUserId(id: any, refresh: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/UserInfos/:id/userId\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof refresh !== 'undefined' && refresh !== null) _urlParams.refresh = refresh;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Patch an existing model instance or insert a new one into the data source.\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - Model instance data\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `UserInfo` object.)\n   * </em>\n   */\n  public patchOrCreate(data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/UserInfos\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Patch attributes for a model instance and persist it into the data source.\n   *\n   * @param {any} id UserInfo id\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - An object of model property name/value pairs\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `UserInfo` object.)\n   * </em>\n   */\n  public patchAttributes(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/UserInfos/:id\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `UserInfo`.\n   */\n  public getModelName() {\n    return \"UserInfo\";\n  }\n}\n","/* tslint:disable */\r\nexport * from './User';\r\nexport * from './Hotel';\r\nexport * from './Room';\r\nexport * from './RentalService';\r\nexport * from './Branch';\r\nexport * from './Car';\r\nexport * from './Airline';\r\nexport * from './Flight';\r\nexport * from './RoomPrice';\r\nexport * from './HotelSpecialOffer';\r\nexport * from './HotelDiscount';\r\nexport * from './CarPrice';\r\nexport * from './Email';\r\nexport * from './Myuser';\r\nexport * from './CarReservation';\r\nexport * from './Carid';\r\nexport * from './Roomid';\r\nexport * from './RoomReservation';\r\nexport * from './UserInfo';\r\nexport * from './Seat';\r\nexport * from './SeatId';\r\nexport * from './SeatReservation';\r\nexport * from './CarSpecialOffer';\r\nexport * from './QuickFlightReservation';\r\nexport * from './Friendship';\r\nexport * from './ReservationOffer';\r\nexport * from './Location';\r\nexport * from './SDKModels';\r\nexport * from './logger.service';\r\n","/* tslint:disable */\nimport { Injectable } from '@angular/core';\nimport { LoopBackConfig } from '../../lb.config';\n/**\n* @author Jonathan Casarrubias <twitter:@johncasarrubias> <github:@johncasarrubias>\n* @module LoggerService\n* @license MIT\n* @description\n* Console Log wrapper that can be disabled in production mode\n**/\n@Injectable()\nexport class LoggerService {\n\n  log(...args: any[]) {\n    if (LoopBackConfig.debuggable())\n    console.log.apply(console, args);\n  }\n\n  info(...args: any[]) {\n    if (LoopBackConfig.debuggable())\n    console.info.apply(console, args);\n  }\n\n  error(...args: any[]) {\n    if (LoopBackConfig.debuggable())\n    console.error.apply(console, args);\n  }\n\n  count(arg: string) {\n    if (LoopBackConfig.debuggable())\n    console.count(arg);\n  }\n\n  group(arg: string) {\n    if (LoopBackConfig.debuggable())\n    console.count(arg);\n  }\n\n  groupEnd() {\n    if (LoopBackConfig.debuggable())\n    console.groupEnd();\n  }\n\n  profile(arg: string) {\n    if (LoopBackConfig.debuggable())\n    console.count(arg);\n  }\n\n  profileEnd() {\n    if (LoopBackConfig.debuggable())\n    console.profileEnd();\n  }\n\n  time(arg: string) {\n    if (LoopBackConfig.debuggable())\n    console.time(arg);\n  }\n\n  timeEnd(arg: string) {\n    if (LoopBackConfig.debuggable())\n    console.timeEnd(arg);\n  }\n}\n","/* tslint:disable */\nexport * from './core/index';\nexport * from './custom/index';\n","/* tslint:disable */\nimport * as io from 'socket.io-client';\n/**\n* @author Jonathan Casarrubias <twitter:@johncasarrubias> <github:@mean-expert-official>\n* @module SocketBrowser\n* @license MIT\n* @description\n* This module handle socket connections for web browsers, it will be DI Swapped\n* depending on the platform environment.\n* This module will be generated when the -d ng2web flag is set\n**/\nexport class SocketBrowser {\n  /**\n   * @method connect\n   * @param {string} url URL path to connect with the server.\n   * @param {any} options Any socket.io v1 =< valid options\n   * @return {any} Not currently a socket.io-client for web Typings implemented.\n   * @description\n   * This method will return a valid socket connection.  \n   **/\n  connect(url: string, options: any): any {\n    return io(url, options);\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject, NgZone } from '@angular/core';\nimport { SocketDriver } from './socket.driver';\nimport { AccessToken } from '../models';\nimport { Observable, Subject } from 'rxjs';\nimport { share } from 'rxjs/operators';\nimport { LoopBackConfig } from '../lb.config';\n/**\n* @author Jonathan Casarrubias <twitter:@johncasarrubias> <github:@mean-expert-official>\n* @module SocketConnection\n* @license MIT\n* @description\n* This module handle socket connections and return singleton instances for each\n* connection, it will use the SDK Socket Driver Available currently supporting\n* Angular 2 for web, NativeScript 2 and Angular Universal.\n**/\n@Injectable()\nexport class SocketConnection {\n  private socket: any;\n  private subjects: {\n    onConnect: Subject<any>,\n    onDisconnect: Subject<any>,\n    onAuthenticated: Subject<any>,\n    onUnAuthorized: Subject<any>\n  } = {\n    onConnect: new Subject(),\n    onDisconnect: new Subject(),\n    onAuthenticated: new Subject(),\n    onUnAuthorized: new Subject()\n  };\n  public sharedObservables: {\n    sharedOnConnect?: Observable<any>,\n    sharedOnDisconnect?: Observable<any>,\n    sharedOnAuthenticated?: Observable<any>,\n    sharedOnUnAuthorized?: Observable<any>\n  } = {};\n  public authenticated: boolean = false;\n  /**\n   * @method constructor\n   * @param {SocketDriver} driver Socket IO Driver\n   * @param {NgZone} zone Angular 2 Zone\n   * @description\n   * The constructor will set references for the shared hot observables from\n   * the class subjects. Then it will subscribe each of these observables\n   * that will create a channel that later will be shared between subscribers.\n   **/\n  constructor(\n    @Inject(SocketDriver) private driver: SocketDriver,\n    @Inject(NgZone) private zone: NgZone\n  ) {\n    this.sharedObservables = {\n      sharedOnConnect: this.subjects.onConnect.asObservable().pipe(share()),\n      sharedOnDisconnect: this.subjects.onDisconnect.asObservable().pipe(share()),\n      sharedOnAuthenticated: this.subjects.onAuthenticated.asObservable().pipe(share()),\n      sharedOnUnAuthorized: this.subjects.onUnAuthorized.asObservable().pipe(share())\n    };\n    // This is needed to create the first channel, subsequents will share the connection\n    // We are using Hot Observables to avoid duplicating connection status events.\n    this.sharedObservables.sharedOnConnect.subscribe();\n    this.sharedObservables.sharedOnDisconnect.subscribe();\n    this.sharedObservables.sharedOnAuthenticated.subscribe();\n    this.sharedObservables.sharedOnUnAuthorized.subscribe();\n  }\n  /**\n   * @method connect\n   * @param {AccessToken} token AccesToken instance\n   * @return {void}\n   * @description\n   * This method will create a new socket connection when not previously established.\n   * If there is a broken connection it will re-connect.\n   **/\n  public connect(token: AccessToken = null): void {\n    if (!this.socket) {\n      console.info('Creating a new connection with: ', LoopBackConfig.getPath());\n      // Create new socket connection\n      this.socket = this.driver.connect(LoopBackConfig.getPath(), {\n        log: false,\n        secure: LoopBackConfig.isSecureWebSocketsSet(),\n        forceNew: true,\n        forceWebsockets: true,\n        transports: ['websocket']\n      });\n      // Listen for connection\n      this.on('connect', () => {\n        this.subjects.onConnect.next('connected');\n        // Authenticate or start heartbeat now    \n        this.emit('authentication', token);\n      });\n      // Listen for authentication\n      this.on('authenticated', () => {\n        this.authenticated = true;\n        this.subjects.onAuthenticated.next();\n        this.heartbeater();\n      })\n      // Listen for authentication\n      this.on('unauthorized', (err: any) => {\n        this.authenticated = false;\n        this.subjects.onUnAuthorized.next(err);\n      })\n      // Listen for disconnections\n      this.on('disconnect', (status: any) => this.subjects.onDisconnect.next(status));\n    } else if (this.socket && !this.socket.connected){\n      if (typeof this.socket.off === 'function') {\n        this.socket.off();\n      }\n      if (typeof this.socket.destroy === 'function') {\n        this.socket.destroy();\n      }\n      delete this.socket;\n      this.connect(token);\n    }\n  }\n  /**\n   * @method isConnected\n   * @return {boolean}\n   * @description\n   * This method will return true or false depending on established connections\n   **/\n  public isConnected(): boolean {\n    return (this.socket && this.socket.connected);\n  }\n  /**\n   * @method on\n   * @param {string} event Event name\n   * @param {Function} handler Event listener handler\n   * @return {void}\n   * @description\n   * This method listen for server events from the current WebSocket connection.\n   * This method is a facade that will wrap the original \"on\" method and run it\n   * within the Angular Zone to avoid update issues.\n   **/\n  public on(event: string, handler: Function): void {\n    this.socket.on(event, (data: any) => this.zone.run(() => handler(data)));\n  }\n  /**\n   * @method emit\n   * @param {string} event Event name\n   * @param {any=} data Any type of data\n   * @return {void}\n   * @description\n   * This method will send any type of data to the server according the event set.\n   **/\n  public emit(event: string, data?: any): void {\n    if (data) {\n      this.socket.emit(event, data);\n    } else {\n      this.socket.emit(event);\n    }\n  }\n  /**\n   * @method removeListener\n   * @param {string} event Event name\n   * @param {Function} handler Event listener handler\n   * @return {void}\n   * @description\n   * This method will wrap the original \"on\" method and run it within the Angular Zone\n   * Note: off is being used since the nativescript socket io client does not provide\n   * removeListener method, but only provides with off which is provided in any platform.\n   **/\n  public removeListener(event: string, handler: Function): void {\n    if (typeof this.socket.off === 'function') {\n      this.socket.off(event, handler);\n    }\n  }\n  /**\n   * @method removeAllListeners\n   * @param {string} event Event name\n   * @param {Function} handler Event listener handler\n   * @return {void}\n   * @description\n   * This method will wrap the original \"on\" method and run it within the Angular Zone\n   * Note: off is being used since the nativescript socket io client does not provide\n   * removeListener method, but only provides with off which is provided in any platform.\n   **/\n  public removeAllListeners(event: string): void {\n    if (typeof this.socket.removeAllListeners === 'function') {\n      this.socket.removeAllListeners(event);\n    }\n  }\n  /**\n   * @method disconnect\n   * @return {void}\n   * @description\n   * This will disconnect the client from the server\n   **/\n  public disconnect(): void {\n    this.socket.disconnect();\n  }\n  /**\n   * @method heartbeater\n   * @return {void}\n   * @description\n   * This will keep the connection as active, even when users are not sending\n   * data, this avoids disconnection because of a connection not being used.\n   **/\n  private heartbeater(): void {\n    let heartbeater: any = setInterval(() => {\n      if (this.isConnected()) {\n        this.socket.emit('lb-ping');\n      } else {\n        this.socket.removeAllListeners('lb-pong');\n        clearInterval(heartbeater);\n      }\n    }, 15000);\n    this.socket.on('lb-pong', (data: any) => console.info('Heartbeat: ', data));\n  }\n}\n","/* tslint:disable */\n/**\n * @module SocketDriver\n * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n * @license MIT\n * @description\n * The SocketDriver class is used for dependency injection swapping.\n * It will be provided using factory method from different sources.\n **/\nexport class SocketDriver {\n  connect(url: any, options: any) {}\n}\n","/* tslint:disable */\nimport { Injectable } from '@angular/core';\nexport interface CookieInterface { [key: string]: any }\n/**\n* @author Jonathan Casarrubias <twitter:@johncasarrubias> <github:@mean-expert-official>\n* @module CookieBrowser\n* @license MIT\n* @description\n* This module handle cookies, it will be provided using DI Swapping according the\n* SDK Socket Driver Available currently supporting Angular 2 for web and NativeScript 2.\n**/\n@Injectable()\nexport class CookieBrowser {\n  /**\n   * @type {CookieInterface}\n   **/\n  private cookies: CookieInterface = {};\n  /**\n   * @method get\n   * @param {string} key Cookie key name\n   * @return {any}\n   * @description\n   * The getter will return any type of data persisted in cookies.\n   **/\n  get(key: string): any {\n    if (!this.cookies[key]) {\n      let cookie = window.document\n                         .cookie.split('; ')\n                         .filter((item: any) => item.split('=')[0] === key).pop();\n      if (!cookie) {\n        return null;\n      }\n\n      this.cookies[key] = this.parse(cookie.split('=').slice(1).join('='));\n    }\n\n    return this.cookies[key];\n  }\n  /**\n   * @method set\n   * @param {string} key Cookie key name\n   * @param {any} value Any value\n   * @param {Date=} expires The date of expiration (Optional)\n   * @return {void}\n   * @description\n   * The setter will return any type of data persisted in cookies.\n   **/\n  set(key: string, value: any, expires?: Date): void {\n    this.cookies[key] = value;\n    let cookie = `${key}=${encodeURI(value)}; path=/${expires ? `; expires=${ expires.toUTCString() }` : ''}`;\n    window.document.cookie = cookie;\n  }\n  /**\n   * @method remove\n   * @param {string} key Cookie key name\n   * @return {void}\n   * @description\n   * This method will remove a cookie from the client.\n   **/\n  remove(key: string) {\n    document.cookie = key + '=; path=/; expires=Thu, 01 Jan 1970 00:00:01 GMT;';\n    delete this.cookies[key];\n  }\n  /**\n   * @method parse\n   * @param {any} value Input data expected to be JSON\n   * @return {void}\n   * @description\n   * This method will parse the string as JSON if possible, otherwise will\n   * return the value itself.\n   **/\n  private parse(value: any) {\n    try {\n        return JSON.parse(decodeURI(value));\n    } catch (e) {\n        return value;\n    }\n  }\n}\n","/* tslint:disable */\nimport { Injectable } from '@angular/core';\n/**\n* @author Jonathan Casarrubias <twitter:@johncasarrubias> <github:@mean-expert-official>\n* @module StorageBrowser\n* @license MIT\n* @description\n* This module handle localStorage, it will be provided using DI Swapping according the\n* SDK Socket Driver Available currently supporting Angular 2 for web and NativeScript 2.\n**/\n@Injectable()\nexport class StorageBrowser {\n  /**\n   * @method get\n   * @param {string} key Storage key name\n   * @return {any}\n   * @description\n   * The getter will return any type of data persisted in localStorage.\n   **/\n  get(key: string): any {\n    let data: string = localStorage.getItem(key);\n    return this.parse(data);\n  }\n  /**\n   * @method set\n   * @param {string} key Storage key name\n   * @param {any} value Any value\n   * @return {void}\n   * @description\n   * The setter will return any type of data persisted in localStorage.\n   **/\n  set(key: string, value: any, expires?: Date): void {\n    localStorage.setItem(\n      key,\n      typeof value === 'object' ? JSON.stringify(value) : value\n    );\n  }\n  /**\n   * @method remove\n   * @param {string} key Storage key name\n   * @return {void}\n   * @description\n   * This method will remove a localStorage item from the client.\n   **/\n  remove(key: string): void {\n    if (localStorage[key]) {\n      localStorage.removeItem(key);\n    } else {\n      console.log('Trying to remove unexisting key: ', key);\n    }\n  }\n  /**\n   * @method parse\n   * @param {any} value Input data expected to be JSON\n   * @return {void}\n   * @description\n   * This method will parse the string as JSON if possible, otherwise will\n   * return the value itself.\n   **/\n  private parse(value: any) {\n    try {\n        return JSON.parse(value);\n    } catch (e) {\n        return value;\n    }\n  }\n}\n","/* tslint:disable */\n/**\n * @module Storage\n * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n * @license MIT\n * @description\n * The InternalStorage class is used for dependency injection swapping.\n * It will be provided using factory method from different sources.\n **/\nexport class BaseStorage {\n  /**\n   * @method get\n   * @param {string} key Storage key name\n   * @return {any}\n   * @description\n   * The getter will return any type of data persisted in storage.\n   **/\n  get(key: string): any {}\n  /**\n   * @method set\n   * @param {string} key Storage key name\n   * @param {any} value Any value\n   * @return {void}\n   * @description\n   * The setter will return any type of data persisted in localStorage.\n   **/\n  set(key: string, value: any, expires?: Date): void {}\n  /**\n   * @method remove\n   * @param {string} key Storage key name\n   * @return {void}\n   * @description\n   * This method will remove a localStorage item from the client.\n   **/\n  remove(key: string): void {}\n}\n/**\n * @module InternalStorage\n * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n * @license MIT\n * @description\n * The InternalStorage class is used for dependency injection swapping.\n * It will be provided using factory method from different sources.\n * This is mainly required because Angular Universal integration.\n * It does inject a CookieStorage instead of LocalStorage.\n **/\nexport class InternalStorage extends BaseStorage {}\n/**\n * @module SDKStorage\n * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n * @license MIT\n * @description\n * The SDKStorage class is used for dependency injection swapping.\n * It will be provided using factory method according the right environment.\n * This is created for public usage, to allow persisting custom data\n * Into the local storage API.\n **/\nexport class SDKStorage extends BaseStorage {}\n","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\r\\n  <a mat-button (click) = \\\"modifyButton()\\\"> Update </a>\\r\\n  <a mat-button (click) = \\\"changePasswordButton()\\\"> Change password </a>\\r\\n  <a mat-button (click) = \\\"friendsButton()\\\"> Friends </a>\\r\\n  <span class=\\\"flex-spacer\\\"></span>\\r\\n</mat-toolbar>\\r\\n\\r\\n<div *ngIf = \\\"modifyActive\\\"\\r\\n  fxLayout=\\\"rows\\\"\\r\\n  fxLayoutGap=\\\"80px\\\">\\r\\n  <div class=\\\"container\\\"\\r\\n    fxLayout=\\\"column\\\"\\r\\n    fxLayoutGap=\\\"10px\\\">\\r\\n\\r\\n    <div fxFlex>\\r\\n      <div>\\r\\n          <h3>Modify your information</h3>\\r\\n          <hr>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div fxFlex class=\\\"form-size\\\">\\r\\n        <form novalidate [formGroup]=\\\"modifyUserForm\\\" #fformModifyUser=\\\"ngForm\\\" (ngSubmit)=\\\"onModifyUserSubmit()\\\">\\r\\n          <p>\\r\\n            <mat-form-field class=\\\"half-width\\\">\\r\\n              <input matInput formControlName=\\\"firstName\\\" placeholder=\\\"First name\\\" type=\\\"text\\\">\\r\\n            </mat-form-field>\\r\\n          </p>\\r\\n          <p>\\r\\n            <mat-form-field class=\\\"half-width\\\">\\r\\n              <input matInput formControlName=\\\"lastName\\\" placeholder=\\\"Last name\\\" type=\\\"text\\\">\\r\\n            </mat-form-field>\\r\\n          </p>\\r\\n          <p>\\r\\n            <mat-form-field class=\\\"half-width\\\">\\r\\n              <mat-label>Gender</mat-label>\\r\\n              <mat-select formControlName=\\\"gender\\\">\\r\\n                <mat-option *ngFor=\\\"let gender of genders\\\" [value]=\\\"gender.value\\\">\\r\\n                  {{gender.viewValue}}\\r\\n                </mat-option>\\r\\n              </mat-select>\\r\\n            </mat-form-field>\\r\\n          </p>\\r\\n          <p>\\r\\n            <mat-form-field class=\\\"half-width\\\">\\r\\n              <input matInput formControlName=\\\"dateOfBirth\\\" [matDatepicker]=\\\"birthDatepicker\\\" placeholder=\\\"Date of birth\\\">\\r\\n              <mat-datepicker-toggle [for]=\\\"birthDatepicker\\\"></mat-datepicker-toggle>\\r\\n              <mat-datepicker #birthDatepicker></mat-datepicker>\\r\\n            </mat-form-field>\\r\\n          </p>\\r\\n          <p>\\r\\n            <mat-form-field class=\\\"half-width\\\">\\r\\n              <input matInput formControlName=\\\"phoneNumber\\\" placeholder=\\\"Phone number\\\" type=\\\"text\\\">\\r\\n            </mat-form-field>\\r\\n          </p>\\r\\n          <p>\\r\\n            <mat-form-field class=\\\"half-width\\\">\\r\\n              <textarea matInput formControlName=\\\"aboutMe\\\" placeholder=\\\"About me\\\" rows=6></textarea>\\r\\n            </mat-form-field>\\r\\n          </p>\\r\\n          <button type=\\\"submit\\\" mat-button class=\\\"background-primary text-floral-white\\\"\\r\\n          [disabled]=\\\"modifyUserForm.invalid\\\">Submit</button>\\r\\n        </form>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div *ngIf = \\\"changePasswordActive\\\" fxLayout=\\\"rows\\\" fxLayoutGap=\\\"80px\\\">\\r\\n  <div class=\\\"container\\\" fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\">\\r\\n    <div fxFlex>\\r\\n        <div>\\r\\n            <h3>Change your password</h3>\\r\\n            <hr>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div fxFlex class=\\\"form-size\\\">\\r\\n        <form novalidate [formGroup]=\\\"changePasswordForm\\\" #changepaswordform=\\\"ngForm\\\" (ngSubmit)=\\\"onChangePasswordSubmit()\\\">\\r\\n          <p>\\r\\n              <mat-form-field class=\\\"half-width\\\">\\r\\n                <input matInput formControlName=\\\"oldPassword\\\" placeholder=\\\"Old password\\\" type=\\\"password\\\">\\r\\n                <mat-error *ngIf=\\\"changePasswordFormErrors.oldPassword\\\">\\r\\n                  {{ changePasswordFormErrors.oldPassword }}\\r\\n                </mat-error>\\r\\n              </mat-form-field>\\r\\n            </p>\\r\\n            <p>\\r\\n              <mat-form-field class=\\\"half-width\\\">\\r\\n                <input matInput formControlName=\\\"newPassword\\\" placeholder=\\\"New password\\\" type=\\\"password\\\">\\r\\n                <mat-error *ngIf=\\\"changePasswordFormErrors.newPassword\\\">\\r\\n                  {{ changePasswordFormErrors.newPassword }}\\r\\n                </mat-error>\\r\\n              </mat-form-field>\\r\\n            </p>\\r\\n            <button type=\\\"submit\\\" mat-button class=\\\"background-primary text-floral-white\\\" [disabled]=\\\"changePasswordForm.invalid\\\">Submit</button>\\r\\n        </form>\\r\\n      </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"friendsActive\\\">\\r\\n <app-friends></app-friends>\\r\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXIvdXNlci5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, Inject, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { LoopBackConfig, UserInfo, Myuser, MyuserApi } from '../shared/sdk';\r\nimport { API_VERSION } from '../shared/baseUrl';\r\nimport { MatSelectModule} from '@angular/material/select';\r\nimport { MatSnackBar } from '@angular/material';\r\nimport { UserInfoApi } from '../shared/sdk';\r\n\r\n@Component({\r\n  selector: 'app-user',\r\n  templateUrl: './user.component.html',\r\n  styleUrls: ['./user.component.scss']\r\n})\r\nexport class UserComponent implements OnInit {\r\n\r\n  modifyActive = true;\r\n  homeActive = false;\r\n  changePasswordActive = false;\r\n  friendsActive = false;\r\n\r\n  loggedUser: Myuser;\r\n  userInfo: UserInfo;\r\n  hasInfo: boolean;\r\n  genders = [\r\n    {\r\n      \"value\":\"m\",\r\n      \"viewValue\":\"Male\"\r\n    }, {\r\n      \"value\":\"f\",\r\n      \"viewValue\":\"Female\"\r\n    }, {\r\n      \"value\":\"l\",\r\n      \"viewValue\":\"Llama\"\r\n    }];\r\n\r\n  modifyUserFormErrors = [];\r\n  modifyUserFormValidationMessages = [];\r\n\r\n  changePasswordFormErrors = {\r\n    'oldPassword': '',\r\n    'newPassword': ''\r\n  };\r\n\r\n  changePasswordFormValidationMessages = {\r\n    'oldPassword': {\r\n      'required': 'Old password has to be filled in',\r\n    },\r\n    'newPassword': {\r\n      'required': 'New password has to be filled in'\r\n    }\r\n  };\r\n\r\n\r\n  modifyUserForm: FormGroup;\r\n  @ViewChild('modifyUserForm') modifyUserFormDirective;\r\n\r\n  changePasswordForm: FormGroup;\r\n  @ViewChild('changepasswordform') changePasswordFormDirective;\r\n\r\n  constructor(@Inject('baseURL') private baseURL,\r\n    private userinfoservice: UserInfoApi,\r\n    private myuserservice: MyuserApi,\r\n    private fb: FormBuilder,\r\n    public snackBar: MatSnackBar\r\n  ) { \r\n    LoopBackConfig.setBaseURL(baseURL);\r\n    LoopBackConfig.setApiVersion(API_VERSION);\r\n    this.createModifyUserForm();\r\n    this.createChangePasswordForm();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loggedUser = this.myuserservice.getCachedCurrent();\r\n    console.log(this.loggedUser);\r\n    console.log(this.loggedUser.id);\r\n    this.hasInfo = false;\r\n    this.userinfoservice.find().subscribe(\r\n      (users: UserInfo[]) => {\r\n        users.forEach(user => {\r\n          if (user.userIdId == this.loggedUser.id) {\r\n            this.userInfo = user;\r\n            this.setValueModifyUserForm();\r\n            console.log(user);\r\n            this.hasInfo = true;\r\n          }\r\n        });\r\n        if (!this.hasInfo) {\r\n          this.userInfo = new UserInfo();\r\n          this.userInfo.userIdId = this.loggedUser.id;\r\n        }\r\n      }\r\n    );\r\n    /*this.userinfoservice.findOne({'where': {'userIdId': this.loggedUser.id}, 'include': 'userId'})\r\n    .subscribe(\r\n      (user: UserInfo) => {\r\n        this.userInfo = user;\r\n        this.setValueModifyUserForm();\r\n        console.log(user);\r\n        this.hasInfo = true;\r\n      },\r\n      (error) => {\r\n        this.userInfo = new UserInfo();\r\n        this.userInfo.userIdId = this.loggedUser.id;\r\n        console.log(error);\r\n        this.hasInfo = false;\r\n      }\r\n    );*/\r\n  }\r\n\r\n  openSnackBar(message: string, action: string) {\r\n    this.snackBar.open(message, action, {\r\n       duration: 2000,\r\n    });\r\n  }\r\n\r\n  onValueChangedModifyUser(data?: any) {\r\n    if (!this.modifyUserForm) {return; }\r\n    const form = this.modifyUserForm;\r\n    for (const field in this.modifyUserFormErrors){\r\n      if (this.modifyUserFormErrors.hasOwnProperty(field)){\r\n        this.modifyUserFormErrors[field] = '';\r\n        const control = form.get(field);\r\n        if (control && !control.valid) {\r\n          const messages = this.modifyUserFormValidationMessages[field];\r\n          for (const key in control.errors){\r\n            if (control.errors.hasOwnProperty(key)){\r\n              this.modifyUserFormErrors[field] += messages[key] + ' ';\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  onValueChangedChangePassword(data?: any) {\r\n    if (!this.changePasswordForm) {return; }\r\n    const form = this.changePasswordForm;\r\n    for (const field in this.changePasswordFormErrors){\r\n      if (this.changePasswordFormErrors.hasOwnProperty(field)){\r\n        this.changePasswordFormErrors[field] = '';\r\n        const control = form.get(field);\r\n        if (control && !control.valid) {\r\n          const messages = this.changePasswordFormValidationMessages[field];\r\n          for (const key in control.errors){\r\n            if (control.errors.hasOwnProperty(key)){\r\n              this.changePasswordFormErrors[field] += messages[key] + ' ';\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  createModifyUserForm() {\r\n    this.modifyUserForm = this.fb.group({\r\n      'firstName': '',\r\n      'lastName': '',\r\n      'dateOfBirth': '',\r\n      'gender' : '',\r\n      'phoneNumber' : '',\r\n      'aboutMe' : ''\r\n    });\r\n    this.modifyUserForm.valueChanges\r\n      .subscribe(data => this.onValueChangedModifyUser(data));\r\n    this.onValueChangedModifyUser();\r\n  }\r\n\r\n  createChangePasswordForm() {\r\n    this.changePasswordForm = this.fb.group({\r\n      'oldPassword': ['', Validators.required],\r\n      'newPassword': ['', Validators.required]\r\n    });\r\n    this.changePasswordForm.valueChanges\r\n    .subscribe(data => this.onValueChangedChangePassword(data));\r\n    this.onValueChangedChangePassword();\r\n  }\r\n\r\n  setValueModifyUserForm() {\r\n    this.modifyUserForm.setValue({\r\n      'firstName': this.userInfo.firstName,\r\n      'lastName': this.userInfo.lastName,\r\n      'dateOfBirth': this.userInfo.dateOfBirth,\r\n      'gender' : this.userInfo.gender,\r\n      'phoneNumber' : this.userInfo.phoneNumber,\r\n      'aboutMe' : this.userInfo.aboutMe\r\n    });\r\n  }\r\n\r\n  onModifyUserSubmit() {\r\n    if (this.hasInfo) {\r\n      let id = this.userInfo.id;\r\n      this.userInfo = this.modifyUserForm.value;\r\n      this.userInfo.userIdId = this.loggedUser.id;\r\n      this.userInfo.userId = this.loggedUser;\r\n      this.userinfoservice.updateAttributes(id, this.userInfo)\r\n      .subscribe(result => {\r\n        console.log(\"Updating>>> \\n\" + result);\r\n      });\r\n    }\r\n    else {\r\n      this.userInfo = this.modifyUserForm.value;\r\n      this.userInfo.userIdId = this.loggedUser.id;\r\n      this.userInfo.userId = this.loggedUser;\r\n      this.userinfoservice.create(this.userInfo)\r\n      .subscribe(result => {\r\n        console.log(\"Creating>>> \\n\" + result);\r\n      });\r\n    }\r\n    \r\n  }\r\n\r\n  onChangePasswordSubmit() {\r\n    this.myuserservice.changePassword(this.changePasswordForm.value.oldPassword, this.changePasswordForm.value.newPassword)\r\n    .subscribe(\r\n      (result) => {\r\n        this.openSnackBar(\"Password successfully changed\", \"Dismiss\");\r\n      },\r\n      (err) => {\r\n        this.openSnackBar(\"Failed to change password\", \"Dismiss\");\r\n      }\r\n    )\r\n  }\r\n\r\n  modifyButton(){\r\n    this.modifyActive = true;\r\n    this.homeActive = false;\r\n    this.changePasswordActive = false;\r\n    this.friendsActive = false;\r\n  }\r\n\r\n  changePasswordButton() {\r\n    this.changePasswordActive = true;\r\n    this.modifyActive = false;\r\n    this.homeActive = false;\r\n    this.friendsActive = false;\r\n  }\r\n\r\n  friendsButton() {\r\n    this.changePasswordActive = false;\r\n    this.modifyActive = false;\r\n    this.homeActive = false;\r\n    this.friendsActive = true;\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n\r\n","/* (ignored) */"],"sourceRoot":""}